bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHe  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHe  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHe	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  length  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  length  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
7	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length  -  1;  i++)  {  unparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getName(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getName(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getName(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getBaseId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getBaseId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getBaseId(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
11	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ArrayList  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ArrayList  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ArrayList  <  ZipExtraField>());	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
12	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  new  LinkedHashMap  <  ZipExtraField>());	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
13	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(),  fields);	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
14	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(1));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(1));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(1));	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
15	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  For(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	For(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getRawId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getRawId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getRawId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getBase());  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getBase());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getBase());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getSize());  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getSize());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getSize());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
20	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  rawName);	  this.extraFields.put(fields[i],    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
21	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  byte[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  byte[0]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  byte[0]);	  this.extraFields.put(fields[i],    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
22	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
23	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(i);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(i);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(i);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
24	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
25	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.fields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.fields.clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.fields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
26	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.fields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.fields.clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.fields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
27	[BUG]  [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  LinkedHashMap  <  ZipExtraField>(),  extraFields);	  setExtra(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
28	[BUG]  [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  LinkedHashMap  <  ZipExtraField>(),  fields);	  setExtra(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
29	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getExtraId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
30	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  unparseableExtra);	  this.extraFields.put(fields[i].getExtraId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
31	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getExtraId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
32	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  HashMap  <  ZipExtraField>(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipExtraField>(),  fields);	  setExtraFields(new    HashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
33	[BUG]  [BUGGY]  setExtra(new  HashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  HashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  HashMap  <  ZipExtraField>());	  setExtraFields(new    HashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
34	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  HashMap  <  ZipExtraField>(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipExtraField>(),  extraFields);	  setExtraFields(new    HashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
35	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  unparseableExtra);	  this.extraFields.put(fields[i].getExtra(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
36	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  field);	  this.extraFields.put(fields[i].getExtra(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
37	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getExtra(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
38	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  extraFields);	  this.extraFields.put(fields[i].getExtra(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
39	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra);	  this.extraFields.put(fields[i].getExtra(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
40	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  field);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
41	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getName(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getName(),  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getName(),  null);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
42	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  fields);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
43	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields[i],  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields[i],  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  fields[i],  null);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
44	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
46	[BUG]  [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
47	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
48	[BUG]  [BUGGY]  &&  fields.length  >  0)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  fields.length  >  0)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  fields.length  >  0)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
49	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  }	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
50	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  }	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
51	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  unparseableExtra));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
52	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.class));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.class));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.class));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
53	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldType));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldType));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldType));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
54	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
55	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldName));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldName));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldName));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
56	[BUG]  [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(unparseableExtra)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
57	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  field);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  field);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
58	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  source);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  source);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  source);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
59	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  null);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
60	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  new  ZipExtraField(unparseableExtra));	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
61	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  rawName);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
62	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  unparseableExtra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  unparseableExtra,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  unparseableExtra,  null);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
63	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getOwnerId();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getOwnerId();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getOwnerId();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
64	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getExtra();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getExtra();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getExtra();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
65	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getRawId();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getRawId();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getRawId();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
66	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
67	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntry();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntry();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntry();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
68	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntryId();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntryId();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntryId();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)un  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)un  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)un	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  unparseableExtra.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  unparseableExtra.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  unparseableExtra.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  length  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  length  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparse	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
74	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
75	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  unparseableExtra);	  this.extraFields.put(fields[i].getName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
76	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getName(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  field);	  this.extraFields.put(fields[i].getName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
77	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
78	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().toArray(extraFields));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().toArray(extraFields));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().toArray(extraFields));	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
79	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>().clone());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
80	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
81	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone();	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
82	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().values());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().values());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().values());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
83	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getName(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
84	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getRawId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getRawId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getRawId(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
85	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getFullName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getFullName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getFullName(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
86	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getId(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
87	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getBaseName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getBaseName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getBaseName(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
88	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getRawName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getRawName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getRawName(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
89	[BUG]  [BUGGY]  UnparseableExtra[]  fields  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtra[]  fields  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtra[]  fields  =  new  ZipExtraField(fields[i].getHeaderId());	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
90	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields,  unparseableExtra);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
91	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields,  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields,  fields);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
92	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
93	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  unparseableExtra());	  this.extraFields.put(fields[i],    getExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
94	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  getExtra(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  getExtra(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  getExtra(),  unparseableExtra);	  this.extraFields.put(fields[i],    getExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
95	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  getExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  getExtra());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  getExtra());	  this.extraFields.put(fields[i],    getExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
96	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra,  getExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra,  getExtra());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  unparseableExtra,  getExtra());	  this.extraFields.put(fields[i],    getExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
97	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getExtra(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
98	[BUG]  [BUGGY]  setExtras(new  HashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtras(new  HashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtras(new  HashMap  <  ZipShort,  ZipExtraField>());	  setExtras(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
99	[BUG]  [BUGGY]  setExtras(new  ArrayList  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtras(new  ArrayList  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtras(new  ArrayList  <  ZipShort,  ZipExtraField>());	  setExtras(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
100	[BUG]  [BUGGY]  setExtras(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtras(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtras(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());	  setExtras(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
101	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(1);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
102	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(4);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
103	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(7);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(7);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
104	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(6);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
105	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(2);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
106	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
107	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  field);	  this.extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
108	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceId(),  fields[i]);	  this.extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
109	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra,  unparseableExtra);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
110	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields[i]);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
111	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
112	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra,  true);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
114	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  }	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
115	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  source,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  source,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  source,  unparseableExtra);	  this.extraFields.put(fields[i],    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
116	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getName(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getName(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
117	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getRawId(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getRawId(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getRawId(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
118	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getId(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getId(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getId(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
119	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getFullName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getFullName(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getFullName(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
120	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
121	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getId());	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
122	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()  -  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()  -  1);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
123	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()  +  1);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
124	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getBase());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getBase());	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
125	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),  fields);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
126	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
127	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getId());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getId());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
128	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getRawId());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getRawId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getRawId());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
129	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getUnderId());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getUnderId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getUnderId());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
130	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
131	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getBase());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getBase());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
132	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getUniqueId());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getUniqueId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getUniqueId());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
133	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
134	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
135	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  TreeMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  TreeMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipExtraField>  extraFields  =  new  TreeMap  <  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
136	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
137	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Collection  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Collection  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
138	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	List  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
139	[BUG]  [BUGGY]  UnparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtra.put(fields[i].getHeaderId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtra.put(fields[i].getHeaderId(),  fields[i]);	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
140	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  null,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  null,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  null,  unparseableExtra);	  this.extraFields.put(fields[i],    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
141	[BUG]  [BUGGY]  setExtra(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());	  setExtra(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
142	[BUG]  [BUGGY]  setExtra(new  ArrayList  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  ArrayList  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  ArrayList  <  ZipShort,  ZipExtraField>());	  setExtra(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
143	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
144	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getRawId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getRawId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getRawId());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
145	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getUnderId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getUnderId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getUnderId());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
146	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getBase());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getBase());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
147	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getId());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getId());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
148	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getSize());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getSize());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getSize());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
149	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getRealId());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getRealId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getRealId());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
150	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  unparseableExtra);	  this.extraFields.put(fields[i].getFullName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
151	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  field);	  this.extraFields.put(fields[i].getFullName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
152	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  fields);	  this.extraFields.put(fields[i].getFullName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
153	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getFullName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
154	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  extra);	  this.extraFields.put(fields[i].getFullName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
155	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedList  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
156	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	This.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    ArrayList    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
157	[BUG]  [BUGGY]  Set  <  ZipShort,  ZipExtraField>  extraFields  =  Sets.newHashSet();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort,  ZipExtraField>  extraFields  =  Sets.newHashSet();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort,  ZipExtraField>  extraFields  =  Sets.newHashSet();	  setExtraFields(new    ArrayList    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
158	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
159	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
160	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
161	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRealId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRealId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRealId(),  fields[i]);	  this.extraFields.put(fields[i].getDataId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
162	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
163	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  unparseableExtra);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  unparseableExtra);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  unparseableExtra);  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
164	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getSourceName(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
165	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  unparseableExtra);	  this.extraFields.put(fields[i].getSourceName(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
166	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getName(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
167	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getId(),  fields[i]);	  this.extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
168	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawName(),  fields[i]);	  this.extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
169	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,>();	  this.extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
170	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,  String>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,  String>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,  String>();	  this.extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
171	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedList  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedList  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedList  <  ZipExtraField>();	  this.extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
172	[BUG]  [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  This.extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	This.extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  this.extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
173	[BUG]  [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields  ==  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
174	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  unparseableExtra);	  this.extraFields.put(fields[i].getRawId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
175	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  field);	  this.extraFields.put(fields[i].getRawId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
176	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawName(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawName(),  extra);	  this.extraFields.put(fields[i].getRawId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
177	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  rawName);	  this.extraFields.put(fields[i].getRawId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
178	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  field);	  this.extraFields.put(fields[i].getExtraId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
179	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  null);	  this.extraFields.put(fields[i].getExtraId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
180	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getName(),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  rawName);	  this.extraFields.put(fields[i].getName(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
181	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  unparseableExtra);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
182	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(fields);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
183	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields,  extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
184	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
185	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
186	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getRawId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getRawId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getRawId());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
187	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getName());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getName());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getName());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
188	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getBase());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getBase());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
189	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getId());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getId());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
190	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getSize());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getSize());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getSize());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
191	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
192	[BUG]  [BUGGY]  setExtraField(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraField(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraField(new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());	  setExtraField(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
193	[BUG]  [BUGGY]  setExtraField(new  HashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraField(new  HashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraField(new  HashMap  <  ZipShort,  ZipExtraField>());	  setExtraField(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
194	[BUG]  [BUGGY]  setExtraField(new  ArrayList  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraField(new  ArrayList  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraField(new  ArrayList  <  ZipShort,  ZipExtraField>());	  setExtraField(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
195	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getExtra(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
196	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawName(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawName(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawName(),  fields);	  this.extraFields.put(fields[i].getRawId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
197	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getRawId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
198	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawType(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawType(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawType(),  fields);	  this.extraFields.put(fields[i].getRawId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
199	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawName(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawName(),  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawName(),  null);	  this.extraFields.put(fields[i].getRawId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
200	[BUG]  [BUGGY]  this.extraFields  =  new  HashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  HashMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  HashMap  <  ZipExtraField>();	  this.extraFields    =    new    TreeMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
201	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipExtraField>(fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipExtraField>(fields);	  this.extraFields    =    new    TreeMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
202	[BUG]  [BUGGY]  This.extraFields  =  new  TreeMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  This.extraFields  =  new  TreeMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	This.extraFields  =  new  TreeMap  <  ZipExtraField>();	  this.extraFields    =    new    TreeMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
203	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getName(),  unparseableExtra);	  this.externalAttributes.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
204	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getId(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getId(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getId(),  unparseableExtra);	  this.externalAttributes.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
205	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getFullName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getFullName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getFullName(),  unparseableExtra);	  this.externalAttributes.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
206	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(fields);	  this.extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
207	[BUG]  [BUGGY]  This.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  This.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	This.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
208	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
209	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  source);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  source);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  fields[i],  source);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
210	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getId(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getId(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getId(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
211	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  fields[i],  null);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
212	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraName(),  fields[i]);	  this.extraFields.put(fields[i].getHeaderName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
213	[BUG]  [BUGGY]  this.extraFields  =  new  ConcurrentHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  ConcurrentHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ConcurrentHashMap  <  ZipShort,  ZipExtraField>();	  this.extraFields    =    new    HashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
214	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getName(),  fields[i]);	  this.externalAttributes.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
215	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  fields[i],  unparseableExtra);	  this.externalAttributes.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
216	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getRawId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getRawId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getRawId(),  fields[i]);	  this.externalAttributes.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
217	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getId(),  fields[i]);	  this.externalAttributes.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
218	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getFullName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getFullName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getFullName(),  fields[i]);	  this.externalAttributes.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
219	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExtra(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExtra(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExtra(),  fields[i]);	  this.externalAttributes.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
220	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i],    field);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
221	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields[i].getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields[i].getHeaderId()));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(fields[i].getHeaderId()));	  this.extraFields.put(fields[i],    field);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
222	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  fields[i]);	  this.extraFields.put(fields[i],    field);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
228	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
229	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(4);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
230	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(2);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
231	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(6);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
232	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(3);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
233	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra,  unparseableExtra));	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
234	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra,  fields[i]));	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
235	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra),  field);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
236	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(unparseableExtra),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(unparseableExtra),  fields);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
237	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  getExtra(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  getExtra(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  getExtra(unparseableExtra));	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
238	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  rawName);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  rawName);	  this.extraFields.put(fields[i].getSourceName(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
239	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  source);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceName(),  source);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceName(),  source);	  this.extraFields.put(fields[i].getSourceName(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
240	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>(),  fields);	  setExtraFields(new    TreeMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
241	[BUG]  [BUGGY]  setExtra(new  TreeMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  TreeMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  TreeMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    TreeMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
242	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>(),  extraFields);	  setExtraFields(new    TreeMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
243	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  unparseableExtra);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
244	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  fields);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
245	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  extraFields,  null);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
246	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  TreeMap  <  ZipExtraField>(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipExtraField>(),  fields);	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
247	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  TreeMap  <  ZipExtraField>(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipExtraField>(),  extraFields);	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
248	[BUG]  [BUGGY]  setExtra(new  TreeMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  TreeMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  TreeMap  <  ZipExtraField>());	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
249	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  unparseableExtra);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
250	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  null);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
251	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  this);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  this);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
252	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  extraFields);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
253	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  true);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
254	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>(),  fields);	  setExtraFields(new    HashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
255	[BUG]  [BUGGY]  setExtra(new  HashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  HashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  HashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    HashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
256	[BUG]  [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  HashMap  <  ZipShort,  ZipExtraField>(),  extraFields);	  setExtraFields(new    HashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
257	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
258	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra,  fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra,  fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra,  fields[i]));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
259	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
260	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
261	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getId(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getId(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getId(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
262	[BUG]  [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
263	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getRawId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getRawId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getRawId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getBase());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getBase());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getBase());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getSize());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getSize());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getSize());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
266	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getName(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
267	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getRawId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getRawId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getRawId(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
268	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getId(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
269	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getBaseName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getBaseName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getBaseName(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
270	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getReturnType(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getReturnType(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getReturnType(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
271	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getRealId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getRealId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getRealId(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
272	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
273	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRealName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRealName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRealName(),  fields[i]);	  this.extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
274	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtra);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
275	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  fields);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
276	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  null);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
277	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  field);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  field);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
278	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  field.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
279	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getId(),  fields);	  this.extraFields.put(fields[i].getName(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
280	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  unparseableExtra);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
281	[BUG]  [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	LinkedHashMap  <  ZipShort,  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
282	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort>  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
283	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  HashSet  <  ZipShort>();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort>  extraFields  =  new  HashSet  <  ZipShort>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  HashSet  <  ZipShort>();	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
284	[BUG]  [BUGGY]  Collection  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Collection  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Collection  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
285	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
286	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort>  extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
287	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawType(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawType(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawType(),  fields[i]);	  this.extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
288	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
289	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(fields);	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
290	[BUG]  [BUGGY]  this.externalAttributes  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes  =  new  ArrayList  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  ArrayList  <  ZipShort,  ZipExtraField>();	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
291	[BUG]  [BUGGY]  this.externalAttributes  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes  =  new  TreeMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  TreeMap  <  ZipShort,  ZipExtraField>();	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
292	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(1);	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
293	[BUG]  [BUGGY]  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
295	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ArrayList  <  ZipShort,  ZipExtraField>(1);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
296	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(1);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
297	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  field);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
298	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  unparseableExtra);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
299	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  true);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  true);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
300	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  gpb);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  gpb);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
301	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  data);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  data);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  data);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
302	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  new  ZipExtraFieldData(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  new  ZipExtraFieldData(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  new  ZipExtraFieldData(fields[i]));	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
303	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  unparseableExtraFieldData);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  unparseableExtraFieldData);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  unparseableExtraFieldData);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
304	[BUG]  [BUGGY]  &&  unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  unparseableExtra!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
305	[BUG]  [BUGGY]  &&  fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
306	[BUG]  [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderI  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderI	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
307	[BUG]  [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeader  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeader  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeader	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
308	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getHeaderId(),  fields);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
309	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(fields,  extraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
310	[BUG]  [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  ArrayList  <  ZipExtraField>(fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  ArrayList  <  ZipExtraField>(fields);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
311	[BUG]  [BUGGY]  setExtraField(new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraField(new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraField(new  LinkedHashMap  <  ZipExtraField>());	  setExtra(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
312	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  extract);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  extract);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  extract);	  this.extraFields.put(fields[i],    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
313	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraName(),  extra);	  this.extraFields.put(fields[i].getSourceName(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
314	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(fields));	  this.extraFields.put(fields[i],    field);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
315	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  unparseableExtra));	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
316	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(fields[i]));	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
317	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  addExtra(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  addExtra(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  addExtra(unparseableExtra));	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
318	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipShort,  ZipExtraField>(extraFields);	  this.extraFields    =    new    TreeMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getId(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
321	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(fields[i].getHeaderId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(fields[i].getHeaderId());	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
322	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.get(fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
323	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.toArray(new  UnparseableExtraFieldData[fields.length]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.toArray(new  UnparseableExtraFieldData[fields.length]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.toArray(new  UnparseableExtraFieldData[fields.length]);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
324	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.toArray(new  UnparseableExtraFieldData[fields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.toArray(new  UnparseableExtraFieldData[fields.size()  ]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.toArray(new  UnparseableExtraFieldData[fields.size()  ]);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
325	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(fields));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(fields));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  new  ZipExtraField(fields));	  this.extraFields.put(fields[i].getExtra(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
326	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getShortName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getShortName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getShortName(),  fields[i]);	  this.extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
327	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].getHeaderId();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].getHeaderId();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0].getHeaderId();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
328	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getElementId();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getElementId();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getElementId();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
329	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getSourceName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getSourceName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getSourceName(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
330	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getBase(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getBase(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getBase(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
331	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getStringId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getStringId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getStringId(),  fields[i]);	  this.extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
332	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpar	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  externalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unparse	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
335	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField,  ZipExtraField>();	  this.extraFields    =    new    ArrayList    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
336	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(fields));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(fields));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(fields));	  this.extraFields.put(fields[i].getExtraId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
337	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraName(),  fields);	  this.extraFields.put(fields[i].getExtraId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
338	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(externalAttributes));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(externalAttributes));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
339	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra),  fields);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
340	[BUG]  [BUGGY]  List  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  List  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	List  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
341	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtraFields);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
342	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(7);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderI  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderI	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
345	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeader  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeader  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeader	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
346	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipExtraField>  extraFields  =  new  HashMap  <  ZipExtraField>();	  setExtraFields(new    HashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
347	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra;  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  unparseableExtra;	  this.extraFields.put(fields[i],    getExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
348	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
349	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(unparseableExtra[i]  ==  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(unparseableExtra[i]  ==  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(unparseableExtra[i]  ==  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
351	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
352	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId(),  fields);	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
353	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getDescriptor());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getDescriptor());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getDescriptor());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
354	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]!=  null)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]!=  null)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]!=  null)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
355	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
356	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
357	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getDataId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getDataId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getDataId(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
358	[BUG]  [BUGGY]  unparseableExtra.put(fields[i],  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i],  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i],  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
359	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
360	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  extraFields.put(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  extraFields.put(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  extraFields.put(fields[i].getHeaderId()	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
361	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1]);  }	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
362	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  else  {  extraFields.put(fields[0].getHeaderId(),  fields[1].getHeaderId());  }	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
363	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  setExtraFields(new  TreeMap  <  ZipExtraField>());  }	  setExtraFields(new    TreeMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
364	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields[i]);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
365	[BUG]  [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(fields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getLeaderId());  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
366	[BUG]  [BUGGY]  setExtraFields(extraFields  <  ZipExtraField>(),  new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(extraFields  <  ZipExtraField>(),  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(extraFields  <  ZipExtraField>(),  new  LinkedHashMap  <  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
367	[BUG]  [BUGGY]  setExtraFields(extraFields,  new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(extraFields,  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(extraFields,  new  LinkedHashMap  <  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
368	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  field);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  field);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
369	[BUG]  [BUGGY]  setExtra(extraFields,  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(extraFields,  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(extraFields,  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  setExtra(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
370	[BUG]  [BUGGY]  this.extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  HashMap  <  ZipShort,  ZipExtraField>(extraFields);	  this.extraFields    =    new    HashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
371	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExtra(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExtra(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExtra(),  unparseableExtra);	  this.externalAttributes.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
372	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExternalName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExternalName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExternalName(),  unparseableExtra);	  this.externalAttributes.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
373	[BUG]  [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(unparseableExtra)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(unparseableExtra)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
374	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  unparseableExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  unparseableExtraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  unparseableExtraFields);	  this.extraFields.put(fields[i].getExtra(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
375	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData,  fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData,  fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData,  fields[i]));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
376	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields[i],  unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(fields[i],  unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(fields[i],  unparseableExtra));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
377	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  extraFields);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
378	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i].getHeaderId()));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i].getHeaderId()));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i].getHeaderId()));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
379	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra,  fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra,  fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra,  fields[i]));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpar  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpar  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpar	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
381	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(5);	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
382	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExternalAttributeId(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExternalAttributeId(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExternalAttributeId(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
383	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
384	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
385	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  extraFields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
386	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExternalAttributeId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExternalAttributeId(),  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExternalAttributeId(),  null);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
387	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  unparseableExtraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  unparseableExtraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  unparseableExtraFields);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
388	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getId(),  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getId(),  null);	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
389	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
390	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
391	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
392	[BUG]  [BUGGY]  this.extraFields.put(fields[0],  new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[0],  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[0],  new  LinkedHashMap  <  ZipExtraField>());	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
393	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  setExtra(fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  setExtra(fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  setExtra(fields[i]);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
394	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  getExtra(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  getExtra(unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  getExtra(unparseableExtra);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
395	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  addExtra(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  addExtra(unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  addExtra(unparseableExtra);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
396	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  setExtra(fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  setExtra(fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  setExtra(fields[i]);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
397	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(externalAttributes);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(externalAttributes);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
398	[BUG]  [BUGGY]  This.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  This.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	This.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>();	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
399	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unpars    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
400	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getStringId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getStringId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getStringId(),  fields);	  this.extraFields.put(fields[i].getRawId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
401	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(fields));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(fields));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawId(),  new  ZipExtraField(fields));	  this.extraFields.put(fields[i].getRawId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
402	[BUG]  [BUGGY]  setExtraFields(extraFields,  new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(extraFields,  new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(extraFields,  new  LinkedHashMap  <  ZipShort,  ZipExtraField>().clone());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
403	[BUG]  [BUGGY]  setExtraFields(new  ArrayList  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  ArrayList  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  ArrayList  <  ZipShort,  ZipExtraField>().clone());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
404	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraId(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
405	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(fields[i]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(fields[i]));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(fields[i]));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
406	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(this.unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(this.unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(this.unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
407	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getId(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getId(),  null);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getId(),  null);	  this.extraFields.put(fields[i].getName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
408	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSourceId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSourceId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSourceId(),  fields);	  this.extraFields.put(fields[i].getSourceName(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
409	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  fields);	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
410	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getUnderId());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getUnderId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getUnderId());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
411	[BUG]  [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getDelimiterId());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getDelimiterId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra[i]  =  new  ZipExtraField(fields[i].getDelimiterId());	  unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
412	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getFullName(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getFullName(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getFullName(),  extraFields);	  this.extraFields.put(fields[i].getFullName(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
413	[BUG]  [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  TreeMap  <  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  TreeMap  <  ZipExtraField>(extraFields);	  this.extraFields    =    new    TreeMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
414	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtraName(),  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtraName(),  unparseableExtra);	  this.extraFields.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
415	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
416	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]  instanceof  ZipExtraFieldData)  {  unparseableExtra[i]  =(ZipExtraFieldData)unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]    instanceof    ZipExtraFieldData)    {    unparseableExtra[i]    =(ZipExtraFieldData)unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
417	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderI  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderI  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  len;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderI	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
418	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  len  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  len  =  fields.length;  i  <  size;  i++)  {  if(unparseableExtra[i]!=  null)  {  unparseableExtra[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(unparseableExtra[i]!=    null)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
419	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
420	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields.clone();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
421	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawClass(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawClass(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawClass(),  extra);	  this.extraFields.put(fields[i].getRawId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
422	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getParent();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getParent();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
423	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getId();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getId();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getId();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
424	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getImplicitReturn();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getImplicitReturn();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getImplicitReturn();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
425	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId(),  fields[i];  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId(),  fields[i];  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getHeaderId(),  fields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getHeaderId();    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
426	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getReasonId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getReasonId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getReasonId(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
427	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getSize(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getSize(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraFieldData(fields[i].getSize(),  fields[i]);	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraFieldData(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
428	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getName());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getName());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  UnparseableExtraField(fields[i].getName());	  UnparseableExtraFieldData    unparseableExtra    =    new    UnparseableExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
429	[BUG]  [BUGGY]  this.extraFields.put(fields[0],  field);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[0],  field);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[0],  field);	  this.extraFields.put(fields[i],    field);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
430	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  TreeMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  TreeMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  TreeMap  <  ZipExtraField>());	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
431	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(),  extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>(),  extraFields);	  this.extraFields.put(fields[i],    new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
432	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.values()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.values()));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.values()));	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
433	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  extraField);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  extraField);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  extraField);	  this.extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
434	[BUG]  [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>().clone());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>().clone());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  TreeMap  <  ZipShort,  ZipExtraField>().clone());	  setExtraFields(new    LinkedHashMap    <    ZipShort,    ZipExtraField>().clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
435	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawClass(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawClass(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawClass(),  fields[i]);	  this.extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
436	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawValue(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawValue(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawValue(),  fields[i]);	  this.extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
437	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	UnparseableExtraFieldData  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
438	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getName());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getName());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getName());	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
439	[BUG]  [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);	  unparseableExtra    =    new    ZipExtraField(fields[i].getHeaderId());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
440	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderId(),  new  ZipExtraField(unparseableExtra));	  this.externalAttributes.put(fields[i].getHeaderId(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
441	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getString(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getString(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getString(),  fields);	  this.extraFields.put(fields[i].getSourceName(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
442	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  additionalFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  additionalFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  additionalFields);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
443	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  this);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  this);	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
444	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getSize(),  fields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getSize(),  fields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  unparseableExtra.put(fields[i].getSize(),  fields[i]);  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
445	[BUG]  [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(8);	  this.externalAttributes    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
446	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  +  1);  }	  if(fields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
447	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  UnparseableExtraFieldData.class);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  UnparseableExtraFieldData.class);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  UnparseableExtraFieldData.class);	  this.extraFields.put(fields[i],    getExtra());    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
448	[BUG]  [BUGGY]  &&  fields[i]!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  fields[i]!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  fields[i]!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId()	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
449	[BUG]  [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  &&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	&&  unparseableExtra  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId	  if(unparseableExtra    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId()    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
450	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  ((  ZipExtraFieldData)fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  ((  ZipExtraFieldData)fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  ((  ZipExtraFieldData)fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    unparseableExtra[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
451	[BUG]  [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipShort>  extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields);	  Set    <    ZipShort>    extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
452	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	Set  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields);	  Set    <    ZipExtraField>    extraFields    =    new    LinkedHashMap    <    ZipExtraField>();    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
453	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(externalAttributes));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(externalAttributes));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
454	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getSize(),  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getSize(),  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getSize(),  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
455	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(UnparseableExtraFieldData.class));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(UnparseableExtraFieldData.class));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  new  ZipExtraField(UnparseableExtraFieldData.class));	  this.extraFields.put(fields[i].getHeaderId(),    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
456	[BUG]  [BUGGY]  setExtraFactory(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFactory(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFactory(new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  setExtraField(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
457	[BUG]  [BUGGY]  setExtraField(new  TreeMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraField(new  TreeMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraField(new  TreeMap  <  ZipShort,  ZipExtraField>());	  setExtraField(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
458	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  extra);	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
459	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i],  getExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i],  getExtra());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i],  getExtra());	  this.externalAttributes.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
460	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields  ==  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  }	  if(fields    ==    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
461	[BUG]  [BUGGY]  setExtras(new  LinkedHashMap  <  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtras(new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtras(new  LinkedHashMap  <  ZipExtraField>());	  setExtra(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
462	[BUG]  [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtra(new  LinkedHashMap  <  ZipExtraField>()));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtra(new  LinkedHashMap  <  ZipExtraField>()));	  setExtra(new    LinkedHashMap    <    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
463	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  new  LinkedHashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
464	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  new  HashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  new  HashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  new  HashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
465	[BUG]  [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  new  HashMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  new  HashMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtraFields(new  LinkedHashMap  <  ZipExtraField>(),  fields,  new  HashMap  <  ZipShort,  ZipExtraField>());	  setExtraFields(new    LinkedHashMap    <    ZipExtraField>(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
466	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExtra(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExtra(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExtra(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
467	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getHeaderName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getHeaderName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getHeaderName(),  fields[i]);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
468	[BUG]  [BUGGY]  this.externalAttributes.put(fields[i].getExternalName(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.externalAttributes.put(fields[i].getExternalName(),  extra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.externalAttributes.put(fields[i].getExternalName(),  extra);	  this.externalAttributes.put(fields[i].getHeaderId(),    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
469	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getRawClass(),  fields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getRawClass(),  fields);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getRawClass(),  fields);	  this.extraFields.put(fields[i].getRawId(),    fields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
470	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  unparseableExtra,  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  unparseableExtra,  unparseableExtra);	  this.extraFields.put(fields[i],    setExtra(unparseableExtra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
471	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getDataId(),  fields[i],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getDataId(),  fields[i],  unparseableExtra);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getDataId(),  fields[i],  unparseableExtra);	  this.extraFields.put(fields[i].getHeaderId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
472	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getHeaderId(),  fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getHeaderId(),  fields[i],  new  ZipExtraField(unparseableExtra));	  this.extraFields.put(fields[i].getHeaderId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
473	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].getHeaderId()!=  null)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].getHeaderId()!=  null)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i].getHeaderId()!=  null)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
474	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  setExtra((  ZipExtraFieldData)fields[i].getHeaderId());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  setExtra((  ZipExtraFieldData)fields[i].getHeaderId());  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0;  i  <  fields.length;  i++)  {  if(fields[i]  instanceof  ZipExtraFieldData)  {  setExtra((  ZipExtraFieldData)fields[i].getHeaderId());  }	  for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
475	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getExtra(),  extraFields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getExtra(),  extraFields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getExtra(),  extraFields[i]);	  this.extraFields.put(fields[i].getExtra(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
476	[BUG]  [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  extraFields[i]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  extraFields[i]);  }  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	if(extraFields!=  null)  {  for(int  i  =  0;  i  <  fields.length;  i++)  {  extraFields[i]  =  new  ZipExtraField(fields[i].getHeaderId(),  extraFields[i]);  }	  if(extraFields!=    null)    {    for(int    i    =    0;    i    <    fields.length;    i++)    {    extraFields[i]    =    new    ZipExtraField(fields[i].getHeaderId());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
477	[BUG]  [BUGGY]  setExtras(new  TreeMap  <  ZipShort,  ZipExtraField>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  setExtras(new  TreeMap  <  ZipShort,  ZipExtraField>());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	setExtras(new  TreeMap  <  ZipShort,  ZipExtraField>());	  setExtras(new    LinkedHashMap    <    ZipShort,    ZipExtraField>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
478	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(5);	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(8);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
479	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtra());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtra());  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  unparseableExtra());	  this.extraFields    =    new    LinkedHashMap    <    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
480	[BUG]  [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields).clone();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields).clone();  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields  =  new  LinkedHashMap  <  ZipShort,  ZipExtraField>(extraFields).clone();	  this.extraFields    =    new    LinkedHashMap    <    ZipShort,    ZipExtraField>(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
481	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getShortId(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getShortId(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getShortId(),  fields[i]);	  this.extraFields.put(fields[i].getDataId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
482	[BUG]  [BUGGY]  unparseableExtra.put(fields[i].getHeaderName(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  unparseableExtra.put(fields[i].getHeaderName(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	unparseableExtra.put(fields[i].getHeaderName(),  fields[i]);	  unparseableExtra.put(fields[i].getHeaderId(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
483	[BUG]  [BUGGY]  this.extraFields.put(fields[i],  unparseableExtraFile);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i],  unparseableExtraFile);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i],  unparseableExtraFile);	  this.extraFields.put(fields[i],    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
484	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  internalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  for(int  i  =  0,  size  =  fields.length;  i  <  internalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	for(int  i  =  0,  size  =  fields.length;  i  <  internalAttributes.length;  i++)  {  if(externalAttributes[i]  instanceof  ZipExtraFieldData  ||  externalAttributes[i]  instanceof  ZipExtraFieldData)  {  unpars	  for(int    i    =    0,    size    =    fields.length;    i    <    size;    i++)    {    if(externalAttributes[i]    instanceof    ZipExtraFieldData    ||    externalAttributes[i]    instanceof    ZipExtraFieldData)    {    unparse    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
485	[BUG]  [BUGGY]  this.extraFields.put(fields[i].getString(),  fields[i]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {  extraFields.put(fields[i].getHeaderId(),  fields[i]);  }  }  setExtra();      [BUGGY]  this.extraFields.put(fields[i].getString(),  fields[i]);  [BUGGY]        [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	301	301	2	replace	this.extraFields.put(fields[i].getString(),  fields[i]);	  this.extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
