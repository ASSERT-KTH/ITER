projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra!=null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra==null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newArrayList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],source);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getDataId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraField(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtras(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],getExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHe
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,length=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length-1;i++){unparseableExtra.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getName(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getBaseId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newArrayList<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newLinkedHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newLinkedHashMap<ZipExtraField>(1));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301For(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getRawId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getBase());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getSize());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newbyte[0]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.get(i);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)this.fields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.fields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newLinkedHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newLinkedHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),newZipExtraField(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getName(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),fields[i],null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&fields.length>0){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fieldType));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fieldName));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],source);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],unparseableExtra,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getOwnerId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getExtra();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getRawId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getEntry();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getEntryId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)un
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=unparseableExtra.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,length=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().toArray(extraFields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>().clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipShort,ZipExtraField>().values());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getFullName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getBaseName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getRawName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtra[]fields=newZipExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newArrayList<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],getExtra(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),getExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtra,getExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtras(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtras(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtras(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra,fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],source,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getRawId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getFullName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()-1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getBase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)extraFields.get(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getRawId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getUnderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getBase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getUniqueId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipExtraField>extraFields=newHashSet<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301LinkedHashMap<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipExtraField>extraFields=newTreeMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Collection<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301List<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtra.put(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],null,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getRawId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getUnderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getBase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getSize());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getRealId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301This.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort,ZipExtraField>extraFields=Sets.newHashSet();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRealId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<field.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId(),unparseableExtra);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField,>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField,String>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedList<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301This.extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields==null){for(inti=0;i<field.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newArrayList<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<field.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getRawId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getName());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getBase());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getSize());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraField(newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraField(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraField(newArrayList<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawType(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawName(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301This.extraFields=newTreeMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getId(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getFullName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301This.extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),fields[i],source);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),fields[i],null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newConcurrentHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getFullName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExtra(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(fields[i].getHeaderId()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(4);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(2);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(6);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(3);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra,unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(unparseableExtra),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],getExtra(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),rawName);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceName(),source);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipShort,ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipShort,ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newTreeMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipShort,ZipExtraField>(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newHashMap<ZipShort,ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getRawId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getBase());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra[i]=newZipExtraField(fields[i].getSize());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getRawId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getBaseName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getReturnType(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getRealId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRealName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields,fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields,null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields,field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<field.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(fields,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301LinkedHashMap<ZipShort,ZipExtraField>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newHashSet<ZipShort>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Collection<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawType(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newLinkedHashMap<ZipShort,ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newArrayList<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newTreeMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newLinkedHashMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra[i]instanceofZipExtraFieldData){for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newArrayList<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipShort,ZipExtraField>(1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),true);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),gpb);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),data);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],newZipExtraFieldData(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],unparseableExtraFieldData);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&unparseableExtra!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(fields,extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newArrayList<ZipExtraField>(fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraField(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],extract);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(fields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],addExtra(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.get(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.get(fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.toArray(newUnparseableExtraFieldData[fields.length]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields.toArray(newUnparseableExtraFieldData[fields.size()]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),newZipExtraField(fields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getShortName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[0].getHeaderId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getElementId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getSourceName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getBase(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getStringId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<externalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unparse
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),newZipExtraField(fields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraName(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301List<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields,unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(7);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeader
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipExtraField>extraFields=newHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtra;
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(unparseableExtra[i]==null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]instanceofZipExtraFieldData){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]instanceofZipExtraFieldData){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getDescriptor());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]!=null){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]instanceofZipExtraFieldData){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getDataId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i],fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){setExtraFields(newTreeMap<ZipExtraField>());}else{extraFields.put(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){setExtraFields(newTreeMap<ZipExtraField>());}else{extraFields=newLinkedHashMap<ZipShort,ZipExtraField>();extraFields.put(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){setExtraFields(newTreeMap<ZipExtraField>());}else{extraFields.put(fields[0].getHeaderId(),fields[1]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){setExtraFields(newTreeMap<ZipExtraField>());}else{extraFields.put(fields[0].getHeaderId(),fields[1].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){setExtraFields(newTreeMap<ZipExtraField>());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(fields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getLeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(extraFields<ZipExtraField>(),newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(extraFields,newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExtra(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExternalName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(unparseableExtra){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(UnparseableExtraFieldData,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(fields[i],unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i].getHeaderId()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(this.unparseableExtra,fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpar
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExternalAttributeId(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields!=null){for(inti=0;i<extraFields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExternalAttributeId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),unparseableExtraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301LinkedHashMap<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[0],newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],setExtra(fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],getExtra(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],addExtra(unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),setExtra(fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(externalAttributes);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301This.externalAttributes=newLinkedHashMap<ZipShort,ZipExtraField>();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getStringId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawId(),newZipExtraField(fields));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(extraFields,newLinkedHashMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newArrayList<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(fields[i]));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(this.unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getId(),null);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSourceId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getUnderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra[i]=newZipExtraField(fields[i].getDelimiterId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getFullName(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newTreeMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtraName(),unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<size;i++){if(unparseableExtra[i]instanceofZipExtraFieldData){unparseableExtra[i]=(ZipExtraFieldData)unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<len;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderI
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,len=fields.length;i<size;i++){if(unparseableExtra[i]!=null){unparseableExtra[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)this.extraFields.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)super.clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawClass(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getParent();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getId();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getImplicitReturn();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=(UnparseableExtraFieldData)fields[i].getHeaderId(),fields[i];
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getReasonId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraFieldData(fields[i].getSize(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newUnparseableExtraField(fields[i].getName());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[0],field);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newTreeMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newLinkedHashMap<ZipExtraField>(),extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(UnparseableExtraFieldData.values()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],newZipExtraField(unparseableExtra,fields[i]),extraField);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newTreeMap<ZipShort,ZipExtraField>().clone());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawClass(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawValue(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301UnparseableExtraFieldDataunparseableExtra=newZipExtraField(fields[i].getHeaderId());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getName());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra=newZipExtraField(fields[i].getHeaderId()+1);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderId(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getString(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),additionalFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),this);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){unparseableExtra.put(fields[i].getSize(),fields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes=newLinkedHashMap<ZipShort,ZipExtraField>(8);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()+1);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],UnparseableExtraFieldData.class);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&fields[i]!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId()
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301&&unparseableExtra==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]instanceofZipExtraFieldData){((ZipExtraFieldData)fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipShort>extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301Set<ZipExtraField>extraFields=newLinkedHashMap<ZipExtraField>(extraFields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(externalAttributes));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getSize(),newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),newZipExtraField(UnparseableExtraFieldData.class));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFactory(newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraField(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i],getExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields==null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtras(newLinkedHashMap<ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtra(newLinkedHashMap<ZipExtraField>()));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),newLinkedHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtraFields(newLinkedHashMap<ZipExtraField>(),fields,newHashMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExtra(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getHeaderName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.externalAttributes.put(fields[i].getExternalName(),extra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getRawClass(),fields);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtra,unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getDataId(),fields[i],unparseableExtra);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getHeaderId(),fields[i],newZipExtraField(unparseableExtra));
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i].getHeaderId()!=null){extraFields[i]=newZipExtraField(fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0;i<fields.length;i++){if(fields[i]instanceofZipExtraFieldData){setExtra((ZipExtraFieldData)fields[i].getHeaderId());}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getExtra(),extraFields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301if(extraFields!=null){for(inti=0;i<fields.length;i++){extraFields[i]=newZipExtraField(fields[i].getHeaderId(),extraFields[i]);}
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301setExtras(newTreeMap<ZipShort,ZipExtraField>());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(5);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipExtraField>(extraFields,unparseableExtra());
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields=newLinkedHashMap<ZipShort,ZipExtraField>(extraFields).clone();
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getShortId(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301unparseableExtra.put(fields[i].getHeaderName(),fields[i]);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i],unparseableExtraFile);
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301for(inti=0,size=fields.length;i<internalAttributes.length;i++){if(externalAttributes[i]instanceofZipExtraFieldData||externalAttributes[i]instanceofZipExtraFieldData){unpars
projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java301this.extraFields.put(fields[i].getString(),fields[i]);
