bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
2	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
3	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0));  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0));	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
4	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0));  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0));	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
5	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0));  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0));	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
6	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
7	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
8	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.size());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
9	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
10	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
11	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
12	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
13	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  2);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  2);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
14	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
15	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
16	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	result.toArray(new  ZipExtraField[result.size()  ]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
17	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
18	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.length);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.length);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
19	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  1);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  1);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
20	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.length);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.length);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
21	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
22	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
23	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
24	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
25	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0));  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
26	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
27	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
28	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
29	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable));  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable));  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
30	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values()  +  1);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values()  +  1);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
31	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
32	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
33	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
34	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
35	[BUG]  [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
36	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
37	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
38	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
39	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
40	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
41	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.clone());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.clone());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.clone());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
42	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
43	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
44	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
45	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }    [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]    new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
