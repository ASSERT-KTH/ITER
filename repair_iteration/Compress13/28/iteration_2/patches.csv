bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
2	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
3	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.size()  -  1);	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
4	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.size());	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
5	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.size());	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
6	[BUG]  [BUGGY]  HashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  HashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	HashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
7	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
8	[BUG]  [BUGGY]  Map  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Map  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Map  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
9	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.keySet());	  Set    <    ZipExtraField>    result    =    new    TreeSet    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
10	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
11	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
12	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
13	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
14	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
15	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
16	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
17	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
18	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
19	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.length);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
20	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());	  Collection    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
21	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length);	  Collection    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
22	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.length);	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
23	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
24	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
25	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
26	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).toArray());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).toArray());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).toArray());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
27	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
28	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
29	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
30	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  size);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  size);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  size);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
31	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet(),  externalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet(),  externalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
32	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this.externalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this.externalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
33	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  internalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  internalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
34	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  unparseable);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
35	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes,  internalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes,  internalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
36	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes,  size);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes,  size);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
37	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	result.toArray(new  ZipExtraField[extraFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
38	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Result.toArray(new  ZipExtraField[extraFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
39	[BUG]  [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields();  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  ZipExtraField[]  extraFields  =  getExtraFields();  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  ZipExtraField[]  extraFields  =  getExtraFields();  result.toArray(new  ZipExtraField[extraFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
40	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	result.add(new  ZipExtraField[extraFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
41	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
42	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  extraFields.size());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
43	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  insertUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  insertUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  insertUnparseable);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
44	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  rawName);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  rawName);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
45	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  unparseableExtra);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  unparseableExtra);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
46	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
47	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  result);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  result);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  result);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
48	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(unparseableExtra);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(unparseableExtra);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
49	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
50	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
51	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  1);	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
52	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  +  1);	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
53	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  2);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.size()  -  2);	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
54	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
55	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  1);	  List    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
56	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  +  1);	  List    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
57	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.keySet());	  Set    <    ZipExtraField>    result    =    new    LinkedHashSet    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
58	[BUG]  [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
59	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
60	[BUG]  [BUGGY]  Set  <  ZipExtraFieldData>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraFieldData>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraFieldData>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
61	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
62	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraFieldData>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraFieldData>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraFieldData>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
63	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.length  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.length  +  1);	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
64	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  1);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
65	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  2);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  -  2);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
66	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size()  +  1);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
67	[BUG]  [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size());	  LinkedList    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
68	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  -  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  -  1);	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
69	[BUG]  [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
70	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  +  1);	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
71	[BUG]  [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  -  2);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraFieldData>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size()  -  2);	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
72	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
73	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
74	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.entrySet());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.entrySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.entrySet());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
75	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.keySet());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
76	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  1);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
77	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  2);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length  +  2);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
78	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.length  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.length  +  1);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
79	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length  +  1);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
80	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.length);	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
81	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.length);	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
82	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
83	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
84	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
85	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
86	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
87	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
88	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
89	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
90	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
91	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
92	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
93	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(unparseableExtra));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(unparseableExtra));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
94	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  unparseableExtra);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  unparseableExtra);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
95	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable,  unparseableExtra));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable,  unparseableExtra));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable,  unparseableExtra));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
96	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(unparseable));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(unparseable));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(unparseable));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
97	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  this);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  this);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
98	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.get(0));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.get(0));	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
99	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0));	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
100	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  extraFields.size());	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
101	[BUG]  [BUGGY]  final  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
102	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
103	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0));	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
104	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this);	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
105	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
106	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.clone());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.clone());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.clone());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
107	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.clone());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.clone());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.clone());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
108	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());	  Set    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
109	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeMap  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
110	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length  +  1);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
111	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  extraFields.length);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
112	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  unparseable);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
113	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  internalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  internalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
114	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
115	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.length);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
116	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
117	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size()  -  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size()  -  1);	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
118	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size()  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.size()  +  1);	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
119	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtra);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtra);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
120	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtra);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtra);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
121	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.get(0),  unparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
122	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  unparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
123	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.get(0),  unparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
124	[BUG]  [BUGGY]  final  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
125	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
126	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length,  unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length,  unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length,  unparseable);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
127	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length,  extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.length,  extraFields.length);	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
128	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashSet  <  ZipExtraField>(extraFields.keySet());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
129	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.size());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
130	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(1));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(1));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(1));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
131	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  internalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  internalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
132	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  this);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  this);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
133	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  rawName);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  rawName);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
134	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.toArray());    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
135	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.toArray());    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
136	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  rawName);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  rawName);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
137	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.keySet()));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.keySet()));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.keySet()));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
138	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1).values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
139	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values()  +  1);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values()  +  1);	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
140	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.values()));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.values()));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.values()));	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
141	[BUG]  [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  externalAttributes);	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
142	[BUG]  [BUGGY]  final  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	  final    LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
143	[BUG]  [BUGGY]  result.add(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  result.add(new  ZipExtraField[result.size()  ]);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	result.add(new  ZipExtraField[result.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
144	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this.extraAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this.extraAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  this.extraAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
145	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  rawName);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  rawName);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
146	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  parameters);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  parameters);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  parameters);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
147	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraFieldData>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraFieldData>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraFieldData>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.size());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
148	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.clone());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.clone());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.clone());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
149	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    TreeSet    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
150	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
151	[BUG]  [BUGGY]  LinkedHashMap  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
152	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.values());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
153	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.toArray());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.toArray());    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
154	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.toArray()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.toArray()));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.toArray()));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.toArray());    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
155	[BUG]  [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	  LinkedList    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
156	[BUG]  [BUGGY]  Collections.  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collections.  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collections.  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
157	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.values());	  Collection    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
158	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.keySet());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
159	[BUG]  [BUGGY]  final  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  final  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	final  List  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
160	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
161	[BUG]  [BUGGY]  Collections.  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collections.  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collections.  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.size());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.size()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
162	[BUG]  [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedList  <  ZipExtraField>  result  =  new  LinkedList  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
163	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
164	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.size()));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.size()));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(extraFields.size()));	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
165	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  externalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length,  externalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
166	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  externalAttributes);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  externalAttributes);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
167	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1),  unparseableExtra);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(1),  unparseableExtra);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
168	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  rawName);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  rawName);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
169	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(unparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(unparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(unparseable);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
170	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
171	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  unparseableExtraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
172	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
173	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.value());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.value());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.value());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.clone());    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
174	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  sourceName);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  sourceName);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
175	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  insertUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  insertUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(includeUnparseable),  insertUnparseable);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.get(includeUnparseable));    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
176	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
177	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0).values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0).values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0).values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
178	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).evaluate());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).evaluate());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).evaluate());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
179	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).toArray());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).toArray());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0).toArray());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0).values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
180	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  HashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  HashMap  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
181	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  Set    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
182	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  insertUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  insertUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  insertUnparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
183	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  includeUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  includeUnparseable);	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    unparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
184	[BUG]  [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
185	[BUG]  [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
186	[BUG]  [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  extraFields.add(extraField);  }  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  extraFields.add(extraField);  }	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
187	[BUG]  [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  }  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	if(extraFields.size()  >  0)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  }	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
188	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());	  List    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
189	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.get(0));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashSet  <  ZipExtraField>(extraFields.get(0));	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
190	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  new  LinkedList  <  ZipExtraField>(extraFields.size());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
191	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  extraFields  =  new  HashSet  <  ZipExtraField>(extraFields.size());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
192	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.size());	  ArrayList    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
193	[BUG]  [BUGGY]  Collection  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Collection  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Collection  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.keySet());	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.keySet());    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
194	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.length);	  Set    <    ZipExtraField>    result    =    new    HashSet    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
195	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  extraFields.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  extraFields.length);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields,  extraFields.length);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
196	[BUG]  [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  TreeSet  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  extraFields  =  new  TreeSet  <  ZipExtraField>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  extraFields  =  new  TreeSet  <  ZipExtraField>(extraFields.values());	  List    <    ZipExtraField>    extraFields    =    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
197	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
198	[BUG]  [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0),  extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraField>  result  =  new  TreeSet  <  ZipExtraField>(extraFields.get(0),  extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
199	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  this.extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  this.extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraField>(extraFields.get(0),  this.extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraField>(extraFields.get(0),    extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
200	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraFieldData>(extraFields.values());	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
201	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  ArrayList  <  ZipExtraFieldData>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
202	[BUG]  [BUGGY]  Set  <  ZipExtraFieldData>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraFieldData>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraFieldData>  result  =  new  HashSet  <  ZipExtraFieldData>(extraFields.size());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
203	[BUG]  [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.size());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraFieldData>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.size());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
204	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  extractUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  extractUnparseable);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  extractUnparseable);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
205	[BUG]  [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  this);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  extraFields  =  getExtraFields(includeUnparseable,  this);	  List    <    ZipExtraField>    extraFields    =    getExtraFields(includeUnparseable);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
206	[BUG]  [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.toArray(new  ZipExtraField[extraFields.size()  ]));	  List    <    ZipExtraField>    result    =    new    LinkedList    <    ZipExtraField>(extraFields.toArray(new    ZipExtraField[extraFields.size()    ]));    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
207	[BUG]  [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  data);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  data);  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	LinkedHashMap  <  ZipExtraField>  result  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values(),  data);	  LinkedHashMap    <    ZipExtraField>    result    =    new    LinkedHashMap    <    ZipExtraField>(extraFields.values(),    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
208	[BUG]  [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  List  <  ZipExtraFieldData>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	List  <  ZipExtraFieldData>  result  =  new  LinkedList  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
209	[BUG]  [BUGGY]  Set  <  ZipExtraFieldData>  result  =  new  TreeSet  <  ZipExtraFieldData>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  ZipExtraField[]  getExtraFields(boolean  includeUnparseable)  {  if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }      [BUGGY]  Set  <  ZipExtraFieldData>  result  =  new  TreeSet  <  ZipExtraFieldData>(extraFields.values());  [BUGGY]      new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }  return  result.toArray(new  ZipExtraField[0]);  }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	326	327	2	replace	Set  <  ZipExtraFieldData>  result  =  new  TreeSet  <  ZipExtraFieldData>(extraFields.values());	  ArrayList    <    ZipExtraFieldData>    result    =    new    ArrayList    <    ZipExtraFieldData>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
