bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[extraFields.size()  ]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
2	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[extraFields.size()  ]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
3	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
4	[BUG]  [BUGGY]  return  outputFields.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  outputFields.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  outputFields.toArray(new  ZipExtraField[result.size()  ]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
5	[BUG]  [BUGGY]  result.add(new  ZipExtraField[1]);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[1]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[1]);	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
6	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
7	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  }  );  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
8	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
9	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
10	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableUnparseable  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableUnparseable  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
11	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraFieldData[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraFieldData[result.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraFieldData[result.size()  ]);	  return    result.toArray(result);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
12	[BUG]  [BUGGY]  result.add(unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(unparseableExtra);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(unparseableExtra);	  return    result.toArray(result);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
13	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
14	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.toArray(new  ZipExtraField[result.size()  -  1]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[result.size()  -  1]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
15	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  Result.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[result.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
16	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  Result.toArray(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[extraFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
17	[BUG]  [BUGGY]  result.add(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[result.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[result.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
18	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  -  1]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  -  1]);	  return    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
19	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[0]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.toArray(new  ZipExtraField[0]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[0]);	  return    result.toArray(new    ZipExtraField[1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
20	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  null  }  );  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  null  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  null  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
21	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[0]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraFieldData[0]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[0]);	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
22	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[2]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[2]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[2]);	  return    result.toArray(new    ZipExtraField[1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
23	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  1]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  1]);	  return    result.toArray(new    ZipExtraField[result.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
24	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[externalAttributes.size()]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[externalAttributes.size()]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[externalAttributes.size()]);	  return    result.toArray(new    ZipExtraField[result.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
25	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[extraFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
26	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[outputFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.toArray(new  ZipExtraField[outputFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[outputFields.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
27	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  ]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
28	[BUG]  [BUGGY]  return  outputFields.toArray(new  ZipExtraField[outputFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  outputFields.toArray(new  ZipExtraField[outputFields.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  outputFields.toArray(new  ZipExtraField[outputFields.size()  ]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
29	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(extraFields.values());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
30	[BUG]  [BUGGY]  result.add(new  ZipExtraField[externalAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[externalAttributes.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[externalAttributes.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
31	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[externalAttributes.size()  ]);	  result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
32	[BUG]  [BUGGY]  return  result.toArray(new  byte[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  byte[result.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  byte[result.size()  ]);	  return    result.toArray(result);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
33	[BUG]  [BUGGY]  return  result.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(extraFields);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(extraFields);	  return    result.toArray(result);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
34	[BUG]  [BUGGY]  return  new  ZipExtraField[result.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  new  ZipExtraField[result.size()  ];  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[result.size()  ];	  return    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
35	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  *  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  *  1]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  *  1]);	  return    result.toArray(new    ZipExtraField[result.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
36	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  }  );  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  }  );  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0]  }  );	  result.add(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
40	[BUG]  [BUGGY]  return  new  ZipExtraField[extraFields.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  new  ZipExtraField[extraFields.size()  ];  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[extraFields.size()  ];	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
41	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }    [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[extraFields.size()  +  1]);	  return    result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
