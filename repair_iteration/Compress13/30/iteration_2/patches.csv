bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  extraFields.toArray(new  ZipExtraField[extraFields.size()]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields.toArray(new  ZipExtraField[extraFields.size()]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields.toArray(new  ZipExtraField[extraFields.size()]);	  return    result.toArray(new    ZipExtraField[extraFields.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
2	[BUG]  [BUGGY]  return  outputFields.toArray(new  ZipExtraField[extraFields.size()]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  outputFields.toArray(new  ZipExtraField[extraFields.size()]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  outputFields.toArray(new  ZipExtraField[extraFields.size()]);	  return    result.toArray(new    ZipExtraField[extraFields.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
3	[BUG]  [BUGGY]  return  extraFields.toArray(new  ZipExtraField[result.size()]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields.toArray(new  ZipExtraField[result.size()]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields.toArray(new  ZipExtraField[result.size()]);	  return    result.toArray(new    ZipExtraField[extraFields.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
4	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[1]);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
5	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[0],  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[0],  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[0],  unparseableExtra);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
6	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[]  {  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[]  {  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[]  {  unparseableExtra  }  );	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
7	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[size()  ]);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
8	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[]  {  unparseable,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[]  {  unparseable,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[]  {  unparseable,  unparseableExtra  }  );	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
9	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[]  {  unparseableExtra,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[]  {  unparseableExtra,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[]  {  unparseableExtra,  unparseableExtra  }  );	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
10	[BUG]  [BUGGY]  result.add(new  ZipExtraField[outputFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[outputFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[outputFields.size()  ]);	  return    outputFields.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
11	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0],  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0],  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0],  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
12	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[1]  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[1]  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[1]  }  );	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
13	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0]  },  unparseableExtra);	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
14	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0]  },  null);	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
15	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0]  },  extraFields);	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
16	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0],  rawName  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0],  rawName  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0],  rawName  }  );	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
17	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  0]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  0]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  0]);	  return    result.toArray(new    ZipExtraField[result.size()    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
18	[BUG]  [BUGGY]  Result.toArray(result,  new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(result,  new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(result,  new  ZipExtraField[extraFields.size()  ]);	  Result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
19	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[extraFields.size()  +  1]);	  Result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
20	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);	  Result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
21	[BUG]  [BUGGY]  return  result.toArray(new  byte[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  byte[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  byte[extraFields.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
22	[BUG]  [BUGGY]  result.toArray(new  byte[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  byte[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  byte[result.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
23	[BUG]  [BUGGY]  return  result.toArray(new  byte[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  byte[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  byte[unparseableExtra.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
24	[BUG]  [BUGGY]  result.toArray(new  byte[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  byte[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  byte[extraFields.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
25	[BUG]  [BUGGY]  return  result.toArray(new  byte[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  byte[result.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  byte[result.size()  -  1]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
26	[BUG]  [BUGGY]  return  result.toArray(new  byte[result.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  byte[result.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  byte[result.size()  +  1]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
27	[BUG]  [BUGGY]  result.toArray(new  ZipExtraFieldData[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraFieldData[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraFieldData[result.size()  ]);	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
28	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraFieldData[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraFieldData[result.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraFieldData[result.size()  -  1]);	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
29	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraFieldData[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraFieldData[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraFieldData[extraFields.size()  ]);	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
30	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraFieldData[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraFieldData[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraFieldData[unparseableExtra.size()  ]);	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
31	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraFieldData[result.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraFieldData[result.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraFieldData[result.size()  +  1]);	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
32	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraFieldData[outputFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraFieldData[outputFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraFieldData[outputFields.size()  ]);	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
33	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[outputFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(new  ZipExtraField[outputFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[outputFields.size()  ]);	  result.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
34	[BUG]  [BUGGY]  result.add(new  ZipExtraField[2]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[2]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[2]);	  result.add(new    ZipExtraField[1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
35	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  rawName,  unparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  rawName,  unparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  rawName,  unparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
36	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  source,  unparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  source,  unparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  source,  unparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
37	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName,  unparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName,  unparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  sourceName,  unparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
38	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  sourceName  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
39	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  },  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  },  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra  },  extraFields);	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
40	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  rawName  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  rawName  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  rawName  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
41	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  null  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  null  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra,  null  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
42	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  rawName,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  rawName,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  rawName,  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
43	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  sourceName,  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
44	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  source,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  source,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  source,  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
45	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  input  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  input  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra,  input  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
46	[BUG]  [BUGGY]  result.add(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(extraFields);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
47	[BUG]  [BUGGY]  result.add(includeUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(includeUnparseable);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(includeUnparseable);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
48	[BUG]  [BUGGY]  result.add(extraField);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(extraField);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(extraField);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
49	[BUG]  [BUGGY]  result.addAll(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.addAll(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.addAll(extraFields);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
50	[BUG]  [BUGGY]  result.add(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(externalAttributes);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
51	[BUG]  [BUGGY]  result.add(extraFields[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(extraFields[0]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(extraFields[0]);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
52	[BUG]  [BUGGY]  return  new  ZipExtraField[result.size()  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[result.size()  +  1];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[result.size()  +  1];	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
53	[BUG]  [BUGGY]  return  new  ZipExtraField[unparseableExtra.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[unparseableExtra.size()  ];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[unparseableExtra.size()  ];	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
54	[BUG]  [BUGGY]  return  new  ZipExtraField[result.size()  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[result.size()  -  1];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[result.size()  -  1];	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
55	[BUG]  [BUGGY]  result  =  new  ZipExtraField[result.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result  =  new  ZipExtraField[result.size()  ];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result  =  new  ZipExtraField[result.size()  ];	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
56	[BUG]  [BUGGY]  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
57	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(result.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ArrayList  <  ZipExtraField>(result.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(result.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
58	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
59	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(extraFields.size());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
60	[BUG]  [BUGGY]  result.add(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(extraFields.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
61	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(unparseableExtra.values());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ArrayList  <  ZipExtraField>(unparseableExtra.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(unparseableExtra.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
62	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  result.toArray(extraFields);  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  result.toArray(extraFields);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  result.toArray(extraFields);  }	  return    result.toArray(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
63	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);	  return    result.toArray(new    ZipExtraField[result.size()    ])?    null    :    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
64	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  -  1]);	  return    result.toArray(new    ZipExtraField[result.size()    ])?    null    :    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
65	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[unparseableExtra.size()  ]);	  return    result.toArray(new    ZipExtraField[result.size()    ])?    null    :    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
66	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  ])?  null  :  result.toArray(new  ZipExtraField[result.size()  +  1]);	  return    result.toArray(new    ZipExtraField[result.size()    ])?    null    :    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
67	[BUG]  [BUGGY]  result.add(new  ZipExtraField[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[unparseableExtra.size()  ]);	  result.add(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
68	[BUG]  [BUGGY]  Result.add(new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.add(new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.add(new  ZipExtraField[extraFields.size()  ]);	  result.add(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
69	[BUG]  [BUGGY]  result.add(new  ZipExtraField[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[result.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[result.size()  -  1]);	  result.add(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
70	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[extraAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[extraAttributes.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[extraAttributes.size()  ]);	  result.toArray(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
71	[BUG]  [BUGGY]  result.add(new  ZipExtraField[externalAttributes.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[externalAttributes.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[externalAttributes.size()  +  1]);	  result.add(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
72	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extendAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[extendAttributes.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[extendAttributes.size()  ]);	  result.add(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
73	[BUG]  [BUGGY]  return  new  ZipExtraField[extraFields.size()  +  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[extraFields.size()  +  1];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[extraFields.size()  +  1];	  return    new    ZipExtraField[extraFields.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
74	[BUG]  [BUGGY]  result.add(extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(extraFields.size()  ]);	  return    new    ZipExtraField[extraFields.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
75	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[1]);	  result.toArray(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
76	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[result.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[result.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[result.size()  +  1]);	  result.toArray(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
77	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  null  }  );  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  null  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  null  }  );	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
78	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[unparseableExtraFields.size()  ]);	  return    result.toArray(new    ZipExtraField[unparseableExtraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
79	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[unparseableExtraFields.size()  +  1]);	  return    result.toArray(new    ZipExtraField[unparseableExtraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
80	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[]  {  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[]  {  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[]  {  }  );	  result.add(new    ZipExtraField[]    {    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
81	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  0  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  0  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  0  }  );	  result.add(new    ZipExtraField[]    {    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
82	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  },  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  },  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  },  unparseableExtra);	  result.add(new    ZipExtraField[]    {    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
83	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtra.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtra.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[unparseableExtra.size()  +  1]);	  return    result.toArray(new    ZipExtraField[unparseableExtra.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
84	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtra.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[unparseableExtra.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[unparseableExtra.size()  -  1]);	  return    result.toArray(new    ZipExtraField[unparseableExtra.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
85	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(result.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(result.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(result.values());  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
86	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(result.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(result.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(result.values());  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
87	[BUG]  [BUGGY]  if(extraFields  ==  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields  ==  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields  ==  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
88	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[extraFields.size()  -  1]);	  return    result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
89	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[result.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(new  ZipExtraField[result.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[result.size()  -  1]);	  Result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
90	[BUG]  [BUGGY]  Result.toArray(new  ZipExtraField[result.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(new  ZipExtraField[result.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(new  ZipExtraField[result.size()  +  1]);	  Result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
91	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  rawName,  unparseableUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  rawName,  unparseableUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  rawName,  unparseableUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
92	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  source,  unparseableUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  source,  unparseableUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  source,  unparseableUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
93	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName,  unparseableUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  sourceName,  unparseableUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  sourceName,  unparseableUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
94	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  unparseableUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  unparseableUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra,  unparseableUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
95	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  0  },  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  0  },  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  0  },  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
96	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra,  includeUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra,  includeUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra,  includeUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
97	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  null,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  null,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  null,  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
98	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  },  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  },  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  },  extraFields);	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
99	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  0,  unparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  0,  unparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  0,  unparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
100	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra,  null  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra,  null  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra,  null  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
101	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
102	[BUG]  [BUGGY]  if(includeUnparseable)  {  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(includeUnparseable)  {  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(includeUnparseable)  {  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
103	[BUG]  [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(includeUnparseable  ||  extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(includeUnparseable  ||  extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
104	[BUG]  [BUGGY]  if(includeUnparseable)  {  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(includeUnparseable)  {  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(includeUnparseable)  {  if(extraFields  ==  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
105	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
106	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[extraFields.size()  +  1]);	  result.add(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
107	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[extraFields.size()  -  1]);	  result.add(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
108	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  +  2]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  +  2]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[extraFields.size()  +  2]);	  result.add(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
109	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[extraFields.size()  +  1]);	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
110	[BUG]  [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
111	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[extraFields.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[extraFields.size()  -  1]);	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
112	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  *  2]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  *  2]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  *  2]);	  return    result.toArray(new    ZipExtraField[result.size()    *    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
113	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtra.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtra.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[unparseableExtra.size()  +  1]);	  result.toArray(new    ZipExtraField[unparseableExtra.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
114	[BUG]  [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtra.size()  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraField[unparseableExtra.size()  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraField[unparseableExtra.size()  -  1]);	  result.toArray(new    ZipExtraField[unparseableExtra.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
115	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  },  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  },  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra  },  externalAttributes);	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
116	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  },  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra  },  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra  },  null);	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
117	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableextra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableextra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableextra  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
118	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  source  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  source  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  source  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
119	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  enum  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  enum  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  enum  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
120	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  1]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[extraFields.size()  1]);	  return    result.toArray(new    ZipExtraField[extraFields.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
121	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[2]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[2]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[2]);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
122	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[]);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
123	[BUG]  [BUGGY]  return  new  LinkedList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  LinkedList  <  ZipExtraField>(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  LinkedList  <  ZipExtraField>(extraFields.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
124	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(unparseableExtraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ArrayList  <  ZipExtraField>(unparseableExtraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(unparseableExtraFields.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
125	[BUG]  [BUGGY]  return  new  ArrayList  <  ZipExtraField>(unparseUnparseable.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ArrayList  <  ZipExtraField>(unparseUnparseable.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ArrayList  <  ZipExtraField>(unparseUnparseable.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
126	[BUG]  [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
127	[BUG]  [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  extraFields  =  new  LinkedHashMap  <  ZipExtraField>();  }	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
128	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  LinkedList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  LinkedList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  LinkedList  <  ZipExtraField>(extraFields.values());  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
129	[BUG]  [BUGGY]  while(extraFields!=  null)  {  result.add(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  while(extraFields!=  null)  {  result.add(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	while(extraFields!=  null)  {  result.add(extraFields.values());	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
130	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[]  {  null  }  );  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[]  {  null  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[]  {  null  }  );	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
131	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  null  },  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  null  },  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  null  },  unparseableExtra);	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
132	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  null,  null  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  null,  null  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  null,  null  }  );	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
133	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  ==  null?  new  ZipExtraField[0]  :  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  ==  null?  new  ZipExtraField[0]  :  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  ==  null?  new  ZipExtraField[0]  :  unparseableExtra);	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
134	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  ==  null?  new  ZipExtraField[0]  :  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  ==  null?  new  ZipExtraField[0]  :  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseable,  unparseableExtra  ==  null?  new  ZipExtraField[0]  :  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
135	[BUG]  [BUGGY]  return  new  ZipExtraField[extraFields.size()  -  1];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[extraFields.size()  -  1];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[extraFields.size()  -  1];	  return    new    ZipExtraField[extraFields.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
136	[BUG]  [BUGGY]  return  new  ZipExtraField[outputFields.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[outputFields.size()  ];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[outputFields.size()  ];	  return    new    ZipExtraField[extraFields.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
137	[BUG]  [BUGGY]  return  outputFields.toArray(result);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  outputFields.toArray(result);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  outputFields.toArray(result);	  return    outputFields.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
138	[BUG]  [BUGGY]  return  new  ZipExtraField[result.size()  *  2];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[result.size()  *  2];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[result.size()  *  2];	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
139	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[extraFields.size()  ]);	  result.add(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
140	[BUG]  [BUGGY]  return  extraFields.toArray(new  byte[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields.toArray(new  byte[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields.toArray(new  byte[result.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
141	[BUG]  [BUGGY]  return  result.toArray(new  String[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  String[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  String[result.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
142	[BUG]  [BUGGY]  return  extraFields.toArray(result);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields.toArray(result);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields.toArray(result);	  return    result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
143	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseibleExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseibleExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseibleExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
144	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData(extraFields));  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData(extraFields));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData(extraFields));	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
145	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  *  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[extraFields.size()  *  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[extraFields.size()  *  1]);	  return    result.toArray(new    ZipExtraField[result.size()    *    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
146	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[result.size()  ]);	  result.add(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
147	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.remove(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.remove(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.remove(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
148	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(externalAttributes);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(externalAttributes);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(externalAttributes);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
149	[BUG]  [BUGGY]  while(extraFields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  while(extraFields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	while(extraFields!=  null)  {  extraFields  =  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
150	[BUG]  [BUGGY]  return  extraFields!=  null?  new  ArrayList  <  ZipExtraField>(extraFields):  result.toArray(result);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields!=  null?  new  ArrayList  <  ZipExtraField>(extraFields):  result.toArray(result);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields!=  null?  new  ArrayList  <  ZipExtraField>(extraFields):  result.toArray(result);	  return    result.toArray(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
151	[BUG]  [BUGGY]  return  extraFields!=  null?  new  ArrayList  <  ZipExtraField>()  :  result.toArray(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields!=  null?  new  ArrayList  <  ZipExtraField>()  :  result.toArray(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields!=  null?  new  ArrayList  <  ZipExtraField>()  :  result.toArray(extraFields);	  return    result.toArray(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
152	[BUG]  [BUGGY]  result.add(new  ZipExtraField[3]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[3]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[3]);	  result.add(new    ZipExtraField[1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
153	[BUG]  [BUGGY]  Result.toArray(result);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(result);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(result);	  Result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
154	[BUG]  [BUGGY]  Result.toArray(extraFields,  new  ZipExtraField[extraFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  Result.toArray(extraFields,  new  ZipExtraField[extraFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	Result.toArray(extraFields,  new  ZipExtraField[extraFields.size()  ]);	  Result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
155	[BUG]  [BUGGY]  result.toArray(new  ZipExtraFieldData[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.toArray(new  ZipExtraFieldData[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.toArray(new  ZipExtraFieldData[unparseableExtra.size()  ]);	  result.toArray(new    ZipExtraField[unparseableExtra.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
156	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[3]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[3]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[3]);	  return    result.toArray(new    ZipExtraField[2]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
157	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[0],  this);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[0],  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[0],  this);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
158	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[size]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[size]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[size]);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
159	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[4]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[4]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[4]);	  result.add(new    ZipExtraFieldData[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
160	[BUG]  [BUGGY]  return  new  ZipExtraField(result.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField(result.size()  ];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField(result.size()  ];	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
161	[BUG]  [BUGGY]  return  new  ZipExtraField[result.size()  ],  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[result.size()  ],  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[result.size()  ],  extraFields);	  return    new    ZipExtraField[result.size()    ];    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
162	[BUG]  [BUGGY]  return  new  ZipExtraFieldData[result.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraFieldData[result.size()  ];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraFieldData[result.size()  ];	  return    result.toArray(new    ZipExtraFieldData[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
163	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0],  extra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0],  extra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0],  extra  }  );	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
164	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0]  },  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0]  },  extra);	  result.add(new    ZipExtraField[]    {    new    byte[0]    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
165	[BUG]  [BUGGY]  return  outputFields.toArray(new  ZipExtraField[result.size()  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  outputFields.toArray(new  ZipExtraField[result.size()  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  outputFields.toArray(new  ZipExtraField[result.size()  +  1]);	  return    outputFields.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
166	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  +  1])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[result.size()  +  1])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[result.size()  +  1])?  null  :  result.toArray(new  ZipExtraField[result.size()  ]);	  return    result.toArray(new    ZipExtraField[result.size()    ])?    null    :    result.toArray(new    ZipExtraField[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
167	[BUG]  [BUGGY]  return  new  ZipExtraField[unparseableExtraFields.size()  ];  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  new  ZipExtraField[unparseableExtraFields.size()  ];  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  new  ZipExtraField[unparseableExtraFields.size()  ];	  return    result.toArray(new    ZipExtraField[unparseableExtraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
168	[BUG]  [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  }  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size());  }	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
169	[BUG]  [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size()  ]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size()  ]);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.size()  ]);  }	  result.toArray(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
170	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  insertUnparseable,  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
171	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  insertUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
172	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  inclusionUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  inclusionUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  inclusionUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
173	[BUG]  [BUGGY]  result.add(new  ZipExtraFieldData[externalAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraFieldData[externalAttributes.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraFieldData[externalAttributes.size()  ]);	  result.add(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
174	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  getUnparseableExtra()  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  getUnparseableExtra()  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  getUnparseableExtra()  }  );	  result.add(new    ZipExtraField[]    {    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
175	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  },  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  },  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  },  extraFields);	  result.add(new    ZipExtraField[]    {    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
176	[BUG]  [BUGGY]  return  inputFields.toArray(new  ZipExtraField[result.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  inputFields.toArray(new  ZipExtraField[result.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  inputFields.toArray(new  ZipExtraField[result.size()  ]);	  return    outputFields.toArray(new    ZipExtraField[outputFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
177	[BUG]  [BUGGY]  result.remove(new  ZipExtraField[unparseableExtra.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.remove(new  ZipExtraField[unparseableExtra.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.remove(new  ZipExtraField[unparseableExtra.size()  ]);	  result.toArray(new    ZipExtraField[unparseableExtra.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
178	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  }	  result.toArray(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
179	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[externalAttributes.size()  ]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  result.toArray(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
180	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(externalAttributes!=  null)  {  result.toArray(new  ZipExtraField[extraFields.size()  ]);  }	  result.toArray(new    ZipExtraField[externalAttributes.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
181	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  ArrayList  <  ZipExtraField>()  }  );  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  ArrayList  <  ZipExtraField>()  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  ArrayList  <  ZipExtraField>()  }  );	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
182	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  ArrayList  <  ZipExtraField>(extraFields)  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  ArrayList  <  ZipExtraField>(extraFields)  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  ArrayList  <  ZipExtraField>(extraFields)  }  );	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
183	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  null  },  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  null  },  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  null  },  extraFields);	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
184	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0  }  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[0  }  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[0  }  ]);	  result.add(new    ZipExtraField[]    {    null    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
185	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields  ==  null  ||  extraFields.size()  ==  0)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields  ==  null  ||  extraFields.size()  ==  0)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
186	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  else  {  extraFields.add(extraField);  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    else    {    extraFields.add(extraField);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
187	[BUG]  [BUGGY]  return  extractUnparseable?  result.toArray(extraFields):  new  ArrayList  <  ZipExtraField>(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extractUnparseable?  result.toArray(extraFields):  new  ArrayList  <  ZipExtraField>(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extractUnparseable?  result.toArray(extraFields):  new  ArrayList  <  ZipExtraField>(extraFields);	  return    result.toArray(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
188	[BUG]  [BUGGY]  return  extractExtraFields.toArray(result);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extractExtraFields.toArray(result);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extractExtraFields.toArray(result);	  return    result.toArray(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
189	[BUG]  [BUGGY]  if(result!=  null)  {  result.toArray(new  ZipExtraField[0]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(result!=  null)  {  result.toArray(new  ZipExtraField[0]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(result!=  null)  {  result.toArray(new  ZipExtraField[0]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  result.toArray(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
190	[BUG]  [BUGGY]  if(result!=  null)  {  result.toArray(new  ZipExtraField[0]);  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(result!=  null)  {  result.toArray(new  ZipExtraField[0]);  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(result!=  null)  {  result.toArray(new  ZipExtraField[0]);  }	  result.toArray(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
191	[BUG]  [BUGGY]  if(result!=  null)  {  result.add(new  ZipExtraField[0]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(result!=  null)  {  result.add(new  ZipExtraField[0]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(result!=  null)  {  result.add(new  ZipExtraField[0]);  }  else  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  result.toArray(new    ZipExtraField[0]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
192	[BUG]  [BUGGY]  return  result.toArray(new  byte[outputFields.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  byte[outputFields.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  byte[outputFields.size()  ]);	  return    result.toArray(new    byte[result.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
193	[BUG]  [BUGGY]  return  extraFields.toArray(result.toArray(new  ZipExtraField[extraFields.size()]);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields.toArray(result.toArray(new  ZipExtraField[extraFields.size()]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields.toArray(result.toArray(new  ZipExtraField[extraFields.size()]);	  return    result.toArray(new    ZipExtraField[extraFields.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
194	[BUG]  [BUGGY]  return  extraFields.toArray(result.toArray(new  ZipExtraField[extraFields.size()]));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  extraFields.toArray(result.toArray(new  ZipExtraField[extraFields.size()]));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  extraFields.toArray(result.toArray(new  ZipExtraField[extraFields.size()]));	  return    result.toArray(new    ZipExtraField[extraFields.size()    +    1]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
195	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  (UnparseableExtra)unparseable,  unparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  (UnparseableExtra)unparseable,  unparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  (UnparseableExtra)unparseable,  unparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseable,    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
196	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  insertUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  insertUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra,  insertUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
197	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  0  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  unparseableExtra,  0  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  unparseableExtra,  0  }  );	  result.add(new    ZipExtraField[]    {    unparseableExtra    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
198	[BUG]  [BUGGY]  result.add(UnparseableExtraFieldData.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(UnparseableExtraFieldData.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(UnparseableExtraFieldData.extraFields);	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
199	[BUG]  [BUGGY]  result.add(new  ZipExtraField(extraFields));  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField(extraFields));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField(extraFields));	  result.add(unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
200	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(extraFields.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
201	[BUG]  [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(result.values());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(result.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	ArrayList  <  ZipExtraField>  extraFields  =  new  ArrayList  <  ZipExtraField>(result.values());	  return    new    ArrayList    <    ZipExtraField>(extraFields.values());    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
202	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[4]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[4]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[4]);	  return    result.toArray(new    ZipExtraField[2]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
203	[BUG]  [BUGGY]  return  result.toArray(new  ZipExtraField[outerAttributes.size()  ]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  return  result.toArray(new  ZipExtraField[outerAttributes.size()  ]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	return  result.toArray(new  ZipExtraField[outerAttributes.size()  ]);	  return    result.toArray(new    ZipExtraField[externalAttributes.size()]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
204	[BUG]  [BUGGY]  if(extraFields  ==  null  ||  extraFields.values()!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields  ==  null  ||  extraFields.values()!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields  ==  null  ||  extraFields.values()!=  null)  {  return  new  ArrayList  <  ZipExtraField>(extraFields.values());  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
205	[BUG]  [BUGGY]  if(extraFields!=  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  if(extraFields!=  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	if(extraFields!=  null)  {  return  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  }	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
206	[BUG]  [BUGGY]  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  new  LinkedHashMap  <  ZipExtraField>(extraFields.values());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	new  LinkedHashMap  <  ZipExtraField>(extraFields.values());	  if(extraFields    ==    null)    {    return    new    ArrayList    <    ZipExtraField>(extraFields.values());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
207	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  new  ZipExtraField[]  {  unparseableUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  new  ZipExtraField[]  {  unparseableUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  new  ZipExtraField[]  {  unparseableUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
208	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[unparseableUnparseable]  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  new  byte[unparseableUnparseable]  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  new  byte[unparseableUnparseable]  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
209	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  includeUnparseable  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  includeUnparseable  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  includeUnparseable  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
210	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  unparseableUnparseable);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  unparseableUnparseable);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  unparseableUnparseable);	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
211	[BUG]  [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  new  ZipExtraField[]  {  unparseable  UnparseableExtra  }  );  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  new  ZipExtraField[]  {  unparseable  UnparseableExtra  }  );  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[]  {  insertUnparseable?  null  :  insertUnparseable  :  new  ZipExtraField[]  {  unparseable  UnparseableExtra  }  );	  result.add(new    ZipExtraField[]    {    unparseableUnparseable    }    );    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
212	[BUG]  [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  ],  this);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (extraFields  ==  null)  {  return  !includeUnparseable  ||  unparseableExtra  ==  null  ?  new  ZipExtraField[0]  :  new  ZipExtraField[]  {  unparseableExtra  };  }  List<ZipExtraField>  result  =  new  ArrayList<ZipExtraField>(extraFields.values());  if  (includeUnparseable  &&  unparseableExtra  !=  null)  {  result.add(unparseableExtra);  }      [BUGGY]  result.add(new  ZipExtraField[extraFields.size()  ],  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  getExtraFields  [RETURN_TYPE]  ZipExtraField[]  boolean  includeUnparseable  [VARIABLES]  byte[]  extra  rawName  boolean  includeUnparseable  List  result  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	331	331	2	replace	result.add(new  ZipExtraField[extraFields.size()  ],  this);	  result.add(new    ZipExtraField[extraFields.size()    ]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
