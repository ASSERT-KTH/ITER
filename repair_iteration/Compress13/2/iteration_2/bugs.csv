bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  extraFields.put(fields[i].getDataId(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getDataId(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getDataId(),  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  extraFields.put(fields[i].getValue(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getValue(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getValue(),  fields[i]);	  extraFields.put(fields[i].getDataId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getId(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  fields[i]);	  extraFields.put(fields[i].getDataId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  extraFields.put(fields[i].getDataId(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getDataId(),  fields[i],  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getDataId(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getSourceName(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  unparseableExtra);	  extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getSourceName(),  field);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  field);	  extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)unparseableExtra.clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)unparseableExtra.clone();  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)unparseableExtra.clone();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].clone();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getValue();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getValue();  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getValue();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getExtra(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  unparseableExtra);	  extraFields.put(fields[i].getExtra(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  extraFields.put(fields[i].getRaw(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getRaw(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRaw(),  fields[i]);	  extraFields.put(fields[i].getExtra(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getName(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getName(),  field);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  field);	  extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]));  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getFullName(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  unparseableExtra);	  extraFields.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getId(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  unparseableExtra);	  extraFields.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawName(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getRawName(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawName(),  fields[i]);	  extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawId(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getRawId(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawId(),  unparseableExtra);	  extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawType(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getRawType(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawType(),  fields[i]);	  extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawClass(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getRawClass(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawClass(),  fields[i]);	  extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawId(),  field);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getRawId(),  field);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawId(),  field);	  extraFields.put(fields[i].getRawId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.class);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.class);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.class);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  this);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  this);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  this);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  field);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  field);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  extraFields.put(field,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(field,  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(field,  unparseableExtra);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  field);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getFullName(),  field);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  field);	  extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]));  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  extraFields.put(fields[i].getEntryName(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getEntryName(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getEntryName(),  fields[i]);	  extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields[i];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields[i];  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields[i];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].unparse();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].unparse();  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].unparse();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  extraFields.put(fields[i].getLocalName(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getLocalName(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getLocalName(),  fields[i]);	  extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
38	[BUG]  [BUGGY]  extraFields.put(fields[i],  this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  this);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  this);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
39	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]));  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]));	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  extraFields.put(fields[i],  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  null);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  null);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  extraFields.put(fields[i],  data);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  data);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  data);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getQualifiedName(),  fields[i]);	  extraFields.put(fields[i].getSourceName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  extraFields.put(fields[i].getShortName(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getShortName(),  fields[i]);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getShortName(),  fields[i]);	  extraFields.put(fields[i].getFullName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.clone();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i];  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i];	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getExtra(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  extraFields.put(fields[i].getHeaderName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getHeaderName(),  unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getHeaderName(),  unparseableExtra);	  extraFields.put(fields[i].getHeaderId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED);	  extraFields.put(fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i].unparseableExtra);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getName(),  fields[i].unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i].unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[unparseableExtra);  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {    [BUGGY]  extraFields.put(fields[i].getName(),  fields[unparseableExtra);  [BUGGY]    }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i]);    	non-compiled	[CE]  ']'  expected	1	None	replace
