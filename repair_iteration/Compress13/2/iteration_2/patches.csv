bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[unparseableExtra]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[unparseableExtra]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[unparseableExtra]);	  extraFields.put(fields[i].getName(),    fields[unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  this);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  this);	  extraFields.put(fields[i].getName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(UnparseableExtraFieldData.class));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(UnparseableExtraFieldData.class));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(UnparseableExtraFieldData.class));	  extraFields.put(fields[i].getName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields[i].clone();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields[i].clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)extraFields[i].clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)unparseableExtra.clone();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.unparseableExtra.clone();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.unparseableExtra.clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.unparseableExtra.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)unparseableExtra.clone();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)unparseableExtra.clone();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX,  unparseableExtra);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNPREFIX);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
9	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  UnparseableExtraFieldData.UNPREFIX);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  UnparseableExtraFieldData.UNPREFIX);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNPREFIX);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
10	[BUG]  [BUGGY]  if(unparseableExtra!=  null)  {  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  if(unparseableExtra!=  null)  {  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX);  }  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	if(unparseableExtra!=  null)  {  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX);  }	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNPREFIX);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
11	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.super.clone();  [CE]  '('  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.super.clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.super.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  '('  expected	44	None	replace
12	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawType(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawType(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawType(),  unparseableExtra);	  extraFields.put(fields[i].getRawType(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
13	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawType(),  field);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawType(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawType(),  field);	  extraFields.put(fields[i].getRawType(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
14	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawType(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawType(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawType(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getRawType(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
15	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawType(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawType(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawType(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getRawType(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
16	[BUG]  [BUGGY]  extraFields.put(fields[i].getShortName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getShortName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getShortName(),  unparseableExtra);	  extraFields.put(fields[i].getShortName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
17	[BUG]  [BUGGY]  extraFields.put(fields[i].getShortName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getShortName(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getShortName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getShortName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
18	[BUG]  [BUGGY]  extraFields.put(fields[i].getShortName(),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getShortName(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getShortName(),  field);	  extraFields.put(fields[i].getShortName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
19	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setExtra(unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setExtra(unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setExtra(unparseableExtra);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[0];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].this;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].this;  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].this;	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  null);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  null);	  extraFields.put(fields[i],    unparseableExtra,    this);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
23	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  false);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  false);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  false);	  extraFields.put(fields[i],    unparseableExtra,    this);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
24	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  ZipExtraField(this));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  ZipExtraField(this));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  new  ZipExtraField(this));	  extraFields.put(fields[i],    unparseableExtra,    this);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
25	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields[i];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.extraFields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)unparseableExtraFields[i];  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)unparseableExtraFields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)unparseableExtraFields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
27	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i].clone();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i].clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i].clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
28	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawName(),  unparseableExtra);	  extraFields.put(fields[i].getHeaderName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
29	[BUG]  [BUGGY]  extraFields.put(fields[i].getString(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getString(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getString(),  unparseableExtra);	  extraFields.put(fields[i].getHeaderName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
30	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra.class);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra.class);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra.class);	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
31	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.class,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.class,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.class,  unparseableExtra);	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
32	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra.get(fields[i]));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra.get(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra.get(fields[i]));	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
33	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra.cloneTree());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra.cloneTree());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra.cloneTree());	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
34	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra.getValue());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra.getValue());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra.getValue());	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
35	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawName(),  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawName(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawName(),  field);	  extraFields.put(fields[i].getRawName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
36	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawName(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getRawName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
37	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawName(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawName(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawName(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getRawName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  field);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  field);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
39	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  this);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
40	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  true);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  true);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
41	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  unparseableExtra));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
42	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  data);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  data);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  data);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
43	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getId(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  field);	  extraFields.put(fields[i].getId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
44	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getId(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getId(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getId(),  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
46	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  UnparseableExtraFieldData.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getId(),  UnparseableExtraFieldData.class);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  UnparseableExtraFieldData.class);	  extraFields.put(fields[i].getId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
47	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.EMPTY);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.EMPTY);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.EMPTY);	  extraFields.put(fields[i],    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
48	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getFullName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
49	[BUG]  [BUGGY]  extraFields.put(fields[i].getLocalName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getLocalName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getLocalName(),  unparseableExtra);	  extraFields.put(fields[i].getFullName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  rawName);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  rawName);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  fields[i],  rawName);	  extraFields.put(fields[i].getSourceName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  source);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  source);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  fields[i],  source);	  extraFields.put(fields[i].getSourceName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  fields[i],  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getSourceName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  fields[i],  this);	  extraFields.put(fields[i].getSourceName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  ExtraFields.put(fields[i].getName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ExtraFields.put(fields[i].getName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	ExtraFields.put(fields[i].getName(),  unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i].unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
55	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  rawName);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  rawName);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  rawName);	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
56	[BUG]  [BUGGY]  extraFields.put(fields[i].getLocalName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getLocalName(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getLocalName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
57	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  source);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  source);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  source);	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
58	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
59	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(extra);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(extra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(extra);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra,  unparseableExtra);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
61	[BUG]  [BUGGY]  (ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  (ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	(ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  not  a  statement	11	None	replace
62	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(externalAttributes);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(externalAttributes);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(externalAttributes);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra,  fields[i]);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra,  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(unparseableExtra,  fields[i]);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(this.unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(this.unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(this.unparseableExtra);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getQualifiedName(),  unparseableExtra);	  extraFields.put(fields[i].getQualifiedName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
66	[BUG]  [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getQualifiedName(),  field);	  extraFields.put(fields[i].getQualifiedName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
67	[BUG]  [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getQualifiedName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getQualifiedName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
68	[BUG]  [BUGGY]  UnparseableExtraFieldData  extraFields[i]  =(UnparseableExtraFieldData)extraFields[i];  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  extraFields[i]  =(UnparseableExtraFieldData)extraFields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  extraFields[i]  =(UnparseableExtraFieldData)extraFields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields[i];    	non-compiled	[CE]  ']'  expected	35	None	replace
69	[BUG]  [BUGGY]  UnparseableExtraFieldData  extraFields[i]  =(UnparseableExtraFieldData)fields[i];  [CE]  ']'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  extraFields[i]  =(UnparseableExtraFieldData)fields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  extraFields[i]  =(UnparseableExtraFieldData)fields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields[i];    	non-compiled	[CE]  ']'  expected	35	None	replace
70	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setValue(unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setValue(unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setValue(unparseableExtra);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getContent();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getContent();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getContent();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getInput();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getInput();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getInput();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  extraFields.put(fields[i].getValue(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getValue(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getValue(),  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  extraFields.put(fields[i].getReferenceName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getReferenceName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getReferenceName(),  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldType));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldType));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldType));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
76	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.class));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.class));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.class));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
77	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldName));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldName));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fieldName));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
78	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(this.unparseableExtra));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
79	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getExtra(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  field);	  extraFields.put(fields[i].getExtra(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  this);	  extraFields.put(fields[i].getExtra(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
82	[BUG]  [BUGGY]  extraFields.put(fields[i].getEntryName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getEntryName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getEntryName(),  unparseableExtra);	  extraFields.put(fields[i].getEntryName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
83	[BUG]  [BUGGY]  extraFields.put(fields[i].getEntryName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getEntryName(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getEntryName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getEntryName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
84	[BUG]  [BUGGY]  extraFields.put(fields[i].getEntryName(),  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getEntryName(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getEntryName(),  field);	  extraFields.put(fields[i].getEntryName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
85	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].get();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].get();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].get();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].unparse();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
86	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setExtra();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setExtra();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].setExtra();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].unparse();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
87	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawClass(),  field);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawClass(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawClass(),  field);	  extraFields.put(fields[i].getRawId(),    field);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
88	[BUG]  [BUGGY]  extraFields.put(i,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(i,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(i,  unparseableExtra);	  extraFields.put(field,    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
89	[BUG]  [BUGGY]  extraFields.put(i,  field);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(i,  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(i,  field);	  extraFields.put(field,    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
90	[BUG]  [BUGGY]  extraFields.put(field,  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(field,  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(field,  new  ZipExtraField(unparseableExtra));	  extraFields.put(field,    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
91	[BUG]  [BUGGY]  extraFields.put(unparseableExtra,  field);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(unparseableExtra,  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(unparseableExtra,  field);	  extraFields.put(field,    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
92	[BUG]  [BUGGY]  extraFields.put(fields[i].getValue(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getValue(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getValue(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  extraFields.put(fields[i].getReferenceName(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getReferenceName(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getReferenceName(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  extraFields.put(fields[i].getDataId(),  fields[i],  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getDataId(),  fields[i],  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getDataId(),  fields[i],  this);	  extraFields.put(fields[i].getDataId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
95	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawClass(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawClass(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawClass(),  unparseableExtra);	  extraFields.put(fields[i].getRawId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
96	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  data);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  data);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  data);	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
97	[BUG]  [BUGGY]  ExtraFields.put(fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ExtraFields.put(fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	ExtraFields.put(fields[i],  unparseableExtra);	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
98	[BUG]  [BUGGY]  additionalFields.put(fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  additionalFields.put(fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	additionalFields.put(fields[i],  unparseableExtra);	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
99	[BUG]  [BUGGY]  extraFields.put(fields[i],  field,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  field,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  field,  unparseableExtra);	  extraFields.put(fields[i],    unparseableExtra,    field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
100	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  fields[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  fields[i]);	  extraFields.put(fields[i],    unparseableExtra,    field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
101	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i],    unparseableExtra,    field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
102	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getSourceName(),  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getSourceName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED,  unparseableExtra);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNSPECIFIED);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
104	[BUG]  [BUGGY]  if(unparseableExtra!=  null)  {  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  if(unparseableExtra!=  null)  {  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED);  }  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	if(unparseableExtra!=  null)  {  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED);  }	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNSPECIFIED);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
105	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  UnparseableExtraFieldData.UNSPECIFIED);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  UnparseableExtraFieldData.UNSPECIFIED);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  UnparseableExtraFieldData.UNSPECIFIED);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNSPECIFIED);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
106	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  rawName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  rawName);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  rawName);	  extraFields.put(fields[i].getName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  source);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  source);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  source);	  extraFields.put(fields[i].getName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
108	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  null);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  null);	  extraFields.put(fields[i].getName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  this);	  extraFields.put(fields[i].getName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  UnparseableExtraFieldData.class);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  UnparseableExtraFieldData.class);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  UnparseableExtraFieldData.class);	  extraFields.put(fields[i].getName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
112	[BUG]  [BUGGY]  additionalFields.put(fields[i].getName(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  additionalFields.put(fields[i].getName(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	additionalFields.put(fields[i].getName(),  unparseableExtra);	  extraFields.put(fields[i].getName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
113	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawClass(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawClass(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawClass(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getRawClass(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
114	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawClass(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawClass(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawClass(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getRawClass(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
115	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  LinkedHashMap  <  ZipExtraField>());	  extraFields.put(fields[i],    null);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
116	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i]),  unparseableExtra);	  extraFields.put(fields[i].getName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
117	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
118	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i],  unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i],  unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i],  unparseableExtra));	  extraFields.put(fields[i].getName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
119	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra,  fields[i]));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra,  fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra,  fields[i]));	  extraFields.put(fields[i].getName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
120	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  unparseableExtra,  fields[i]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  unparseableExtra,  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  unparseableExtra,  fields[i]);	  extraFields.put(fields[i].getExtra(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
121	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  new  ZipExtraField(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  new  ZipExtraField(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  fields[i],  new  ZipExtraField(unparseableExtra));	  extraFields.put(fields[i].getExtra(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
122	[BUG]  [BUGGY]  extraFields.put(fields[i].getKey(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getKey(),  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getKey(),  fields[i]);	  extraFields.put(fields[i].getValue(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
123	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getFactory();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getFactory();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getFactory();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
124	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].translate(unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].translate(unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].translate(unparseableExtra);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getField(this);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getField(this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getField(this);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
126	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i]),  unparseableExtra);	  extraFields.put(fields[i].getFullName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
127	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i],  unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i],  unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  new  ZipExtraField(fields[i],  unparseableExtra));	  extraFields.put(fields[i].getFullName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
128	[BUG]  [BUGGY]  extraFields.put(fields[i].getLocalName(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getLocalName(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getLocalName(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getFullName(),    new    ZipExtraField(fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
129	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  UnparseableExtraFieldData.class);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  UnparseableExtraFieldData.class);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  UnparseableExtraFieldData.class);	  extraFields.put(fields[i].getFullName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
130	[BUG]  [BUGGY]  extraFields.put(fields[i].getRaw(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRaw(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRaw(),  unparseableExtra);	  extraFields.put(fields[i].getRaw(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
131	[BUG]  [BUGGY]  extraFields.put(fields[i].getRaw(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRaw(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRaw(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getRaw(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
132	[BUG]  [BUGGY]  extraFields.put(fields[i].getRaw(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRaw(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRaw(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getRaw(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
133	[BUG]  [BUGGY]  extraFields.put(fields[i].getRaw(),  field);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRaw(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRaw(),  field);	  extraFields.put(fields[i].getRaw(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
134	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntry();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntry();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getEntry();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
135	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].extra();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].extra();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].extra();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
136	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i  +  1];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i  +  1];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields.length);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields.length);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields.length);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  ';'  expected	8	None	replace
138	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields.length;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields.length;  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields.length;	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  ';'  expected	8	None	replace
139	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i].unparseableExtra);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i].unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(fields[i].unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i].unparseableExtra);    	non-compiled	[CE]  ')'  expected	50	None	replace
140	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  units[i].unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  units[i].unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  units[i].unparseableExtra);	  extraFields.put(fields[i].getName(),    fields[i].unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
141	[BUG]  [BUGGY]  extraFields.put(unparseableExtra,  UnparseableExtraFieldData.class);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(unparseableExtra,  UnparseableExtraFieldData.class);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(unparseableExtra,  UnparseableExtraFieldData.class);	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
142	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.newInstance());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.newInstance());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.newInstance());	  extraFields.put(fields[i],    UnparseableExtraFieldData.class);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
143	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  LinkedHashMap  <  ZipExtraField>());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  LinkedHashMap  <  ZipExtraField>());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  new  LinkedHashMap  <  ZipExtraField>());	  extraFields.put(fields[i],    unparseableExtra,    this);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
144	[BUG]  [BUGGY]  extraFields.put(fields[i].getId(),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getId(),  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getId(),  this);	  extraFields.put(fields[i].getId(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
145	[BUG]  [BUGGY]  extraFields.put(fields[i].getKey(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getKey(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getKey(),  unparseableExtra);	  extraFields.put(fields[i].getSourceName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
146	[BUG]  [BUGGY]  extraFields.put(field,  fields[i].getName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(field,  fields[i].getName());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(field,  fields[i].getName());	  extraFields.put(fields[i].getName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
147	[BUG]  [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getSourceName(),  fields[i],  null);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getSourceName(),  fields[i],  null);	  extraFields.put(fields[i].getSourceName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
148	[BUG]  [BUGGY]  extraFields.put(fields[i].getValue(),  field);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getValue(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getValue(),  field);	  extraFields.put(fields[i].getSourceName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
149	[BUG]  [BUGGY]  extraFields.put(field,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(field,  i);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(field,  i);	  extraFields.put(field,    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
150	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  0);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  0);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
151	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra),  fields);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra),  fields);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraField(unparseableExtra),  fields);	  extraFields.put(fields[i].getName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
152	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  fields[i],  this);	  extraFields.put(fields[i].getExtra(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
153	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  fields[i],  null);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  fields[i],  null);	  extraFields.put(fields[i].getExtra(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
154	[BUG]  [BUGGY]  extraFields.put(fields[i].getExtra(),  unparseableExtra,  fields);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getExtra(),  unparseableExtra,  fields);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getExtra(),  unparseableExtra,  fields);	  extraFields.put(fields[i].getExtra(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
155	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  fields);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  fields);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  fields);	  extraFields.put(fields[i],    unparseableExtra,    field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
156	[BUG]  [BUGGY]  extraFields.put(field,  unparseableExtra,  field);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(field,  unparseableExtra,  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(field,  unparseableExtra,  field);	  extraFields.put(fields[i],    unparseableExtra,    field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra),  fields);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra),  fields);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra),  fields);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
158	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(i);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)super.get(i);	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
159	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
160	[BUG]  [BUGGY]  extraFields.put(fields[i].getUnknownName(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getUnknownName(),  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getUnknownName(),  fields[i]);	  extraFields.put(fields[i].getShortName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
161	[BUG]  [BUGGY]  UnparseableExtraFieldData  extraFields  =(UnparseableExtraFieldData)fields[i];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  extraFields  =(UnparseableExtraFieldData)fields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  extraFields  =(UnparseableExtraFieldData)fields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
162	[BUG]  [BUGGY]  UnparseableExtraFieldData  extraFields  =(UnparseableExtraFieldData)extraFields[i];  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  extraFields  =(UnparseableExtraFieldData)extraFields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  extraFields  =(UnparseableExtraFieldData)extraFields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
163	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[0]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[0]);	  extraFields.put(fields[i].getName(),    fields[unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
164	[BUG]  [BUGGY]  extraFields.put(fields[i].getString(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getString(),  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getString(),  fields[i]);	  extraFields.put(fields[i].getRawName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
165	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getParent();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getParent();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getParent();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].unparse();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
166	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getExtra();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getExtra();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getExtra();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].unparse();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
167	[BUG]  [BUGGY]  extraFields.put(unparseableExtra,  UnparseableExtraFieldData.UNSPECIFIED);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(unparseableExtra,  UnparseableExtraFieldData.UNSPECIFIED);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(unparseableExtra,  UnparseableExtraFieldData.UNSPECIFIED);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNSPECIFIED);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
168	[BUG]  [BUGGY]  extraFields.put(field,  fields[i].getFullName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(field,  fields[i].getFullName());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(field,  fields[i].getFullName());	  extraFields.put(fields[i].getFullName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
169	[BUG]  [BUGGY]  extraFields.put(fields[i].getLocalName(),  field);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getLocalName(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getLocalName(),  field);	  extraFields.put(fields[i].getFullName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
170	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getElement();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getElement();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getElement();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
171	[BUG]  [BUGGY]  extraFields.put(fields[i],  null,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  null,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  null,  unparseableExtra);	  extraFields.put(fields[i],    null);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
172	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.EMPTY_STRING);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.EMPTY_STRING);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.EMPTY_STRING);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
173	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.EMPTY);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.EMPTY);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.EMPTY);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
174	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.UNPREFIX);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(UnparseableExtraFieldData.UNPREFIX);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
175	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.valueOf(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.valueOf(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.valueOf(unparseableExtra));	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
176	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  data));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  data));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  data));	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
177	[BUG]  [BUGGY]  extraFields.put(unparseableExtra,  UnparseableExtraFieldData.UNPREFIX);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(unparseableExtra,  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(unparseableExtra,  UnparseableExtraFieldData.UNPREFIX);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNPREFIX);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
178	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  this);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  this);	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
179	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  null);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  null);	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
180	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].extraFields;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].extraFields;  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].extraFields;	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
181	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i  +  1];  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i  +  1];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)this.extraFields[i  +  1];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)this.extraFields[i];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
182	[BUG]  [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getQualifiedName(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getQualifiedName(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getQualifiedName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
183	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getImplicitReturn();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getImplicitReturn();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].getImplicitReturn();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].getValue();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
184	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(unparseableExtra,  fields[i]),  unparseableExtra);	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
185	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData,  fields[i]));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData,  fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData,  fields[i]));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra,    fields[i]));    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
186	[BUG]  [BUGGY]  extraFields.put(fields[i].getKey(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getKey(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getKey(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getSourceName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
187	[BUG]  [BUGGY]  UnparseableExtraFieldData  super  =(UnparseableExtraFieldData)super.clone();  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  super  =(UnparseableExtraFieldData)super.clone();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  super  =(UnparseableExtraFieldData)super.clone();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)super.clone();    	non-compiled	[CE]  not  a  statement	44	None	replace
188	[BUG]  [BUGGY]  extraFields.put(fields[i].getValue(),  new  ZipExtraField(fields[i]));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getValue(),  new  ZipExtraField(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getValue(),  new  ZipExtraField(fields[i]));	  extraFields.put(fields[i].getValue(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
189	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].remove();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].remove();  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i].remove();	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i].clone();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
190	[BUG]  [BUGGY]  extraFields.put(fields[i].getString(),  field);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getString(),  field);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getString(),  field);	  extraFields.put(fields[i].getFullName(),    field);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
191	[BUG]  [BUGGY]  extraFields.put(0,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(0,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(0,  unparseableExtra);	  extraFields.put(field,    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
192	[BUG]  [BUGGY]  extraFields.put(fields[i].getRaw(),  fields[i].unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRaw(),  fields[i].unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRaw(),  fields[i].unparseableExtra);	  extraFields.put(fields[i].getRaw(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
193	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.values()));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.values()));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.values()));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
194	[BUG]  [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.UNPREFIX));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.UNPREFIX));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  new  ZipExtraField(UnparseableExtraFieldData.UNPREFIX));	  extraFields.put(fields[i],    new    ZipExtraField(unparseableExtra));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
195	[BUG]  [BUGGY]  extraFields.put(fields[i].getData(),  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getData(),  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getData(),  unparseableExtra);	  extraFields.put(fields[i].getExtra(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
196	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  UnparseableExtraFieldData.UNPREFIX);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  fields[i],  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  fields[i],  UnparseableExtraFieldData.UNPREFIX);	  extraFields.put(fields[i].getName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
197	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  data);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  data);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  data);	  extraFields.put(fields[i].getName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
198	[BUG]  [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraFieldData(unparseableExtra));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getName(),  new  ZipExtraFieldData(unparseableExtra));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getName(),  new  ZipExtraFieldData(unparseableExtra));	  extraFields.put(fields[i].getName(),    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
199	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX  +  1);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.UNPREFIX  +  1);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNPREFIX);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
200	[BUG]  [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  UnparseableExtraFieldData.UNPREFIX);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getFullName(),  fields[i],  UnparseableExtraFieldData.UNPREFIX);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getFullName(),  fields[i],  UnparseableExtraFieldData.UNPREFIX);	  extraFields.put(fields[i].getFullName(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
201	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.unparse(fields[i]));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.unparse(fields[i]));  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.unparse(fields[i]));	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
202	[BUG]  [BUGGY]  ExtraFieldData  extraFields  =  extraFields.get(fields[i],  data);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ExtraFieldData  extraFields  =  extraFields.get(fields[i],  data);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	ExtraFieldData  extraFields  =  extraFields.get(fields[i],  data);	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
203	[BUG]  [BUGGY]  extraFields.put(fields[i],  this.unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  this.unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  this.unparseableExtra);	  extraFields.put(fields[i],    data);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
204	[BUG]  [BUGGY]  extraFields.put(fields[i].getEntryName(),  fields[i].unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getEntryName(),  fields[i].unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getEntryName(),  fields[i].unparseableExtra);	  extraFields.put(fields[i].getEntryName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
205	[BUG]  [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields[i];  [CE]  ']'  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields[i];  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	UnparseableExtraFieldData  unparseableExtra  =(UnparseableExtraFieldData)fields[i],  extraFields[i];	  UnparseableExtraFieldData    unparseableExtra    =(UnparseableExtraFieldData)fields[i];    	non-compiled	[CE]  ']'  expected	8	None	replace
206	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  unparseableExtra);	  extraFields.put(fields[i],    unparseableExtra,    field);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
207	[BUG]  [BUGGY]  extraFields.put(fields[i].getUpperBound(),  fields[i]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getUpperBound(),  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getUpperBound(),  fields[i]);	  extraFields.put(fields[i].getLocalName(),    fields[i]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
208	[BUG]  [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED,  fields[i]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED,  fields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  UnparseableExtraFieldData.UNSPECIFIED,  fields[i]);	  extraFields.put(fields[i],    UnparseableExtraFieldData.UNSPECIFIED);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
209	[BUG]  [BUGGY]  extraFields.put(fields[i].getRawId(),  fields[i],  unparseableExtra);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i].getRawId(),  fields[i],  unparseableExtra);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i].getRawId(),  fields[i],  unparseableExtra);	  extraFields.put(fields[i].getDataId(),    fields[i],    unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
210	[BUG]  [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  LinkedHashMap  <  ZipShort,  String>());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  extraFields.put(fields[i],  unparseableExtra,  new  LinkedHashMap  <  ZipShort,  String>());  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	extraFields.put(fields[i],  unparseableExtra,  new  LinkedHashMap  <  ZipShort,  String>());	  extraFields.put(fields[i],    unparseableExtra,    this);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
211	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(extraFields);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(extraFields);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(extraFields);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
212	[BUG]  [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(extraFields[i]);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtraFields(ZipExtraField[]  fields)  {  extraFields  =  new  LinkedHashMap<ZipShort,  ZipExtraField>();  for  (int  i  =  0;  i  <  fields.length;  i++)  {  if  (fields[i]  instanceof  UnparseableExtraFieldData)  {  unparseableExtra  =  (UnparseableExtraFieldData)  fields[i];  }  else  {      [BUGGY]  ((  ZipExtraFieldData)fields[i]).setExtra(extraFields[i]);  [BUGGY]      }  }  setExtra();  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtraFields  [RETURN_TYPE]  void  ZipExtraField[]  fields  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  fields  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.6324555320336759	297	297	2	replace	((  ZipExtraFieldData)fields[i]).setExtra(extraFields[i]);	  ((    ZipExtraFieldData)fields[i]).setExtra(unparseableExtra);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
