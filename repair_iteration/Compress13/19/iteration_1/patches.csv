bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.method  =  method.doubleValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.doubleValue();  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.doubleValue();	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
2	[BUG]  [BUGGY]  this.method  =  method.intValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.intValue()  +  1;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  +  1;	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
3	[BUG]  [BUGGY]  this.method  =  method.intValue()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.intValue()  -  1;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  -  1;	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
4	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.substring(0,  method.length()  -  1);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length()  -  1);	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
5	[BUG]  [BUGGY]  this.method  =  method.intValue()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.intValue()  *  2;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  *  2;	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
6	[BUG]  [BUGGY]  this.method  =  method.intValue()  /  2;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.intValue()  /  2;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  /  2;	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
7	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.internalAttributes);	  this.method    =    new    ZipArchiveEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
8	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes);	  this.method    =    new    ZipArchiveEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
9	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(0);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(0);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(0);	  this.method    =    new    ZipArchiveEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
10	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(null);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(null);	  this.method    =    new    ZipArchiveEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
11	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  rawName);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
12	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  method);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
13	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
14	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  sourceName);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
15	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
16	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(localAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(localAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(localAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
17	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
18	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  null);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  null);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
19	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
20	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  true);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
21	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
22	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
23	[BUG]  [BUGGY]  gpb.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  gpb.setMethod(method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setMethod(method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
24	[BUG]  [BUGGY]  this.internalAttributes.put(method,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(method,  extra);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  extra);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
25	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra));  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(extra));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
26	[BUG]  [BUGGY]  super.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  super.setMethod(method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
27	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method));  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
28	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
29	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(entryName,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
30	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(method,  rawName);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  rawName);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
31	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
32	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
33	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(method,  true);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  true);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
34	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method]);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
35	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(method,  false);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  false);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
36	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
37	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
38	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internal);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
39	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.setMethod(method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
40	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method]);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method]);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
41	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.getMethod(method,  rawName);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(method,  rawName);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
42	[BUG]  [BUGGY]  this.method  =  method  +  1L;  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method  +  1L;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  1L;	  this.method    =    method    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
43	[BUG]  [BUGGY]  this.method  =  method  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method  +  2;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  2;	  this.method    =    method    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
44	[BUG]  [BUGGY]  this.method  =  method  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method  /  1;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  /  1;	  this.method    =    method    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
45	[BUG]  [BUGGY]  this.method  =  method  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method  -  1;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  -  1;	  this.method    =    method    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
46	[BUG]  [BUGGY]  this.method  =  method  +  3;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method  +  3;  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  3;	  this.method    =    method    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
47	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBase());	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
48	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  +  1);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod()  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
49	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  true);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
50	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  null);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  null);	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
51	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass());	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
52	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
53	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.setMethod(method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
54	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
55	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(method,  rawName);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(method,  rawName);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
56	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method]);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method]);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method]);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
57	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(scope,  method);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
58	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.extraFields);	  this.method    =    new    ZipArchiveEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
59	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
60	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extra);	  this.method    =    MethodUtils.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
61	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields());	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
62	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
63	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
64	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  +  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod()  +  method);	  this.method    =    new    ZipArchiveEntry(getMethod());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
65	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.extra);	  this.method    =    MethodUtil.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
66	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(rawName,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(rawName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
67	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  String(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(method,  new  String(extra));  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  String(extra));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
68	[BUG]  [BUGGY]  setMethod(method,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  setMethod(method,  new  LinkedHashMap  <  String,Object>());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(method,  new  LinkedHashMap  <  String,Object>());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
69	[BUG]  [BUGGY]  this.method  =  method.byteValue();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.byteValue();  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.byteValue();	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
70	[BUG]  [BUGGY]  this.method  =  method.toUpperCase();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.toUpperCase();  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase();	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
71	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extra);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
72	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
73	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extra);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
74	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
75	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
76	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
77	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  name);	  this.method    =    new    ZipArchiveEntry(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
78	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
79	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
80	[BUG]  [BUGGY]  gpb.setInternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  gpb.setInternalAttributes(extraFields);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(extraFields);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
81	[BUG]  [BUGGY]  gpb.setInternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  gpb.setInternalAttributes(internalAttributes);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(internalAttributes);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
82	[BUG]  [BUGGY]  this.extraFields.put(entryName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.extraFields.put(entryName,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  method);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
83	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  LinkedHashMap());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
84	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  String(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.internalAttributes.put(entryName,  new  String(extra));  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  String(extra));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
85	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap());	  this.method    =    new    ZipArchiveEntry();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
86	[BUG]  [BUGGY]  this.method  =  method.toString();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.toString();  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toString();	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
87	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.intValue());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  method.substring(0,  method.intValue());  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.intValue());	  this.method    =    method.intValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
88	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
89	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(     "ZIP  compression  method  can  not  be  negative:     "  +  method);  }    [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method);  [BUGGY]    }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method);	  this.method    =    MethodUtilities.getMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
