bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(rawName,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(rawName,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(rawName,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
2	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  entryName);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
3	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  rawName);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
4	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  method);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
5	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  name);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  name);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
6	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
7	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transientAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transientAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transientAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
8	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  size);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  size);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
9	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  platform);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  platform);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
10	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
11	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  size);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  size);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
12	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  platform);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  platform);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
13	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
14	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  extractFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  extractFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  extractFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
15	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
16	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  internalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  internalAttributes,  method);	  this.method    =    new    ZipArchiveEntry(extraFields,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
17	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getField(),  method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getField(),  method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getField(),  method,  false);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
18	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass(),  method,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
19	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRaw(),  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRaw(),  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRaw(),  method,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
20	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.sourceName);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
21	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  methods);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
22	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  0);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
23	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  null);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
24	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  0);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
25	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  null);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
26	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  true);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
27	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(method,  this.internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  this.internalAttributes);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
28	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extra);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
29	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  false);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
30	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(gpb,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(gpb,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(gpb,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
31	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
32	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
33	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(gpb,  extractFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(gpb,  extractFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(gpb,  extractFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
34	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  rawName);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
35	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getBase(),  getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getBase(),  getMethod());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getBase(),  getMethod());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
36	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
37	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBase()  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
38	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseValue());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseValue());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseValue());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
39	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseName());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseName());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseName());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
40	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getRawClass());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getRawClass());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getRawClass());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
41	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.extra,  method);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
42	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.extra,  rawName);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
43	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.extra,  sourceName);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
44	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.extra,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.extra,  null);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
45	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.source,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.source,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.source,  method);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
46	[BUG]  [BUGGY]  this.internalAttributes.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  entryName);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
47	[BUG]  [BUGGY]  this.internalAttributes.set(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.set(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.set(method,  entryName);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
48	[BUG]  [BUGGY]  this.externalAttributes.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.externalAttributes.put(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.externalAttributes.put(method,  entryName);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
49	[BUG]  [BUGGY]  this.internalAttributes.remove(method);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.remove(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.remove(method);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
50	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  null,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  null,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  null,  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
51	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
52	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  filter);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  filter);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  filter);	  this.method    =    new    ZipArchiveEntry(getMethod(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
53	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  methods);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  methods);	  this.method    =    new    ZipArchiveEntry(getMethod(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
54	[BUG]  [BUGGY]  this.internalAttributes.put(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  rawName);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
55	[BUG]  [BUGGY]  this.internalAttributes.put(method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  method);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
56	[BUG]  [BUGGY]  this.internalAttributes.put(extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(extra,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(extra,  method);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
57	[BUG]  [BUGGY]  this.internalAttributes.put(method,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  source);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  source);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
58	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
59	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
60	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
61	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
62	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields()  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
63	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  scope);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  scope);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  scope);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
64	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getExternalAttributes(),  method,  getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getExternalAttributes(),  method,  getMethod());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getExternalAttributes(),  method,  getMethod());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
65	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
66	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
67	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  size);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  size);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  size);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
68	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes()  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
69	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  platform);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(),  platform);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
70	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.internalAttributes,  method);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
71	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalMethod);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalMethod);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.internalMethod);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
72	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  method);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
73	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(null,  this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(null,  this.internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(null,  this.internalAttributes);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
74	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalAttributes,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalAttributes,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.internalAttributes,  methods);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
75	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.baseMethod);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.baseMethod);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.baseMethod);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
76	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extra);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
77	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  0);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  0);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
78	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  null);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
79	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extraFields);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
80	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.sourceName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.sourceName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.sourceName,  method);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
81	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  true);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
82	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length());	  this.method    =    method.substring(0,    method.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
83	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length()  +  1);	  this.method    =    method.substring(0,    method.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
84	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length())+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length())+  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length())+  1;	  this.method    =    method.substring(0,    method.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
85	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length();	  this.method    =    method.substring(0,    method.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
86	[BUG]  [BUGGY]  this.method  =  method.longValue()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.longValue()  -  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.longValue()  -  1;	  this.method    =    method.intValue()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
87	[BUG]  [BUGGY]  this.method  =  method.intValue()  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  *  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  *  1;	  this.method    =    method.intValue()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
88	[BUG]  [BUGGY]  this.method  =  method.longValue();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.longValue();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.longValue();	  this.method    =    method.intValue()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
89	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  String(rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  String(rawName));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  String(rawName));	  this.internalAttributes.put(method,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
90	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  new  String(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(rawName,  new  String(extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(rawName,  new  String(extra));	  this.internalAttributes.put(method,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
91	[BUG]  [BUGGY]  this.internalAttributes.put(extra,  new  String(method));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(extra,  new  String(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(extra,  new  String(method));	  this.internalAttributes.put(method,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
92	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  String(rawName),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  String(rawName),  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  String(rawName),  extra);	  this.internalAttributes.put(method,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
93	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.sourceName);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
94	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  methods);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
95	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  null);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
96	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  0);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
97	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.entryName);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
98	[BUG]  [BUGGY]  this.method  =  method  /  3;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  /  3;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  /  3;	  this.method    =    method    +    3;    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
99	[BUG]  [BUGGY]  this.method  =  method  -  3;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  -  3;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  -  3;	  this.method    =    method    +    3;    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
100	[BUG]  [BUGGY]  this.method  =  method  +  0;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  +  0;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  0;	  this.method    =    method    +    3;    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
101	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extra,  method);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
102	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extra,  rawName);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
103	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extra,  sourceName);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
104	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extra,  null);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
105	[BUG]  [BUGGY]  this.method  =  method.toUpperCase(Locale.ENGLISH);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase(Locale.ENGLISH);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase(Locale.ENGLISH);	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
106	[BUG]  [BUGGY]  this.method  =  method.toLowerCase();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toLowerCase();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toLowerCase();	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
107	[BUG]  [BUGGY]  this.method  =  method.toUpperCase(Locale.getDefault());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase(Locale.getDefault());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase(Locale.getDefault());	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
108	[BUG]  [BUGGY]  this.method  =  method.toUpperCase()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase()  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase()  +  1;	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
109	[BUG]  [BUGGY]  this.method  =  method.toUpperCase(Locale.US);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase(Locale.US);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase(Locale.US);	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
110	[BUG]  [BUGGY]  this.method  =  method.toUpperCase()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase()  -  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase()  -  1;	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
111	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
112	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
113	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(method);	  this.method    =    new    ZipArchiveEntry(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
114	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  method);	  this.method    =    new    ZipArchiveEntry(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
115	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  0);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
116	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  null);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
117	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extra);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
118	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  true);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
119	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  false);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
120	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method  +  1);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
121	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  method,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
122	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  method,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
123	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  method,  rawName);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
124	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(rawName,  method);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
125	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(localAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(localAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(localAttributes,  method);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
126	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
127	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
128	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getExtraFields(),  method,  getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getExtraFields(),  method,  getMethod());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getExtraFields(),  method,  getMethod());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
129	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
130	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getInternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getInternalAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getInternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
131	[BUG]  [BUGGY]  this.method  =  method.longValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.longValue()  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.longValue()  +  1;	  this.method    =    method.intValue()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
132	[BUG]  [BUGGY]  this.method  =  method.intValue()  /  1;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  /  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  /  1;	  this.method    =    method.intValue()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
133	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getSize());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getSize());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getSize());	  this.method    =    new    ZipArchiveEntry(getMethod()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
134	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  this);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
135	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  null);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
136	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  null);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
137	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  interface,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  interface,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  interface,  null);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
138	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName,  null);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
139	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  entryName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
140	[BUG]  [BUGGY]  this.method  =  method.intValue()  *  2  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  *  2  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  *  2  +  1;	  this.method    =    method.intValue()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
141	[BUG]  [BUGGY]  this.method  =  method.intValue()  *  4;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  *  4;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  *  4;	  this.method    =    method.intValue()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
142	[BUG]  [BUGGY]  this.method  =  method.intValue()  *  3;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  *  3;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  *  3;	  this.method    =    method.intValue()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
143	[BUG]  [BUGGY]  this.method  =  method.doubleValue()  /  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.doubleValue()  /  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.doubleValue()  /  2;	  this.method    =    method.intValue()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
144	[BUG]  [BUGGY]  super.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method,  null);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
145	[BUG]  [BUGGY]  super.setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method,  true);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
146	[BUG]  [BUGGY]  super.setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method,  false);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
147	[BUG]  [BUGGY]  super.setMethod(method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method,  gpb);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
148	[BUG]  [BUGGY]  super.setMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method,  rawName);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
149	[BUG]  [BUGGY]  super.setMethod(method  + ": "  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method  + ": "  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method  + ": "  +  method);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
150	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
151	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
152	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
153	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extra,  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
154	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transient);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transient);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transient);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
155	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  extra,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  extra,  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
156	[BUG]  [BUGGY]  this.method  =  method.longValue()  /  2;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.longValue()  /  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.longValue()  /  2;	  this.method    =    method.intValue()    /    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
157	[BUG]  [BUGGY]  this.method  =  method.intValue()  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  +  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  +  2;	  this.method    =    method.intValue()    /    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
158	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extra);	  this.method    =    new    ZipArchiveEntry(localAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
159	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(localMethod);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(localMethod);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(localMethod);	  this.method    =    new    ZipArchiveEntry(localAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
160	[BUG]  [BUGGY]  this.extraFields.put(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(method,  entryName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
161	[BUG]  [BUGGY]  this.extraFields.put(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(rawName,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
162	[BUG]  [BUGGY]  this.extraFields.put(entryName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(entryName,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  rawName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
163	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method));	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
164	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  new  ZipArchiveEntry(method),  rawName);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
165	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extendAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extendAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extendAttributes);	  this.method    =    new    ZipArchiveEntry(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
166	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
167	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getExternalAttributes(),  getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getExternalAttributes(),  getMethod());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getExternalAttributes(),  getMethod());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
168	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
169	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
170	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  platform);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  platform);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
171	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes()  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
172	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.sourceName);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
173	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  methods);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
174	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  null);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
175	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  0);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
176	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.entryName);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
177	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  entryName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
178	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(rawName,  method);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
179	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extra,  rawName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
180	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(extra,  rawName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
181	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(source,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(source,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(source,  method);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
182	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(class,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(class,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(class,  rawName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
183	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(method,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  sourceName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
184	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method  +  1]);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
185	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method  -  1]);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
186	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.platform);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.platform);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
187	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  0);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  0);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
188	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.source);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.source);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.source);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
189	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false,  null);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
190	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass(),  method,  false);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
191	[BUG]  [BUGGY]  gpb.setExtraFields(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setExtraFields(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setExtraFields(extraFields);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
192	[BUG]  [BUGGY]  gpb.setExternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setExternalAttributes(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setExternalAttributes(extraFields);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
193	[BUG]  [BUGGY]  gpb.setInternalAttributes(method,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalAttributes(method,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(method,  extraFields);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
194	[BUG]  [BUGGY]  gpb.setInternalAttributes(method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalAttributes(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(method);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
195	[BUG]  [BUGGY]  gpb.setExtraFields(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setExtraFields(externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setExtraFields(externalAttributes);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
196	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  HashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  HashMap());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  HashMap());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
197	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,Object>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
198	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ArrayList());  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ArrayList());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ArrayList());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
199	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  Integer>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
200	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  Integer>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  Integer>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
201	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  TreeMap());  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  TreeMap());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  TreeMap());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
202	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  rawName);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
203	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  null);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
204	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  true);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
205	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  false);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
206	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(this.internalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(this.internalAttributes,  method);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
207	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(this.internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(this.internalAttributes);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
208	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
209	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getOptionalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getOptionalAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getOptionalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
210	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getContentAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getContentAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getContentAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
211	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getConstAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getConstAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getConstAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
212	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes()  +  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
213	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  0);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
214	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  null);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
215	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extra);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
216	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  true);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
217	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extraFields);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
218	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  rawName);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
219	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(rawName,  method);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
220	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(method,  entryName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
221	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(class,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(class,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(class,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
222	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(class,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(class,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(class,  method,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
223	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(source,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(source,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(source,  method);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
224	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(extra,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
225	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extra,  method);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
226	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extra,  sourceName);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
227	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extra,  null);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
228	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method  +  1]);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
229	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method  -  1]);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
230	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  0);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  0);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
231	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.platform);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.platform);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
232	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method]).reset();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method]).reset();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method]).reset();	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
233	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internal,  method);	  this.method    =    MethodUtil.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
234	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.string);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.string);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.string);	  this.method    =    MethodUtil.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
235	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internal  +  method);	  this.method    =    MethodUtil.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
236	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes,  method);	  this.method    =    new    ZipArchiveEntry(extraFields,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
237	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
238	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extendAttributes,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extendAttributes,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extendAttributes,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
239	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  2);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  2);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  2);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
240	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  3);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  3);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  3);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
241	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  4);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  4);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  4);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
242	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
243	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  *  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  *  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  *  1);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
244	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.string);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.string);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.string);	  this.method    =    MethodUtilities.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
245	[BUG]  [BUGGY]  this.method  =  method  /  2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  /  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  /  2;	  this.method    =    method    +    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
246	[BUG]  [BUGGY]  this.method  =  method  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  -  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  -  2;	  this.method    =    method    +    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
247	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method  +  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method  +  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method  +  1]);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
248	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method  -  1]);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method  -  1]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method  -  1]);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
249	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.platform);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.platform);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.platform);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
250	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  0);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  0);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
251	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.source);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.source);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.source);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
252	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  rawName);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
253	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  true);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
254	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  null);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
255	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  false);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
256	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method)+  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method)+  1;	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
257	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(0,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(0,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(0,  method);	  this.method    =    new    ZipArchiveEntry(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
258	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(1);	  this.method    =    new    ZipArchiveEntry(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
259	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  HashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  HashMap());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  HashMap());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
260	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,Object>());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
261	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  ArrayList());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  ArrayList());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  ArrayList());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
262	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(rawName,  new  LinkedHashMap());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(rawName,  new  LinkedHashMap());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
263	[BUG]  [BUGGY]  gpb.setExternalAttributes(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setExternalAttributes(externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setExternalAttributes(externalAttributes);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
264	[BUG]  [BUGGY]  gpb.setInternalAttributes(internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalAttributes(internalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(internalAttributes,  method);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
265	[BUG]  [BUGGY]  gpb.setInternalAttributes(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalAttributes(method,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(method,  internalAttributes);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
266	[BUG]  [BUGGY]  gpb.setExternalAttributes(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setExternalAttributes(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setExternalAttributes(extra);	  gpb.setInternalAttributes(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
267	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.intValue()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.intValue()  -  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.intValue()  -  1);	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
268	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.intValue()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.intValue()  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.intValue()  +  1);	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
269	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.lastIndexOf('.'));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.lastIndexOf('.'));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.lastIndexOf('.'));	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
270	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length()  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length()  -  2);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length()  -  2);	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
271	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.longValue());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.longValue());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.longValue());	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
272	[BUG]  [BUGGY]  this.method  =  method.byteValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.byteValue()  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.byteValue()  +  1;	  this.method    =    method.byteValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
273	[BUG]  [BUGGY]  this.method  =  method.byteValue()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.byteValue()  -  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.byteValue()  -  1;	  this.method    =    method.byteValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
274	[BUG]  [BUGGY]  this.method  =  method.byteValue()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.byteValue()  *  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.byteValue()  *  2;	  this.method    =    method.byteValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
275	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  rawName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
276	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
277	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  source);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  0,  source);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
278	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  dataArea);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  dataArea);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  dataArea);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
279	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  baseUri);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  baseUri);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  baseUri);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
280	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(rawName,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(rawName,  extra);	  this.internalAttributes.put(method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
281	[BUG]  [BUGGY]  this.method  =  method  +  4;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  +  4;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  4;	  this.method    =    method    +    1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
282	[BUG]  [BUGGY]  this.method  =  method  +  0L;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  +  0L;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  0L;	  this.method    =    method    +    1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
283	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(sourceName,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(sourceName,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(sourceName,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    sourceName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
284	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  sourceName);	  this.method    =    new    ZipArchiveEntry(extraFields,    sourceName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
285	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  method);	  this.method    =    new    ZipArchiveEntry(extraFields,    sourceName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
286	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  rawName);	  this.method    =    new    ZipArchiveEntry(extraFields,    sourceName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
287	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass(),  method);	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
288	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getBase());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getBase());	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
289	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  getMethod());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass(),  getMethod());	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
290	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  getBase());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass(),  getBase());	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
291	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  method);	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
292	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  HashMap());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  HashMap());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  HashMap());	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
293	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  extraFields);	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
294	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,Object>());	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
295	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap(),  externalAttributes);	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
296	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
297	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(internalAttributes,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(internalAttributes,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(internalAttributes,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
298	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  false,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(method,  false,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  false,  null);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
299	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(method,  false,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  false,  true);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
300	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(class,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(class,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(class,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
301	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
302	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transientName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transientName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  transientName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
303	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  outputName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  outputName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  outputName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
304	[BUG]  [BUGGY]  this.method  =  method  -  1L;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  -  1L;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  -  1L;	  this.method    =    method    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
305	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  externalAttributes);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
306	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  internalAttributes);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
307	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(getMethod()));  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(getMethod()));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(getMethod()));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
308	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  null);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
309	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  true);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
310	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  String(rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  String(rawName));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  String(rawName));	  this.internalAttributes.put(entryName,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
311	[BUG]  [BUGGY]  this.internalAttributes.put(extra,  new  String(entryName));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(extra,  new  String(entryName));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(extra,  new  String(entryName));	  this.internalAttributes.put(entryName,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
312	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  String(externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  String(externalAttributes));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  String(externalAttributes));	  this.internalAttributes.put(entryName,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
313	[BUG]  [BUGGY]  this.internalAttributes.put(key,  new  String(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(key,  new  String(extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(key,  new  String(extra));	  this.internalAttributes.put(entryName,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
314	[BUG]  [BUGGY]  this.method  =  method.doubleValue()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.doubleValue()  +  1;	  this.method    =    method.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
315	[BUG]  [BUGGY]  this.method  =  method.doubleValue()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.doubleValue()  -  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.doubleValue()  -  1;	  this.method    =    method.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
316	[BUG]  [BUGGY]  this.method  =  method.doubleValue()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.doubleValue()  *  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.doubleValue()  *  2;	  this.method    =    method.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
317	[BUG]  [BUGGY]  this.method  =  method.doubleValue()  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.doubleValue()  +  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.doubleValue()  +  2;	  this.method    =    method.doubleValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
318	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.extraFields,  method);	  this.method    =    new    ZipArchiveEntry(this.extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
319	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.externalAttributes);	  this.method    =    new    ZipArchiveEntry(this.extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
320	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.extraFields,  rawName);	  this.method    =    new    ZipArchiveEntry(this.extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
321	[BUG]  [BUGGY]  setMethod(new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(new  LinkedHashMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
322	[BUG]  [BUGGY]  setMethod(null,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(null,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(null,  new  LinkedHashMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
323	[BUG]  [BUGGY]  setMethod(internalAttributes,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(internalAttributes,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(internalAttributes,  new  LinkedHashMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
324	[BUG]  [BUGGY]  setMethod(method,  new  HashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(method,  new  HashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(method,  new  HashMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
325	[BUG]  [BUGGY]  setMethod(class,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(class,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(class,  new  LinkedHashMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
326	[BUG]  [BUGGY]  setMethod(method,  new  ArrayList  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(method,  new  ArrayList  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(method,  new  ArrayList  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
327	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  true);	  this.method    =    MethodUtils.getMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
328	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method,  null);	  this.method    =    MethodUtils.getMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
329	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(null,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(null,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(null,  true);	  this.method    =    MethodUtils.getMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
330	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName,  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName,  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.sourceName,  method,  true);	  this.method    =    MethodUtils.getMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
331	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(rawName,  method);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
332	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(method,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(method,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(method,  entryName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
333	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(class,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(class,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(class,  rawName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
334	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(source,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(source,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(source,  method);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
335	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(extra,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(extra,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(extra,  rawName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
336	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.source,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.source,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.source,  rawName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
337	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  false);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
338	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.getMethod(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.getMethod(),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.getMethod(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
339	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  true,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  true,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  true,  false);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
340	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getField(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getField(),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getField(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
341	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRaw(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRaw(),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRaw(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
342	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal,  method);	  this.method    =    MethodUtils.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
343	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.string);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.string);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.string);	  this.method    =    MethodUtils.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
344	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.entryName);	  this.method    =    MethodUtils.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
345	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod()  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod()  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod()  +  method);	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
346	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  *  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  *  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod()  *  method);	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
347	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase()  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase()  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBase()  +  method);	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
348	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getSize()  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getSize()  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getSize()  +  method);	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
349	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  /  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  /  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod()  /  method);	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
350	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  +  method,  getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod()  +  method,  getBase());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod()  +  method,  getBase());	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
351	[BUG]  [BUGGY]  gpb.setInternalMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalMethod(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalMethod(method);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
352	[BUG]  [BUGGY]  gpb.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setMethod(method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setMethod(method,  null);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
353	[BUG]  [BUGGY]  gpb.setMethod(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setMethod(this.internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setMethod(this.internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
354	[BUG]  [BUGGY]  gpb.setInternalAttributes(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalAttributes(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(extra);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
355	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(scope,  method,  rawName);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
356	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(class,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(class,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(class,  method);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
357	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  0);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(scope,  method,  0);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
358	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(scope,  method,  null);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
359	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(scope,  method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(scope,  method,  gpb);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
360	[BUG]  [BUGGY]  this.method  =  method  /  4;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  /  4;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  /  4;	  this.method    =    method    /    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
361	[BUG]  [BUGGY]  this.method  =  method  *  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  *  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  *  1;	  this.method    =    method    /    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
362	[BUG]  [BUGGY]  this.method  =  method  /  1L;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  /  1L;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  /  1L;	  this.method    =    method    /    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
363	[BUG]  [BUGGY]  this.method  =  method.toString()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toString()  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toString()  +  1;	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
364	[BUG]  [BUGGY]  this.method  =  method.toByteArray();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toByteArray();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toByteArray();	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
365	[BUG]  [BUGGY]  this.method  =  method.getMethod();  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.getMethod();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.getMethod();	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
366	[BUG]  [BUGGY]  this.method  =  method.toString()  + "n ";  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toString()  + "n ";  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toString()  + "n ";	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
367	[BUG]  [BUGGY]  this.method  =  method.toCharArray();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toCharArray();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toCharArray();	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
368	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(null,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(null,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(null,  method);	  this.method    =    new    ZipArchiveEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
369	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(null,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(null,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(null,  null);	  this.method    =    new    ZipArchiveEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
370	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  rawName);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
371	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  null);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  null);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
372	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  true);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
373	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  false);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
374	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(this.internalAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(this.internalAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(this.internalAttributes,  method);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
375	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  gpb);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
376	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(rawName));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(rawName));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
377	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(rawName,  extra));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(rawName,  extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(rawName,  extra));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
378	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra,  rawName));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra,  rawName));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(extra,  rawName));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
379	[BUG]  [BUGGY]  this.internalAttributes.put(extra,  new  ZipArchiveEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(extra,  new  ZipArchiveEntry(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(extra,  new  ZipArchiveEntry(method));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
380	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  ZipArchiveEntry(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  ZipArchiveEntry(extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  ZipArchiveEntry(extra));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
381	[BUG]  [BUGGY]  this.internalAttributes.put(rawName,  new  ZipArchiveEntry(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(rawName,  new  ZipArchiveEntry(extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(rawName,  new  ZipArchiveEntry(extra));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
382	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  name);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  name);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
383	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(name,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(name,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(name,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
384	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(localAttributes,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(localAttributes,  name);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(localAttributes,  name);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
385	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(entryName,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(entryName,  name);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(entryName,  name);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
386	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  name,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
387	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  sourceName);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
388	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  gpb);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
389	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this);	  this.method    =    new    ZipArchiveEntry(null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
390	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseFactory());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseFactory());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBaseFactory());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
391	[BUG]  [BUGGY]  this.method  =  method  %  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  %  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  %  2;	  this.method    =    method    /    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
392	[BUG]  [BUGGY]  this.method  =  method  /  10;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  /  10;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  /  10;	  this.method    =    method    /    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
393	[BUG]  [BUGGY]  this.method  =  method.toExternalAttributes();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toExternalAttributes();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toExternalAttributes();	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
394	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  source,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
395	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  source,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  source,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  source,  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    source);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
396	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extraFields);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
397	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extends);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
398	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  gpb);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
399	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
400	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
401	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extend,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extend,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extend,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
402	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extends,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extends,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extends,  gpb);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
403	[BUG]  [BUGGY]  super.setMethod(method,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setMethod(method,  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setMethod(method,  this);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
404	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extraFields);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
405	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[0]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[0]);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
406	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length()));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length()));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length()));	  this.method    =    method.substring(0,    method.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
407	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.length()).trim();  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.length()).trim();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.length()).trim();	  this.method    =    method.substring(0,    method.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
408	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  sourceName);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
409	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.sourceName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.sourceName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.sourceName,  method);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
410	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.extraAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.extraAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.extraAttributes,  method);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
411	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extra,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extra,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
412	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.sourceName,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
413	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(null,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(null,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(null,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
414	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  rawName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  rawName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  rawName,  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
415	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  sourceName);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
416	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extraAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extraAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extraAttributes,  method);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
417	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
418	[BUG]  [BUGGY]  this.method  =  method.intValue()  /  2  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.intValue()  /  2  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue()  /  2  +  1;	  this.method    =    method.intValue()    /    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
419	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  getExternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  getExternalAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  internalAttributes,  getExternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
420	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getParent(),  method,  getExternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getParent(),  method,  getExternalAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getParent(),  method,  getExternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
421	[BUG]  [BUGGY]  this.method  =  method.nextValue();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.nextValue();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.nextValue();	  this.method    =    method.intValue()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
422	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.sourceName,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.sourceName,  method);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
423	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  sourceName);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
424	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extraAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extraAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extraAttributes,  method);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
425	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(method));  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(method));	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
426	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
427	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getInternalAttributes(),  externalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
428	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extendAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extendAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.extendAttributes);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
429	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
430	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  E>());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  E>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,  E>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
431	[BUG]  [BUGGY]  this.method  =  method.byteValue()  +  2;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.byteValue()  +  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.byteValue()  +  2;	  this.method    =    method.byteValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
432	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  methods);	  this.method    =    MethodUtilities.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
433	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  gpb);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
434	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  this);	  this.method    =    new    ZipArchiveEntry(getMethod(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
435	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.platform));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.platform));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(this.platform));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
436	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(module));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(module));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(module));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
437	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.extra));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(this.extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(this.extra));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
438	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,  Integer>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,  Integer>());	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
439	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,  E>());  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,  E>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,  E>());	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
440	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,Method>());  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,Method>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(new  LinkedHashMap  <  String,Method>());	  this.method    =    new    ZipArchiveEntry(new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
441	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internal,  rawName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
442	[BUG]  [BUGGY]  this.method  =  method  +  256;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  +  256;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  256;	  this.method    =    method    +    1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
443	[BUG]  [BUGGY]  this.extraFields.put(key,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(key,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(key,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
444	[BUG]  [BUGGY]  this.extraFields.remove(method);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.remove(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.remove(method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
445	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod(),  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod(),  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod(),  false);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
446	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  false,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
447	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  internalAttributes);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
448	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  gpb);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
449	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  extraFields);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
450	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceFile,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceFile,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  sourceFile,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
451	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(method));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(method));	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
452	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFieldData());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFieldData());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFieldData());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
453	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extendAttributes,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extendAttributes,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extendAttributes,  method);	  this.method    =    new    ZipArchiveEntry(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
454	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
455	[BUG]  [BUGGY]  this.internalAttributes.set(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.set(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.set(method,  rawName);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
456	[BUG]  [BUGGY]  this.internalAttributes.remove(rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.remove(rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.remove(rawName);	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
457	[BUG]  [BUGGY]  this.extra  =  MethodUtilities.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extra  =  MethodUtilities.getMethod(this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extra  =  MethodUtilities.getMethod(this.extra);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
458	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(extra);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
459	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.extra,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.extra,  methods);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
460	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
461	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getParent(),  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getParent(),  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getParent(),  method,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
462	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawMethod(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawMethod(),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawMethod(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
463	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getParent(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getParent(),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getParent(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
464	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getMethod());	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
465	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields()  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields()  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields()  +  method);	  this.method    =    new    ZipArchiveEntry(getMethod()    +    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
466	[BUG]  [BUGGY]  this.extra  =  MethodUtils.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extra  =  MethodUtils.getMethod(this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extra  =  MethodUtils.getMethod(this.extra);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
467	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(extra);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
468	[BUG]  [BUGGY]  gpb.setMethod(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setMethod(method,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setMethod(method,  internalAttributes);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
469	[BUG]  [BUGGY]  gpb.setMethod(method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setMethod(method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setMethod(method,  rawName);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
470	[BUG]  [BUGGY]  gpb.setExtraField(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setExtraField(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setExtraField(extra);	  gpb.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
471	[BUG]  [BUGGY]  gpb.setInternalAttributes(extraFields,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  gpb.setInternalAttributes(extraFields,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	gpb.setInternalAttributes(extraFields,  method);	  gpb.setInternalAttributes(extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
472	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  method,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
473	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  name,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
474	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  name,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
475	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  name,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  name,  rawName);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
476	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extraFields);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
477	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  size);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  size);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
478	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  externalAttributes);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
479	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  rawName);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
480	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extraFields);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
481	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  gpb);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  gpb);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  gpb);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
482	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  size);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  size);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
483	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(getScope(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(getScope(),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(getScope(),  method);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
484	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.source,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.source,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.source,  method);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
485	[BUG]  [BUGGY]  this.extra  =  MethodUtil.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extra  =  MethodUtil.getMethod(this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extra  =  MethodUtil.getMethod(this.extra);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
486	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,  Integer>());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,  Integer>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,  Integer>());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
487	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  extra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
488	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes,  size);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes,  size);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  externalAttributes,  size);	  this.method    =    new    ZipArchiveEntry(extraFields,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
489	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.source,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.source,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.source,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
490	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
491	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  internalAttributes);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
492	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  externalAttributes);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
493	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethodName());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethodName());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethodName());	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
494	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass()  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass()  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass()  +  method);	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
495	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethodType());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethodType());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethodType());	  this.method    =    new    ZipArchiveEntry(getRawClass());    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
496	[BUG]  [BUGGY]  this.method  =  method.toUpperCase(localAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase(localAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase(localAttributes);	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
497	[BUG]  [BUGGY]  this.method  =  method.toUpperCase(this.internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toUpperCase(this.internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toUpperCase(this.internalAttributes);	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
498	[BUG]  [BUGGY]  this.method  =  method.substring(1,  method.intValue());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(1,  method.intValue());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(1,  method.intValue());	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
499	[BUG]  [BUGGY]  this.method  =  method.longValue()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.longValue()  *  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.longValue()  *  2;	  this.method    =    method.intValue()    *    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
500	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extraFields);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
501	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[0]);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[0]);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[0]);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
502	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extends);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extends);	  this.method    =    new    ZipArchiveEntry(localAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
503	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal  +  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal  +  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal  +  method);	  this.method    =    MethodUtils.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
504	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getOutputFile());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getOutputFile());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getOutputFile());	  this.method    =    new    ZipArchiveEntry(getMethod()    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
505	[BUG]  [BUGGY]  setRaw(method,  new  LinkedHashMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setRaw(method,  new  LinkedHashMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setRaw(method,  new  LinkedHashMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
506	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  externalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
507	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  rawName,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
508	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(class,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(class,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(class,  method,  rawName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
509	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.source,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.source,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.source,  method,  rawName);	  this.method    =    MethodUtil.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
510	[BUG]  [BUGGY]  this.method  =  MethodUtil.setMethod(method,  source);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.setMethod(method,  source);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.setMethod(method,  source);	  this.method    =    MethodUtil.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
511	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extends,  extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extends,  extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extends,  extraFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
512	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  extractFields);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(externalAttributes,  extractFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(externalAttributes,  extractFields);	  this.method    =    new    ZipArchiveEntry(extraFields,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
513	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(class,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(class,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(class,  method,  rawName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
514	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.source,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.source,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.source,  method,  rawName);	  this.method    =    MethodUtils.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
515	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraFields(),  unparseableExtra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
516	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(externalAttributes));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(externalAttributes));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
517	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extraFields));  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extraFields));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(extraFields));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
518	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(extra),  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(extra),  this);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
519	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  true,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  true,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  true,  method);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
520	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawClass(),  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawClass(),  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
521	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalMethod);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalMethod);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalMethod);	  this.method    =    new    ZipArchiveEntry(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
522	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(method,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(method,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(method,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
523	[BUG]  [BUGGY]  super.setInternalAttributes(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setInternalAttributes(extraFields);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setInternalAttributes(extraFields);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
524	[BUG]  [BUGGY]  super.setInternalAttributes(internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setInternalAttributes(internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setInternalAttributes(internalAttributes);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
525	[BUG]  [BUGGY]  super.setAccessible(true);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  super.setAccessible(true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	super.setAccessible(true);	  super.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
526	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.externalAttributes);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
527	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extends);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
528	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extents);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extents);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes,  method,  this.extents);	  this.method    =    MethodUtil.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
529	[BUG]  [BUGGY]  this.extra  =  MethodUtilities.getMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extra  =  MethodUtilities.getMethod(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extra  =  MethodUtilities.getMethod(method);	  this.method    =    MethodUtilities.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
530	[BUG]  [BUGGY]  this.internalAttributes.put(method,  data);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  data);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  data);	  this.internalAttributes.put(method,    extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
531	[BUG]  [BUGGY]  this.extraFields.put(method,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(method,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(method,  method);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
532	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(entryName,  new  LinkedHashMap());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  new  LinkedHashMap());	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
533	[BUG]  [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(entryName,  new  ZipEntry(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  new  ZipEntry(method));	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
534	[BUG]  [BUGGY]  this.extraFields.put(entryName,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extraFields.put(entryName,  method  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extraFields.put(entryName,  method  +  1);	  this.extraFields.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
535	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.externalAttributes);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
536	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extends);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
537	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extents);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extents);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes,  method,  this.extents);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
538	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  externalAttributes,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
539	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(token);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(token);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(token);	  this.method    =    new    ZipArchiveEntry(0);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
540	[BUG]  [BUGGY]  this.method  =  method.substring(0,  method.doubleValue());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.substring(0,  method.doubleValue());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.substring(0,  method.doubleValue());	  this.method    =    method.substring(0,    method.intValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
541	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  Zip());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  Zip());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  Zip());	  this.internalAttributes.put(rawName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
542	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.extraFields,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.extraFields,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.extraFields,  method);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
543	[BUG]  [BUGGY]  this.extra  =  MethodUtils.getMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extra  =  MethodUtils.getMethod(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extra  =  MethodUtils.getMethod(method);	  this.method    =    MethodUtils.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
544	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.sourceFile,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.sourceFile,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.sourceFile,  method);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
545	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(locale,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(locale,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(locale,  method);	  this.method    =    MethodUtilities.getMethod(scope,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
546	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  internalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  sourceName,  internalAttributes);	  this.method    =    new    ZipArchiveEntry(extraFields,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
547	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  getBase());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  getBase());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  getBase());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
548	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  getExtraFields());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  getExtraFields());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method  +  1,  getExtraFields());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method    +    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
549	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  inputName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  inputName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  inputName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
550	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  entryName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  rawName,  entryName);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
551	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,String>());  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  LinkedHashMap  <  String,String>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  LinkedHashMap  <  String,String>());	  this.internalAttributes.put(method,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
552	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internal),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internal),  method);	  this.method    =    MethodUtil.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
553	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getRawMethod(method,  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getRawMethod(method,  this.extra);	  this.method    =    MethodUtilities.getRawMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	89	None	replace
554	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.base,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.base,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.base,  method);	  this.method    =    MethodUtil.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
555	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  String(method));  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  String(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  String(method));	  this.internalAttributes.put(entryName,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
556	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  String(extra),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  String(extra),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  String(extra),  method);	  this.internalAttributes.put(entryName,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
557	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields,  methods);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.extraFields,  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.extraFields,  methods);	  this.method    =    new    ZipArchiveEntry(this.extraFields);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
558	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal,  method,  true);	  this.method    =    MethodUtils.getMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
559	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal,  true);	  this.method    =    MethodUtils.getMethod(method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
560	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  code);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  code);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  code);	  this.method    =    new    ZipArchiveEntry(getMethod(),    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
561	[BUG]  [BUGGY]  this.method  =  methodUtil.getMethod(this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  methodUtil.getMethod(this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  methodUtil.getMethod(this.extra);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
562	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(extra);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
563	[BUG]  [BUGGY]  this.extra  =  MethodUtil.getMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.extra  =  MethodUtil.getMethod(method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.extra  =  MethodUtil.getMethod(method);	  this.method    =    MethodUtil.getMethod(this.extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
564	[BUG]  [BUGGY]  this.method  =  method  -  1  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  -  1  +  1;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  -  1  +  1;	  this.method    =    method    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
565	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(internalAttributes,  name);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(internalAttributes,  name);	  this.method    =    new    ZipArchiveEntry(extraFields,    name);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
566	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.externalAttributes);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
567	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes,  method,  this.extends);	  this.method    =    MethodUtils.getMethod(this.internalAttributes,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
568	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,String>());  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,String>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,String>());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
569	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,Method>());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,Method>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  new  LinkedHashMap  <  String,Method>());	  this.internalAttributes.put(entryName,    new    LinkedHashMap());    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
570	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  String(external));  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  String(external));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  String(external));	  this.internalAttributes.put(method,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
571	[BUG]  [BUGGY]  this.externalAttributes.put(method,  new  String(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.externalAttributes.put(method,  new  String(extra));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.externalAttributes.put(method,  new  String(extra));	  this.internalAttributes.put(method,    new    String(extra));    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
572	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.externalAttributes);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.externalAttributes);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
573	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extents);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extents);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal,  method,  this.extents);	  this.method    =    MethodUtilities.getMethod(this.internal,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
574	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawMethod(),  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRawMethod(),  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRawMethod(),  method,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
575	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getRealMethod(),  method,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getRealMethod(),  method,  true);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getRealMethod(),  method,  true);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
576	[BUG]  [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  source);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.setMethod(method,  source);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.setMethod(method,  source);	  this.method    =    MethodUtilities.setMethod(method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
577	[BUG]  [BUGGY]  this.method  =  method  +  1.0;  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  +  1.0;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  1.0;	  this.method    =    method    +    1L;    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
578	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExtraAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getInternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
579	[BUG]  [BUGGY]  this.method  =  method.trim();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.trim();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.trim();	  this.method    =    method.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
580	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  this);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(method),  this);	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
581	[BUG]  [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(int));  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(method,  new  ZipArchiveEntry(int));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(method,  new  ZipArchiveEntry(int));	  this.internalAttributes.put(method,    new    ZipArchiveEntry(method));    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
582	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  getTarget());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  getTarget());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  getTarget());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
583	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  getExternalAttributes());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  getExternalAttributes());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getBase(),  getExternalAttributes());	  this.method    =    new    ZipArchiveEntry(getMethod(),    getBase());    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
584	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  gpb,  sourceName);	  this.method    =    new    ZipArchiveEntry(extraFields,    gpb);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
585	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  unparseableExtra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFields(),  unparseableExtra);	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExtraFields());    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
586	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal,  false);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal,  false);	  this.method    =    MethodUtils.getMethod(method,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
587	[BUG]  [BUGGY]  this.internalAttributes.put(entryName,  method  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.internalAttributes.put(entryName,  method  +  1);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.internalAttributes.put(entryName,  method  +  1);	  this.internalAttributes.put(entryName,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
588	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal),  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internal),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internal),  method);	  this.method    =    MethodUtilities.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
589	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  methods);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  methods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  getExternalAttributes(),  methods);	  this.method    =    new    ZipArchiveEntry(getMethod(),    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
590	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalMethods);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalMethods);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.internalMethods);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
591	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalMethod,  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(this.internalMethod,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(this.internalMethod,  method);	  this.method    =    new    ZipArchiveEntry(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
592	[BUG]  [BUGGY]  setMethod(method,  new  TreeMap  <  String,Object>());  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(method,  new  TreeMap  <  String,Object>());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(method,  new  TreeMap  <  String,Object>());	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
593	[BUG]  [BUGGY]  setMethod(method,  new  LinkedHashMap  <  String,Object>(),  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  setMethod(method,  new  LinkedHashMap  <  String,Object>(),  extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	setMethod(method,  new  LinkedHashMap  <  String,Object>(),  extra);	  setMethod(method,    new    LinkedHashMap    <    String,Object>());    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
594	[BUG]  [BUGGY]  this.method  =  method  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method  *  2;  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  *  2;	  this.method    =    method    +    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
595	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.base,  method);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.base,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.base,  method);	  this.method    =    MethodUtils.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
596	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extends);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
597	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.internalAttributes[method],  this.extra);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
598	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.base,  method);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.base,  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.base,  method);	  this.method    =    MethodUtilities.getMethod(this.internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
599	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(this.internalAttributes[method],  this.extra);	  this.method    =    MethodUtil.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
600	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields,  method,  sourceName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields,  method,  sourceName);	  this.method    =    new    ZipArchiveEntry(extraFields,    method);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
601	[BUG]  [BUGGY]  this.method  =  method.toOtherCase();  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  method.toOtherCase();  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.toOtherCase();	  this.method    =    method.toUpperCase();    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
602	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.source,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.source,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.source,  method,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
603	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(this.base,  method,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtilities.getMethod(this.base,  method,  rawName);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(this.base,  method,  rawName);	  this.method    =    MethodUtilities.getMethod(method,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
604	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFieldData());  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFieldData());  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExtraFieldData());	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
605	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(method));  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(method));  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method,  getExternalAttributes(method));	  this.method    =    new    ZipArchiveEntry(getMethod(),    method,    getExternalAttributes());    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
606	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal),  method);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internal),  method);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internal),  method);	  this.method    =    MethodUtils.getMethod(this.internal);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
607	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extends);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extends);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extends);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
608	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(       "ZIP  compression  method  can  not  be  negative:       "  +  method);  }      [BUGGY]  this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extra);  [BUGGY]      }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(this.internalAttributes[method],  this.extra);	  this.method    =    MethodUtils.getMethod(this.internalAttributes[method]);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
