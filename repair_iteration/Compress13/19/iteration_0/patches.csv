bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry();  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  new  ZipArchiveEntry();  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry();	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
2	[BUG]  [BUGGY]  this.method  =  MethodUtil.getMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  MethodUtil.getMethod(method);  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtil.getMethod(method);	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
3	[BUG]  [BUGGY]  this.method  =  MethodUtils.getMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  MethodUtils.getMethod(method);  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtils.getMethod(method);	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
4	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod());  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod());  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod());	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
5	[BUG]  [BUGGY]  this.method  =  method.intValue();  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  method.intValue();  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method.intValue();	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
6	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  new  ZipArchiveEntry(getMethod(),  method);  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(getMethod(),  method);	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]    [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	  	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
8	[BUG]  [BUGGY]  this.method  =  MethodUtilities.getMethod(method);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  MethodUtilities.getMethod(method);  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  MethodUtilities.getMethod(method);	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
9	[BUG]  [BUGGY]  this.method  =  method  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  method  +  1;  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  method  +  1;	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
10	[BUG]  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setMethod(int  method)  {  if  (method  <  0)  {  throw  new  IllegalArgumentException(   "ZIP  compression  method  can  not  be  negative:   "  +  method);  }  [BUGGY]  this.method  =  new  ZipArchiveEntry(extraFields);  [BUGGY]  }  [CLASS]  ZipArchiveEntry  [METHOD]  setMethod  [RETURN_TYPE]  void  int  method  [VARIABLES]  byte[]  extra  rawName  boolean  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  internalAttributes  method  platform  long  externalAttributes  size  LinkedHashMap  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	207	207	2	replace	this.method  =  new  ZipArchiveEntry(extraFields);	this.method  =  method;  	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
