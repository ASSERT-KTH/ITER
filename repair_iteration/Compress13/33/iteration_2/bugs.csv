bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
2	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
3	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
4	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
5	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
6	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
7	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
8	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
9	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
10	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
11	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
12	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
13	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
14	[BUG]  [BUGGY]  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
15	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
16	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
17	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
18	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
19	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
20	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
21	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
22	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
23	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
24	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
25	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
26	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
27	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
28	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
29	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
30	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
31	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
32	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
33	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
34	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
35	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
36	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
37	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
38	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
39	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
40	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
41	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
42	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
43	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
44	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
45	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
46	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
47	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
48	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
49	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
50	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
51	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
52	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
53	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
54	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
55	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  true);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
56	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
57	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
58	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.dELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.dELETE);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.dELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
59	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
60	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
61	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
62	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
63	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
64	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
65	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
66	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
67	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
68	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
69	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
70	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
71	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
72	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
73	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
74	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
75	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
76	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
77	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
78	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1;  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
79	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
80	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
81	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
82	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
83	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {    [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [BUGGY]    ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(   "Error  parsing  extra  fields  for  entry:     "  +  getName()  +     "  -     "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
