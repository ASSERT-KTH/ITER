bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
2	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
3	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
4	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
5	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
6	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
7	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
8	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
9	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
10	[BUG]  [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
11	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
12	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
13	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
14	[BUG]  [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
15	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparsedExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparsedExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparsedExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
16	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
17	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
18	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
19	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
20	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
21	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
22	[BUG]  [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
23	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
24	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
25	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
26	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
27	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
28	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
29	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
30	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.ARRAY);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
31	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
32	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
33	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
34	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
35	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
36	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  true,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
37	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
38	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
39	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
40	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
41	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
42	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
43	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
44	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.class);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
45	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
46	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
47	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
48	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
49	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
50	[BUG]  [BUGGY]  parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
51	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
52	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
53	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
54	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
55	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
56	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
57	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
58	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  sourceName,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  sourceName,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  sourceName,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
59	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
60	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
61	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
62	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
63	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
64	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
65	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
66	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
67	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LAST);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LAST);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LAST);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
68	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
69	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
70	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
71	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
72	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
73	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
74	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
75	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIELD);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
76	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
77	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
78	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
79	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
80	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
81	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
82	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
83	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
84	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
85	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
86	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
87	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
88	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
89	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
90	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
91	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
92	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
93	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
94	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
95	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
96	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
97	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
98	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
99	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
100	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  false,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  false,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
101	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
102	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
103	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	35	None	replace
104	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.RELATIVE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
105	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RESULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RESULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RESULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.RELATIVE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
106	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
107	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
108	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
109	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
110	[BUG]  [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
111	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
112	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
113	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
114	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
115	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
116	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
117	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
118	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
119	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
120	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
121	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
122	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
123	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  false,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
124	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  true,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
125	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
126	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
127	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
128	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
129	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
130	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
131	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  false,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  false,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
132	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
133	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
134	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
135	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  externalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
136	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
137	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.FOR);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
138	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
139	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
140	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
141	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
142	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
143	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
144	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
145	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
146	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
147	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
148	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
149	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
150	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
151	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
152	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
153	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
154	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
155	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
156	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
157	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.dELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.dELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.dELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
158	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
159	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  enum);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  enum);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
160	[BUG]  [BUGGY]  ExtraFieldUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
161	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
162	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extern,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
163	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(local,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extern,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
164	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extern,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
165	[BUG]  [BUGGY]  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  gpb.setExtra(extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	gpb.setExtra(extra);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
166	[BUG]  [BUGGY]  ParserUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ParserUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ParserUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
167	[BUG]  [BUGGY]  parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
168	[BUG]  [BUGGY]  parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
169	[BUG]  [BUGGY]  ParserUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ParserUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ParserUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
170	[BUG]  [BUGGY]  ParserUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extern);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ParserUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extern);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ParserUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extern);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
171	[BUG]  [BUGGY]  ParserUtils.parse(extra,  true,  UnparseableExtraField.READ);  gpb.setExtra(extra);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ParserUtils.parse(extra,  true,  UnparseableExtraField.READ);  gpb.setExtra(extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ParserUtils.parse(extra,  true,  UnparseableExtraField.READ);  gpb.setExtra(extra);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
172	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.UNPREFIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
173	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.UNPREFIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
174	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.UNPREFIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
175	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.UNPREFIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
176	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARROW);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARROW);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARROW);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARROW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
177	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARROW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
178	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARROW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
179	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARROW,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARROW);    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
180	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TYPE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TYPE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
181	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
182	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
183	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
184	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
185	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  externalAttributes,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
186	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
187	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
188	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
189	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
190	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
191	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  name);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  name);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
192	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
193	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
194	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
195	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
196	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  false,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
197	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.dELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.dELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.dELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.dELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
198	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
199	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
200	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  externalAttributes,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
201	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
202	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.REACHABLE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.REACHABLE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.REACHABLE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
203	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
204	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
205	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
206	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DECEMBER);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DECEMBER);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DECEMBER);    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
207	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
208	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
209	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
210	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
211	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.RIGHT,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
212	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  false,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
213	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIRST);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIRST);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FIRST);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FIRST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
214	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FIRST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
215	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FIRST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
216	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FIRST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
217	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
218	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
219	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
220	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  false,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
221	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
222	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
223	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
224	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
225	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
226	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
227	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
228	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
229	[BUG]  [BUGGY]  parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
230	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
231	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  return;  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  return;  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
232	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
233	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
234	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
235	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
236	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
237	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
238	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
239	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
240	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
241	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
242	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
243	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
244	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
245	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
246	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
247	[BUG]  [BUGGY]  ExtraFieldUtils.parse(rawName,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(rawName,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(rawName,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
248	[BUG]  [BUGGY]  ParserUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ParserUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ParserUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
249	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
250	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
251	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
252	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
253	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
254	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
255	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
256	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
257	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  externalAttributes,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
258	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TYPES);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TYPES);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
259	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TYPES);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
260	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
261	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
262	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1;  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
263	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  2;  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  2;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
264	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  3;  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  3;  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  3;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
265	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  4;  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  4;  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  4;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
266	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1L;  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1L;  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  1L;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
267	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
268	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
269	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
270	[BUG]  [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
271	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
272	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  true);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
273	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
274	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
275	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
276	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
277	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
278	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
279	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
280	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
281	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
282	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
283	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
284	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
285	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.LAST);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.LAST);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.LAST);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
286	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.LAST);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.LAST);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.LAST);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.LAST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
287	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
288	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
289	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
290	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
291	[BUG]  [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  gpb.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
292	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparsedExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparsedExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparsedExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
293	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
294	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
295	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
296	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
297	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
298	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
299	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
300	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
301	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
302	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
303	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
304	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
305	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
306	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
307	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
308	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
309	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
310	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
311	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
312	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
313	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
314	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
315	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
316	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
317	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
318	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
319	[BUG]  [BUGGY]  byte[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  byte[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	byte[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
320	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  UnparseableExtraFieldData.DEFAULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
321	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
322	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
323	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  this);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  this);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
324	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
325	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
326	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
327	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(rawName,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
328	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  entryName);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  entryName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  entryName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
329	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
330	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
331	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extern,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
332	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
333	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
334	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  1);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  1);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
335	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  +  1);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  +  1);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
336	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  2);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  2);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  2);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
337	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.STRING);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.STRING);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.STRING);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.STRING);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
338	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.STRING);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
339	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.STRING);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
340	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.STRING);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
341	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
342	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
343	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  internalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
344	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
345	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
346	[BUG]  [BUGGY]  parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
347	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
348	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
349	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extract);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extract);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  extract);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
350	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  enum);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  enum);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
351	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
352	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  internalAttributes,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
353	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
354	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
355	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
356	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  super);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  super);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  super);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
357	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
358	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
359	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
360	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
361	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  enum);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  enum);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
362	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  enum);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  enum);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  enum);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
363	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
364	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
365	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtraField);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtraField);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  unparseableExtraField);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
366	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extract);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extract);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extract);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
367	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
368	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
369	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
370	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
371	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
372	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  rawName);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
373	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
374	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
375	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
376	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEC);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEC);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEC);	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
377	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
378	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
379	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
380	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
381	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  unparseableExtraField);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  unparseableExtraField);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  unparseableExtraField);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
382	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
383	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
384	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
385	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
386	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
387	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
388	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
389	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
390	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
391	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
392	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extract);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extract);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extract);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
393	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
394	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.REACHABLE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
395	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.UNPREFIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
396	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externalAttributes,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
397	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  externAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
398	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
399	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
400	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
401	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LAST,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
402	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
403	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
404	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
405	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.FALSE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FALSE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
406	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPES);    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
407	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
408	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
409	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
410	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
411	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
412	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(externalAttributes);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(externalAttributes);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(externalAttributes);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
413	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  else  {  super.setExtra(extra);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  else  {  super.setExtra(extra);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  gpb.setExtra(extra);  }  else  {  super.setExtra(extra);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
414	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
415	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
416	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
417	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtraField);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtraField);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  unparseableExtraField);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
418	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
419	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
420	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  internalAttributes,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
421	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
422	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
423	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
424	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
425	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
426	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
427	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
428	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  0;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  0;  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT)+  0;	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT)+    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
429	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
430	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraField.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraField.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraField.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
431	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
432	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes));  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes));  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes));	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
433	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
434	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
435	[BUG]  [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
436	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraFields.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
437	[BUG]  [BUGGY]  ZipExtraField[]  local  =  unparseableExtraField.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  unparseableExtraField.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  unparseableExtraField.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
438	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
439	[BUG]  [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  super.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
440	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
441	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
442	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  internalAttributes,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
443	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.TYPES,  extra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
444	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
445	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extern,  true,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extern,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
446	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
447	[BUG]  [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes!=  null)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
448	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  false);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
449	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT  +  1);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.LEFT  +  1);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
450	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.TYPE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.TYPE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
451	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.STRING);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
452	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  internalAttributes,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
453	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
454	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtraField);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtraField);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtraField);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
455	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
456	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  3);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  3);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  3);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
457	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  4);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  4);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  extra.length  -  4);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    extra.length);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
458	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
459	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
460	[BUG]  [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(externalAttributes  ==  null)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
461	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
462	[BUG]  [BUGGY]  ExtraFieldUtils.parse(externalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(externalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(externalAttributes,  true,  ExtraFieldUtils.UnparseableExtraField.READ);	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
463	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
464	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DUP);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DUP);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.DUP);	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
465	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
466	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
467	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  this.externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  this.externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
468	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
469	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
470	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  this.externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  this.externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
471	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
472	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  true);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
473	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
474	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
475	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  name);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  name);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
476	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
477	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.STRING,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.STRING);    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
478	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
479	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
480	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIELD,  true);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
481	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
482	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extract);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extract);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE,  extract);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
483	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
484	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
485	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FIRST,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FIRST);    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
486	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
487	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  name);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  name);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
488	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  null,  ExtraFieldUtils.UnparseableExtraField.RELATIVE);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.RELATIVE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
489	[BUG]  [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
490	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  false);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    false);    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
491	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class));  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class));  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class));	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
492	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.class,  rawName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.class);    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
493	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.FOR,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
494	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  rawName);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
495	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
496	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
497	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  external);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
498	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  this.externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  this.externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
499	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  internalAttributes);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
500	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  unparseableExtra);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
501	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  externalAttributes);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT);    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
502	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  this.externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  this.externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    externalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
503	[BUG]  [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra  ==  null)  {  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra  ==  null)  {  ExtraFieldUtils.parse(local,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(local,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
504	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER,  false);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEECEMBER,  false);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
505	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extra.parse(externalAttributes,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
506	[BUG]  [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  extract.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	  ZipExtraField[]    local    =    extra.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DELETE);    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
507	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  internalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  internalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.UNPREFIX,  internalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.UNPREFIX);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
508	[BUG]  [BUGGY]  try  {  gpb.setExtra(extra);  }  catch(IOException  ioe)  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  try  {  gpb.setExtra(extra);  }  catch(IOException  ioe)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	try  {  gpb.setExtra(extra);  }  catch(IOException  ioe)  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
509	[BUG]  [BUGGY]  try  {  gpb.setExtra(extra);  }  catch  (IOException  e)  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  try  {  gpb.setExtra(extra);  }  catch  (IOException  e)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	try  {  gpb.setExtra(extra);  }  catch  (IOException  e)  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
510	[BUG]  [BUGGY]  try  {  gpb.setExtra(extra);  }  catch(Exception  e)  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  try  {  gpb.setExtra(extra);  }  catch(Exception  e)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	try  {  gpb.setExtra(extra);  }  catch(Exception  e)  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
511	[BUG]  [BUGGY]  gpb.setExtra(externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  gpb.setExtra(externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	gpb.setExtra(externalAttributes);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    gpb.setExtra(extra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	81	None	replace
512	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  null);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  null);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
513	[BUG]  [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
514	[BUG]  [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }	  ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(local,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
515	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  Arrays.asList(extra));  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  Arrays.asList(extra));  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  Arrays.asList(extra));	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
516	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  this);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  this);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
517	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  name);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  name);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
518	[BUG]  [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length!=  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
519	[BUG]  [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  <  2)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(externalAttributes,  true);  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(externalAttributes,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	79	None	replace
520	[BUG]  [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DUP);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DUP);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DUP);	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
521	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  name);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE,  name);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.REACHABLE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
522	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  name);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  name);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  name);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
523	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
524	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
525	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  external);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  external);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE,  external);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TRUE,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
526	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LAST,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
527	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extract);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extract);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT,  extract);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DEFAULT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
528	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  extra.length);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  extra.length);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES,  rawName,  extra.length);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPES,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
529	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.LEFT,    unparseableExtra);    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
530	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  this.externalAttributes);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  this.externalAttributes);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  this.externalAttributes);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
531	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtra);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtra);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER,  unparseableExtra);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.DECEMBER,    internalAttributes);    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
532	[BUG]  [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	if(extra.length  ==  0)  {  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(rawName,  true);  }  else  {  throw  new  RuntimeException( " ");  }	  ExtraFieldUtils.parse(extra,    true,    ExtraFieldUtils.UnparseableExtraField.READ);    mergeExtraFields(rawName,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
533	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  sourceName);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  sourceName);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY,  sourceName);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.ARRAY,    rawName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
534	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {      [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  0);  [BUGGY]      ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException(     "Error  parsing  extra  fields  for  entry:       "  +  getName()  +       "  -       "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE,  0);	  ZipExtraField[]    local    =    ExtraFieldUtils.parse(extra,    false,    ExtraFieldUtils.UnparseableExtraField.TYPE,    true);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
