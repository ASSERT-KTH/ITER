bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.READ);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
2	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DEFAULT);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
3	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPE);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
4	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DECEMBER);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
5	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.FOR);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
6	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.DELETE);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
7	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]    [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	  	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
8	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LEFT);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
9	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.LAST);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
10	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TYPES);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
11	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [CE]  class,  interface,  or  enum  expected  [FE]    AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.ARRAY);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
12	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [CE]  class,  interface,  or  enum  expected  [FE]      AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.REACHABLE);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
13	[BUG]  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError  [CONTEXT]  public  void  setExtra(byte[]  extra)  throws  RuntimeException  {  try  {  [BUGGY]  ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);  [BUGGY]  ExtraFieldUtils.parse(extra,  true,  ExtraFieldUtils.UnparseableExtraField.READ);  mergeExtraFields(local,  true);  }  catch  (ZipException  e)  {  throw  new  RuntimeException( "Error  parsing  extra  fields  for  entry:   "  +  getName()  +   "  -   "  +  e.getMessage(),  e);  }  }  [CLASS]  ZipArchiveEntry  [METHOD]  setExtra  [RETURN_TYPE]  void  byte[]  extra  [VARIABLES]  byte[]  extra  rawName  boolean  ZipExtraField[]  local  ZipException  e  String  entryName  name  GeneralPurposeBit  gpb  UnparseableExtraFieldData  unparseableExtra  int  PLATFORM_FAT  PLATFORM_UNIX  SHORT_MASK  SHORT_SHIFT  i  internalAttributes  method  mode  platform  value  long  externalAttributes  size  value  LinkedHashMap  copy  extraFields  	projects/Compress13/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveEntry.java	0.5773502691896258	437	439	2	replace	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  false,  ExtraFieldUtils.UnparseableExtraField.TRUE);	ZipExtraField[]  local  =  ExtraFieldUtils.parse(extra,  true,          ExtraFieldUtils.UnparseableExtraField.READ);  	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
