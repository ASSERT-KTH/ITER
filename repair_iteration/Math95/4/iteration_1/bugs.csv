bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  d  =  getNumberDenominatorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    double  d  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    double  d  =  getNumberDenominatorDegreesOfFreedom();		non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	8	None	add
2	[BUG]  [BUGGY]    double  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    double  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    double  d  =  getNumeratorDegreesOfFreedom();		non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	8	None	add
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    d  =  getNumeratorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	    d  =  getNumeratorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	8	1	add
4	[BUG]  [BUGGY]    d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    d  =  getNumeratorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    d  =  getNumeratorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	8	1	add
5	[BUG]  [BUGGY]    d  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    d  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    d  =  getNumberDenominatorDegreesOfFreedom();		non-compiled	[CE]  cannot  find  symbol	8	None	add
6	[BUG]  [BUGGY]  ret  =  d  /  (d  <  <  2.0);  [CE]  illegal  start  of  type  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]  ret  =  d  /  (d  <  <  2.0);  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /  (d  <  <  2.0);	ret  =  d  /  (d  -  2.0);  	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	    ret  =  getNumeratorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	8	1	add
8	[BUG]  [BUGGY]    ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    ret  =  getNumeratorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	8	1	add
9	[BUG]  [BUGGY]    double  d  =  getNumberDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    double  d  =  getNumberDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    double  d  =  getNumberDegreesOfFreedom();		non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	8	None	add
10	[BUG]  [BUGGY]    ret  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    ret  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    ret  =  getNumberDenominatorDegreesOfFreedom();		non-compiled	[CE]  cannot  find  symbol	8	None	add
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]  ret  =  d  /(p  -  2.0);  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  2.0);	ret  =  d  /  (d  -  2.0);  	compilable	  [FE]  IllegalArgumentException  	7	3	replace
12	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]  ret  =  d  /(p  -  2.0);  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  2.0);	ret  =  d  /  (d  -  2.0);  	compilable	  [FE]  IllegalArgumentException  	7	3	replace
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]  ret  =  p  /(d  -  2.0);  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  -  2.0);	ret  =  d  /  (d  -  2.0);  	compilable	  [FE]  IllegalArgumentException  	7	1	replace
14	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]  ret  =  p  /(d  -  2.0);  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  -  2.0);	ret  =  d  /  (d  -  2.0);  	compilable	  [FE]  IllegalArgumentException  	7	1	replace
15	[BUG]  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    double  d  =  getDenominatorDegreesOfFreedom();		non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	8	None	add
16	[BUG]  [BUGGY]    double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();    [BUGGY]    double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	    double  d  =  getNumeratorDegreesOfFreedom().doubleValue();		non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	8	None	add
