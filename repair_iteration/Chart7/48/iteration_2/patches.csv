bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	          this.minMiddleIndex    =    index;    if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
3	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
4	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
6	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
7	[BUG]  [BUGGY]  this.minMiddleIndex  =  index  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  this.minMiddleIndex  =  index  +  2;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.minMiddleIndex  =  index  +  2;	  this.minMiddleIndex    =    index    +    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	4	2	add
9	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	4	2	add
10	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  int  index  =  getIntValue(this.minMiddleIndex).getStart();  [CE]  variable  index  is  already  defined  in  method  updateBounds(TimePeriod,int)  [FE]      AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  int  index  =  getIntValue(this.minMiddleIndex).getStart();  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        this.minMiddleIndex    =    index;    int  index  =  getIntValue(this.minMiddleIndex).getStart();	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  updateBounds(TimePeriod,int)	4	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.maxMiddleIndex        =        index;        this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
12	[BUG]  [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.maxMiddleIndex        =        index;        this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
13	[BUG]  [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  int  index  =  getIntValue(this.minMiddleIndex).getStart();  [CE]  variable  index  is  already  defined  in  method  updateBounds(TimePeriod,int)  [FE]      AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  int  index  =  getIntValue(this.minMiddleIndex).getStart();  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.maxMiddleIndex        =        index;        this.maxMiddleIndex    =    index;    int  index  =  getIntValue(this.minMiddleIndex).getStart();	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  updateBounds(TimePeriod,int)	19	None	add
14	[BUG]  [BUGGY]  this.maxMiddleIndex  =  index  +  2;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  this.maxMiddleIndex  =  index  +  2;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.maxMiddleIndex  =  index  +  2;	  this.maxMiddleIndex    =    index    +    1;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
15	[BUG]  [BUGGY]  long  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  long  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart();  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	long  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart();	  long    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getEnd();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
16	[BUG]  [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  index  +  1;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  index  +  1;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  index  +  1;	  int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getStart(),    index;    	non-compiled	[CE]  ';'  expected	17	None	replace
17	[BUG]  [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  this.maxMiddleIndex;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  this.maxMiddleIndex;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  this.maxMiddleIndex;	  int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getStart(),    index;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
18	[BUG]  [BUGGY]  If(this.minMiddleIndex  >=  0)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  If(this.minMiddleIndex  >=  0)  {  [BUGGY]      long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	If(this.minMiddleIndex  >=  0)  {	  if(this.minMiddleIndex    >=    0)    {    If(this.minMiddleIndex    >=    0)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
19	[BUG]  [BUGGY]  If(this.maxMiddleIndex  >=  0)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  If(this.maxMiddleIndex  >=  0)  {  [BUGGY]      long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	If(this.maxMiddleIndex  >=  0)  {	  if(this.minMiddleIndex    >=    0)    {    If(this.minMiddleIndex    >=    0)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
21	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
23	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
24	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
26	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	8	2	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
28	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    long  minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	6	2	add
29	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex    >=    0)    {    this.minMiddleIndex    =    index;    }    this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
30	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  int  index  =  getIntValue(this.minMiddleIndex);  [CE]  variable  index  is  already  defined  in  method  updateBounds(TimePeriod,int)  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  int  index  =  getIntValue(this.minMiddleIndex);  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        this.minMiddleIndex    =    index;    int  index  =  getIntValue(this.minMiddleIndex);	  	non-compiled	[CE]  variable  index  is  already  defined  in  method  updateBounds(TimePeriod,int)	4	None	add
31	[BUG]  [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();	  int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getStart()    -    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  int  maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	                this.maxMiddleIndex        =        index;        this.maxMiddleIndex    =    index;    int  maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
33	[BUG]  [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  int  maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  int  maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.maxMiddleIndex        =        index;        this.maxMiddleIndex    =    index;    int  maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
34	[BUG]  [BUGGY]  this.minMiddleIndex  =  index  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  this.minMiddleIndex  =  index  -  2;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.minMiddleIndex  =  index  -  2;	  this.minMiddleIndex    =    index    -    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        if(this.minMiddleIndex!=    0)    {    this.minMiddleIndex    =    index;    }    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
36	[BUG]  [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  This.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [CE]  cannot  find  symbol  This  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;  This.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.maxMiddleIndex        =        index;        this.maxMiddleIndex    =    index;    This.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;	  	non-compiled	[CE]  cannot  find  symbol  This	19	None	add
37	[BUG]  [BUGGY]  This.minMiddleIndex  =  index;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  This.minMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	This.minMiddleIndex  =  index;	          this.minMiddleIndex    =    index;    This.minMiddleIndex    =    index;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  if(this.maxMiddleIndex  >=  index)  {  [BUGGY]      long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	if(this.maxMiddleIndex  >=  index)  {	  if(this.minMiddleIndex    >=    0)    {    if(this.minMiddleIndex    >>    0)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
39	[BUG]  [BUGGY]  if(this.maxMiddleIndex  >=  index)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]  if(this.maxMiddleIndex  >=  index)  {  [BUGGY]      long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	if(this.maxMiddleIndex  >=  index)  {	  if(this.minMiddleIndex    >=    0)    {    if(this.minMiddleIndex    >>    0)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
40	[BUG]  [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  This.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [CE]  cannot  find  symbol  This  [FE]    AssertionFailedError    [CONTEXT]      .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }      [BUGGY]          this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;  This.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [BUGGY]      if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	                this.minMiddleIndex        =        index;        this.minMiddleIndex    =    index;    This.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;	  	non-compiled	[CE]  cannot  find  symbol  This	4	None	add
