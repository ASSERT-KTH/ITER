bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  double  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	double  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();	      int    e    =    getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();	      int    e    =    getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  double  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  double  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	double  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();	      int    e    =    getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	        this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	1	2	add
5	[BUG]  [BUGGY]      this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  this.minMiddleIndex  =  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	        this.minMiddleIndex    =    index;    this.minMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	1	2	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	        this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
7	[BUG]  [BUGGY]      this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	        this.minMiddleIndex    =    index;    if(this.minMiddleIndex  >=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	        this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
9	[BUG]  [BUGGY]      this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	        this.minMiddleIndex    =    index;    if(this.minMiddleIndex!=  0)  {  this.minMiddleIndex  =  index;  }	  	compilable	  [FE]  AssertionFailedError  	1	2	add
10	[BUG]  [BUGGY]  this.maxMiddleIndex  =  index  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  this.maxMiddleIndex  =  index  +  1;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.maxMiddleIndex  =  index  +  1;	      this.maxMiddleIndex    =    index;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  this.maxMiddleIndex  =  index  -  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  this.maxMiddleIndex  =  index  -  1;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.maxMiddleIndex  =  index  -  1;	      this.maxMiddleIndex    =    index;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  this.minMiddleIndex  =  index  +  1;  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  this.minMiddleIndex  =  index  +  1;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.minMiddleIndex  =  index  +  1;	      this.minMiddleIndex    =    index;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  this.minMiddleIndex  =  index  -  1;  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  this.minMiddleIndex  =  index  -  1;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	this.minMiddleIndex  =  index  -  1;	      this.minMiddleIndex    =    index;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(this.minMiddleIndex  >=  0)  {  if(this.minMiddleIndex  >=  0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  if(this.minMiddleIndex  >=  0)  {  if(this.minMiddleIndex  >=  0)  {  [BUGGY]    long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	if(this.minMiddleIndex    >=    0)    {    if(this.minMiddleIndex  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
15	[BUG]  [BUGGY]  if(this.minMiddleIndex  >=  0)  {  if(this.minMiddleIndex!=  0)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  if(this.minMiddleIndex  >=  0)  {  if(this.minMiddleIndex!=  0)  {  [BUGGY]    long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	if(this.minMiddleIndex    >=    0)    {    if(this.minMiddleIndex!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
16	[BUG]  [BUGGY]  if(this.minMiddleIndex  >=  0)  {  if(this.minMiddleIndex  >>  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  if(this.minMiddleIndex  >=  0)  {  if(this.minMiddleIndex  >>  0)  {  [BUGGY]    long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	if(this.minMiddleIndex    >=    0)    {    if(this.minMiddleIndex  >>  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
17	[BUG]  [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  index;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart(),  index;	      int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getStart();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
18	[BUG]  [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  -  1;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  -  1;	      int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getStart();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	add	        this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
20	[BUG]  [BUGGY]      this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.maxMiddleIndex  =  index;  this.maxMiddleIndex  =  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	        this.maxMiddleIndex    =    index;    this.maxMiddleIndex  =  index;	  	compilable	  [FE]  AssertionFailedError  	9	1	add
21	[BUG]  [BUGGY]      this.maxMiddleIndex  =  index;  This.maxMiddleIndex  =  index;  [CE]  cannot  find  symbol  This  [FE]      AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.maxMiddleIndex  =  index;  This.maxMiddleIndex  =  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	        this.maxMiddleIndex    =    index;    This.maxMiddleIndex  =  index;	  	non-compiled	[CE]  cannot  find  symbol  This	9	None	add
22	[BUG]  [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  -  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  -  1;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	int  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  -  1;	      int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getEnd();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  Long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  Long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	Long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();	      int    e    =    getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  if(this.minMiddleIndex  >=  0)  {  If(this.minMiddleIndex  >=  0)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  if(this.minMiddleIndex  >=  0)  {  If(this.minMiddleIndex  >=  0)  {  [BUGGY]    long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	if(this.minMiddleIndex    >=    0)    {    If(this.minMiddleIndex  >=  0)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
25	[BUG]  [BUGGY]  Long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  Long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	Long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();	      int    e    =    getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]      this.minMiddleIndex  =  index;  This.minMiddleIndex  =  index;  [CE]  cannot  find  symbol  This  [FE]    AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]      this.minMiddleIndex  =  index;  This.minMiddleIndex  =  index;  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	        this.minMiddleIndex    =    index;    This.minMiddleIndex  =  index;	  	non-compiled	[CE]  cannot  find  symbol  This	1	None	add
27	[BUG]  [BUGGY]  long  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    .getTime();  long  minMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  <  minMiddle)  {  this.minMiddleIndex  =  index;  }  }  else  {  this.minMiddleIndex  =  index;  }    [BUGGY]  long  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd();  [BUGGY]    if  (this.maxMiddleIndex  >=  0)  {  long  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart()  .getTime();  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd()  .getTime();  long  maxMiddle  =  s  +  (e  -  s)  /  2;  if  (middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  }  else  {  [CLASS]  TimePeriodValues  [METHOD]  updateBounds  [RETURN_TYPE]  void  TimePeriod  period  int  index  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  long  e  end  maxEnd  maxMiddle  maxStart  middle  minEnd  minMiddle  minStart  s  serialVersionUID  start  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  TimePeriod  period  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	299	299	1	replace	long  minStartIndex  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd();	      int    minStartIndex    =    getDataItem(this.minMiddleIndex).getPeriod().getEnd();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
