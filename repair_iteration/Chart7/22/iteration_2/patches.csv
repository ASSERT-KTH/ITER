bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item    ==    null    ||    item.getPeriod()    ==    null)    {    if(item  ==  null  ||  item.getPeriod()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
2	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  if(item  ==  null  ||  item.getPeriod()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  if(item  ==  null  ||  item.getPeriod()!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item    ==    null    ||    item.getPeriod()    ==    null)    {    if(item  ==  null  ||  item.getPeriod()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
3	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  if(item!=  null  ||  item.getPeriod()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  if(item!=  null  ||  item.getPeriod()  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item    ==    null    ||    item.getPeriod()    ==    null)    {    if(item!=  null  ||  item.getPeriod()  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();	  	compilable	  [FE]  AssertionFailedError  	1	5	add
5	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();	  	compilable	  [FE]  AssertionFailedError  	1	5	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	1	5	add
7	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	1	5	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.remove(item);  fireSeriesChanged();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.remove(item);  fireSeriesChanged();	  	compilable	  [FE]  AssertionFailedError  	1	5	add
9	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.remove(item);  fireSeriesChanged();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.remove(item);  fireSeriesChanged();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.remove(item);  fireSeriesChanged();	  	compilable	  [FE]  AssertionFailedError  	1	5	add
10	[BUG]  [BUGGY]  this.data.put(item,  item);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  this.data.put(item,  item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	this.data.put(item,  item);	  if(this.data!=    null)    {    TimePeriodValue    item    =(TimePeriodValue)this.data.get(item);    this.data.add(item);    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
11	[BUG]  [BUGGY]  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);	          this.data.add(item);    fireSeriesChanged();    this.data.add(item);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item!=  null  ||  item.getPeriod()!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	if(item!=  null  ||  item.getPeriod()!=  null)  {	  if(item    ==    null    ||    item.getPeriod()!=    null)    {    if(item!=    null    ||    item.getPeriod()!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	21	10	replace
13	[BUG]  [BUGGY]  if(item!=  null  ||  item.getPeriod()!=  null)  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item!=  null  ||  item.getPeriod()!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item!=  null  ||  item.getPeriod()!=  null)  {	  if(item    ==    null    ||    item.getPeriod()!=    null)    {    if(item!=    null    ||    item.getPeriod()!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	21	10	replace
14	[BUG]  [BUGGY]  TimePeriodValue  item  =(TimePeriodValue)this.data.get(item.getPeriod());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  TimePeriodValue  item  =(TimePeriodValue)this.data.get(item.getPeriod());  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	TimePeriodValue  item  =(TimePeriodValue)this.data.get(item.getPeriod());	  TimePeriodValue    item    =(TimePeriodValue)this.data.get(item    -    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
15	[BUG]  [BUGGY]  TimePeriodValue  item  =  this.data.get(index  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  TimePeriodValue  item  =  this.data.get(index  -  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	TimePeriodValue  item  =  this.data.get(index  -  1);	  TimePeriodValue    item    =    this.data.get(index);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
16	[BUG]  [BUGGY]  TimePeriodValue  item  =  this.data.get(index  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  TimePeriodValue  item  =  this.data.get(index  +  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	TimePeriodValue  item  =  this.data.get(index  +  1);	  TimePeriodValue    item    =    this.data.get(index);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
17	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	16	None	add
18	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
19	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
20	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
21	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
22	[BUG]  [BUGGY]  If(item  ==  null  ||  item.getPeriod()!=  null)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  If(item  ==  null  ||  item.getPeriod()!=  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	If(item  ==  null  ||  item.getPeriod()!=  null)  {	  if(item    ==    null    ||    item.getPeriod()!=    this)    {    If(item    ==    null    ||    item.getPeriod()!=    this)    {    	non-compiled	[CE]  ';'  expected	12	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
24	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
25	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	14	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
27	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
28	[BUG]  [BUGGY]  TimePeriodValue  item  =(TimePeriodValue)this.data.get(index  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  TimePeriodValue  item  =(TimePeriodValue)this.data.get(index  -  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	TimePeriodValue  item  =(TimePeriodValue)this.data.get(index  -  1);	  TimePeriodValue    item    =(TimePeriodValue)this.data.get(index);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    this.data.add(item);  this.data.add(item);  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        this.data.add(item);    this.data.add(item);  this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	4	5	add
30	[BUG]  [BUGGY]          this.data.add(item);    this.data.add(item);  this.data.add(item);  this.data.add(item);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    this.data.add(item);  this.data.add(item);  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        this.data.add(item);    this.data.add(item);  this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	4	5	add
31	[BUG]  [BUGGY]          this.data.add(item);    this.data.add(item);  This.data.add(item);  this.data.add(item);  [CE]  package  This  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    this.data.add(item);  This.data.add(item);  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        this.data.add(item);    This.data.add(item);  this.data.add(item);	  	non-compiled	[CE]  package  This  does  not  exist	4	None	add
32	[BUG]  [BUGGY]  Thread.currentThread().setContextClassIndex(this.data.getClass().getName());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Thread.currentThread().setContextClassIndex(this.data.getClass().getName());  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Thread.currentThread().setContextClassIndex(this.data.getClass().getName());	  Thread.currentThread().setContextClassIndex(item.getClass().getName());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
33	[BUG]  [BUGGY]  Thread.currentThread().setContextClassIndex(item.getClass().getName(),  item.getPeriod());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Thread.currentThread().setContextClassIndex(item.getClass().getName(),  item.getPeriod());  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Thread.currentThread().setContextClassIndex(item.getClass().getName(),  item.getPeriod());	  Thread.currentThread().setContextClassIndex(item.getClass().getName());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
34	[BUG]  [BUGGY]  Thread.currentThread().setContextClassIndex(this.data.size()  -  1);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Thread.currentThread().setContextClassIndex(this.data.size()  -  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Thread.currentThread().setContextClassIndex(this.data.size()  -  1);	          if(item    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  item);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Thread.currentThread().setContextClassLoader(this,  item);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
36	[BUG]  [BUGGY]  this.data.add(item.getPeriod());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  this.data.add(item.getPeriod());  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	this.data.add(item.getPeriod());	  this.data.add(getPeriod());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
37	[BUG]  [BUGGY]  this.data.add(getPeriod(),  item);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  this.data.add(getPeriod(),  item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	this.data.add(getPeriod(),  item);	  this.data.add(getPeriod());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
38	[BUG]  [BUGGY]  nested.add(item.getPeriod());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  nested.add(item.getPeriod());  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	nested.add(item.getPeriod());	  nested.add(item);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    this.data.add(item);  fireSeriesChanged();  this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	26	5	add
40	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    this.data.add(item);  fireSeriesChanged();  this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	26	5	add
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	26	5	add
42	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	26	5	add
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  fireSeriesChanged();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    this.data.add(item);  fireSeriesChanged();	  	compilable	  [FE]  AssertionFailedError  	26	5	add
44	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  fireSeriesChanged();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  this.data.add(item);  fireSeriesChanged();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    this.data.add(item);  fireSeriesChanged();	  	compilable	  [FE]  AssertionFailedError  	26	5	add
45	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(this.data!=  null)  {  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	if(this.data!=  null)  {  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	          if(item    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	17	10	replace
46	[BUG]  [BUGGY]  if(this.data!=  null)  {  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(this.data!=  null)  {  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(this.data!=  null)  {  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	          if(item    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	compilable	  [FE]  IllegalArgumentException  	17	10	replace
47	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item!=  null  ||  item.getPeriod()  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	if(item!=  null  ||  item.getPeriod()  ==  null)  {	  if(item    ==    null    ||    item.getPeriod()!=    null)    {    if(item!=    null    ||    item.getPeriod()!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	21	10	replace
48	[BUG]  [BUGGY]  if(item!=  null  ||  item.getPeriod()  ==  null)  {  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item!=  null  ||  item.getPeriod()  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item!=  null  ||  item.getPeriod()  ==  null)  {	  if(item    ==    null    ||    item.getPeriod()!=    null)    {    if(item!=    null    ||    item.getPeriod()!=    null)    {    	compilable	  [FE]  IllegalArgumentException  	21	10	replace
49	[BUG]  [BUGGY]  If(item  ==  null  ||  item.getPeriod()  ==  null)  {  [CE]  ';'  expected  [FE]            IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  If(item  ==  null  ||  item.getPeriod()  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	If(item  ==  null  ||  item.getPeriod()  ==  null)  {	  if(item    ==    null    ||    item.getPeriod()!=    null)    {    If(item    ==    null    ||    item.getPeriod()!=    null)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
50	[BUG]  [BUGGY]  Thread.currentThread().setContextClassIndex(item.getClass(),  item.getName());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Thread.currentThread().setContextClassIndex(item.getClass(),  item.getName());  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Thread.currentThread().setContextClassIndex(item.getClass(),  item.getName());	  Thread.currentThread().setContextClassIndex(item.getClass().getName());    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  updateBounds(item.getPeriod(),  this.data.size()  -  1);  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  updateBounds(item.getPeriod(),  this.data.size()  -  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	updateBounds(item.getPeriod(),  this.data.size()  -  1);	          if(item    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  Iterator  <  TimePeriodValue>  it  =  this.data.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  Iterator  <  TimePeriodValue>  it  =  this.data.iterator();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    Iterator  <  TimePeriodValue>  it  =  this.data.iterator();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	1	None	add
53	[BUG]  [BUGGY]  Iterator  <  TimePeriodValue>  it  =  this.data.iterator();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Iterator  <  TimePeriodValue>  it  =  this.data.iterator();  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Iterator  <  TimePeriodValue>  it  =  this.data.iterator();	  if(this.data!=    null)    {    TimePeriodValue    item    =(TimePeriodValue)this.data.get(item);    this.data.add(item);    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	28	None	replace
54	[BUG]  [BUGGY]  TimePeriodValue  item  =(TimePeriodValue)this.data.get(index  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  TimePeriodValue  item  =(TimePeriodValue)this.data.get(index  +  1);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	TimePeriodValue  item  =(TimePeriodValue)this.data.get(index  +  1);	  TimePeriodValue    item    =(TimePeriodValue)this.data.get(index);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
55	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
56	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
57	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "  [CE]  unclosed  string  literal  [FE]      IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "	  	non-compiled	[CE]  unclosed  string  literal	16	None	add
58	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
59	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
60	[BUG]  [BUGGY]  if(item!=  null)  {  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item!=  null)  {  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item!=  null)  {  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  }	          this.data.add(item);    fireSeriesChanged();    this.data.add(item);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
61	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  If(item  ==  null  ||  item.getPeriod()  ==  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  null)  {  If(item  ==  null  ||  item.getPeriod()  ==  null)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item    ==    null    ||    item.getPeriod()    ==    null)    {    If(item  ==  null  ||  item.getPeriod()  ==  null)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
62	[BUG]  [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [CE]  illegal  start  of  type  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	          if(item    ==    null)    {    throw    new    IllegalArgumentException(       "       ");    }    if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	1	5	add
64	[BUG]  [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                this.data.add(item);        fireSeriesChanged();        this.data.add(item);    fireSeriesChanged();    this.data.add(item);  fireSeriesChanged();  this.data.add(item);	  	compilable	  [FE]  AssertionFailedError  	1	5	add
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  this)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	if(item  ==  null  ||  item.getPeriod()  ==  this)  {	  if(item    ==    null    ||    item.getPeriod()!=    this)    {    if(item!=    null    ||    item.getPeriod()!=    this)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
66	[BUG]  [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  this)  {  [FE]  AssertionFailedError  [FE]          IllegalArgumentException      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(item  ==  null  ||  item.getPeriod()  ==  this)  {  [BUGGY]      throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(item  ==  null  ||  item.getPeriod()  ==  this)  {	  if(item    ==    null    ||    item.getPeriod()!=    this)    {    if(item!=    null    ||    item.getPeriod()!=    this)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
67	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  this);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  this);  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	Thread.currentThread().setContextClassLoader(this,  this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
68	[BUG]  [BUGGY]  if(this.data!=  null)  {  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(this.data!=  null)  {  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(this.data!=  null)  {  this.data.add(item);  fireSeriesChanged();  this.data.add(item);  fireSeriesChanged();  }	          this.data.add(item);    fireSeriesChanged();    this.data.add(item);    fireSeriesChanged();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
69	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
70	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
71	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
72	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item!=  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item!=    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  if(item!=  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  IllegalArgumentException  	16	10	add
73	[BUG]  [BUGGY]  if(this.data!=  null)  {  this.data.add(item);  this.data.add(item);  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]  if(this.data!=  null)  {  this.data.add(item);  this.data.add(item);  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	if(this.data!=  null)  {  this.data.add(item);  this.data.add(item);  }	          this.data.add(item);    this.data.add(item);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	add	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
75	[BUG]  [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  add(TimePeriodValue  item)  {      [BUGGY]          if(item    ==    null)    {    throw    new    IllegalArgumentException(     "     ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException(   "     ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }  [BUGGY]      if  (item  ==  null)  {  throw  new  IllegalArgumentException(     "Null  item  not  allowed.     ");  }  this.data.add(item);  updateBounds(item.getPeriod(),  this.data.size()  -  1);  fireSeriesChanged();  }  [CLASS]  TimePeriodValues  [METHOD]  add  [RETURN_TYPE]  void  TimePeriodValue  item  [VARIABLES]  List  data  String  DEFAULT_DOMAIN_DESCRIPTION  DEFAULT_RANGE_DESCRIPTION  description  domain  old  range  boolean  TimePeriodValue  item  long  serialVersionUID  int  index  maxEndIndex  maxMiddleIndex  maxStartIndex  minEndIndex  minMiddleIndex  minStartIndex  	projects/Chart7/source/org/jfree/data/time/TimePeriodValues.java	0.31622776601683794	243	243	1	replace	                if(item        ==        null)        {        throw        new        IllegalArgumentException(       "       ");        }        if(item    ==    null)    {    throw    new    IllegalArgumentException(   "       ");    }    if(item  ==  null)  {  throw  new  IllegalArgumentException( "   ");  }  if(item  ==  null)  {  throw  new  IllegalArgumentException( "Null  item  not  allowed.   ");  }	  	compilable	  [FE]  AssertionFailedError  	14	1	add
