compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 + 1) { this.maxMiddleIndex = index * 4 + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 + 1) { this.maxMiddleIndex = index * 4 + 1;!=
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  minMiddleIndex;  this.maxStartIndex  =  maxMiddleIndex;  ,this.minEndIndex = minMiddleIndex; this.maxStartIndex = maxMiddleIndex;
compilation error,131,replace,[CE] cannot find symbol maxMethodIndex, this.minEndIndex  =  minMiddleIndex;  this.maxStartIndex  =  maxMiddleIndex;  ,this.minEndIndex = minMiddleIndex; this.maxStartIndex = maxMethodIndex;
compilation error,246,add,[CE] cannot find symbol, ,updateBounds(item.getSeries(), this.data.size() - 1);
increase failing tests,246,add, [FE]  Size, ,updateBounds(item.getPeriod(), this.data.size() - 1); fireSeriesChanged();
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxStartIndex, minMiddleIndex));
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  %  2  +  1;  ,this.maxEndIndex = index % 2 + 1;
compilation error,131,add,[CE] ')' expected, ,this.minEndIndex =(minEndIndex < 0? 0 : minEndIndex, range);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = this.maxMiddleIndex + 1;
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index / 2 * 1;
patch is same with buggy,131,replace,, int  maxMiddleIndex  =  minMiddleIndex  -  1;  ,int maxMiddleIndex = minMiddleIndex - 1;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.minMiddleIndex);  ,this.minStartIndex = Math.min(this.minStartIndex, this.minMiddleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,if(index > this.maxMiddleIndex) { if(index >= this.maxMiddleIndex) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  %  2  -  1;  ,this.maxEndIndex = index % 2 - 1;
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index  %  2;  ,this.maxEndIndex = -index % 2;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.min(this.minEndIndex, this.maxStartIndex);
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index * 4;
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  2  +  1);  ,return(this.maxMiddleIndex * 2 + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minEndIndex - 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minStartIndex  +  1);  , 
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3;
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3 - 1; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(minEndIndex >> 0? minEndIndex : maxEndIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4;!=
patch is same with buggy,131,replace,, this.minMiddleIndex  =  getMinMiddleIndex();  ,this.minMiddleIndex = getMinMiddleIndex();
compilation error,317,replace,[CE] illegal start of expression, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,if(end > minEnd) { this.minEndIndex = index * 6; if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] illegal start of expression, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,if(end > minEnd) { this.minEndIndex = index * 6; if(end > maxEnd) { this.minEndIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
increase failing tests,246,add, [FE]  Size, ,updateBounds(item.getPeriod(), this.data.size() - 2);
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,if(this.maxMiddleIndex >= index * 2) { this.maxMiddleIndex = index * 2; >>
patch is same with buggy,130,replace,, if(domain!=  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  minEndIndex  -  1;  ,this.maxEndIndex = minEndIndex - 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  0);  ,this.minMiddleIndex = Math.min(this.minEndIndex, 0);
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index / 4;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1)) { this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(10,  -1);  ,this.minMiddleIndex = Math.min(10, -1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(10,  -1);  ,this.minMiddleIndex = Math.min(10, 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(10,  -1);  , 
compilation error,131,add,[CE] cannot find symbol M, ,this.maxEndIndex = M.max(maxEndIndex, maxEndIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  getMinEndIndex();  ,this.minEndIndex = getMinEndIndex();
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2;
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex =(this.maxEndIndex + 2);
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  minStartIndex));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minStartIndex, range));
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s > -e) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s > -e) >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1)) { this.minEndIndex = index + 2; }
increase failing tests,306,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.minEndIndex =(minEndIndex < 0? maxEndIndex : minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  , 
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  minEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, minEndIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxStartIndex,  -maxMiddleIndex);  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.minStartIndex);  ,this.minEndIndex = Math.min(this.minEndIndex, this.minStartIndex);
compilation error,131,add,[CE] cannot find symbol M, ,this.maxEndIndex = M.max(maxEndIndex, minEndIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] ')' expected, ,this.minEndIndex = index * 2; if(this.minEndIndex > index 2) { this.minEndIndex = index * 3; }
increase failing tests,317,add, [FE]  Size, ,this.maxEndIndex = index + 2 + 1;
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index + 1) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; >>
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1)) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3;
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, range));
increase failing tests,310,replace, [FE]  Size, this.minMiddleIndex  =  index  /  3;  ,this.minMiddleIndex = index * 3;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  minEndIndex);  ,this.maxMiddleIndex = Math.min(maxStartIndex, minEndIndex);
compilation error,332,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(index - 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  maxMiddleIndex);  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  maxStartIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, range));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3; }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(-1,  -maxStartIndex);  ,this.minMiddleIndex = Math.min(1, -maxStartIndex);
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index << 2)? 2 : index;
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =  index  *  4;  ,this.maxEndIndex = index * 5 + 1;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(10, 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3;!=
compilation error,131,add,[CE] cannot find symbol minSize, ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minSize);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 4; >> else { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  else  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; hopped else { this.minEndIndex = index * 4;
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  else  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; ridden else if(end > minEnd) {
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] not a statement, ,if(this.minMiddleIndex > index) { this.minEndIndex = index * 2; figured
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  maxEndIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, maxEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex - 1);
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex > 0? this.maxMiddleIndex : data.size());
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex : data.size());
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2;
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  1)?  0  :  index  +  1;  ,this.minEndIndex =(index < 1)? 0 : index + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxEndIndex,  -maxStartIndex);  ,this.minMiddleIndex = Math.min(maxEndIndex, -maxStartIndex);
patch is same with buggy,131,replace,, this.maxStartIndex  =  maxStartIndex;  this.maxEndIndex  =  maxEndIndex;  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  minEndIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, minEndIndex + 1);
increase failing tests,310,add, [FE]  Size, ,this.minMiddleIndex = index + 2 + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, maxStartIndex));
compilation error,131,add,[CE] cannot find symbol min, ,this.minMiddleIndex = Math.min(-min, -minMiddleIndex);
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex == index) { if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex >= index) { if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) } index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(this.minEndIndex,  maxMiddleIndex);  ,this.maxEndIndex = Math.max(maxEndIndex, -maxEndIndex);
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(this.minEndIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.max(minEndIndex, -maxEndIndex);
increase failing tests,310,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index - 3;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex - 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minMiddleIndex - 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex + 1);
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > 0) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > 0) >>
patch is same with buggy,131,replace,, this.maxStartIndex  =  -1;  ,this.maxStartIndex = -1;
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, 2);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 4; if(end < minEnd) { this.minEndIndex = index * 5; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex =(this.minEndIndex + 2);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(minStartIndex,  maxStartIndex);  , 
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =(this.maxMiddleIndex  >  0?  0  :  minMiddleIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, 1);
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(-1,  -maxStartIndex);  ,this.maxEndIndex = Math.max(-maxEndIndex, -maxStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = this.minMiddleIndex + 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  minEndIndex  +  1);  , 
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2; figured
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; >>
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; luckily if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(minMiddleIndex,  this.minEndIndex);  ,this.maxStartIndex = Math.max(this.minStartIndex, this.maxStartIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) } this.maxMiddleIndex = index + 2; }
compilation error,332,replace,[CE] cannot find symbol minimumEndIndex, this.minEndIndex  =(index  -  3);  ,this.minimumEndIndex =(index - 2);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minStartIndex,  this.minEndIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex);  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.minEndIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 1; }
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > maxMiddle) } this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)+ 1;
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 0)? 2 : index;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; }
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = -(this.maxEndIndex * 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,552,replace,[CE] ';' expected, return(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  *  1  :  0);  ,return this.maxMiddleIndex * 2 + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(end > minEnd) { this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(end > minEnd) { this.minEndIndex = index * 2; }
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  -  1);  ,this.maxEndIndex =(index - 1);
patch is same with buggy,552,replace,, this.maxMiddleIndex  =  getMaxMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddleIndex();
compilation error,552,replace,[CE] cannot find symbol minMiddle, this.maxMiddleIndex  =  getMaxMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddleIndex(this.minMiddle);
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s >> 0) {
compilation error,332,replace,[CE] ';' expected, this.minEndIndex  =  -index  /  2;  ,this.maxEndIndex =(index % 2 == 0)? getDataItem(this.maxEndIndex).getPeriod().getEnd() : period.getDataItem(this.maxEndIndex), index);
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(minStartIndex,  1);  ,this.minStartIndex = Math.min(10, 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 4; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  maxStartIndex);  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = getMinMiddleIndex() - 1;
increase failing tests,246,add, [FE] AssertionFailedError, ,else if(this.data.contains(item)) { this.data.add(item); } else if(this.data.size() > 0) { this.data.add(item); }
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex =(index - 1)/ 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
compilation error,131,add,[CE] bad operand types for binary operator '*', ,this.maxEndIndex = Math.max(maxEndIndex, range * 2);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(maxEndIndex,  minMiddleIndex);  ,this.minStartIndex = Math.min(maxEndIndex, minMiddleIndex);
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex > 0? this.maxMiddleIndex * 2 : 0);
compilation error,305,add,[CE] generics are not supported in -source 1.4, ,if(e > this.minMiddleIndex && e) < maxMiddle) {
compilation error,305,add,[CE] ')' expected, ,if(e > this.minMiddleIndex && e с maxMiddle) {
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxEndIndex);
compilation error,332,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex = index / 4;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2)) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4; >>
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3;
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index << 0)? index : index + 1;
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex + 2;
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > maxEnd) { this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > end) { this.minEndIndex = index * 6; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  minMiddleIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, minMiddleIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2)) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] ';' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3 + 1; } else { this.maxMiddleIndex = index; e++; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
compilation error,306,add,[CE] ';' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3 + 1; } else { this.maxMiddleIndex = index; e++; s = getDataItem(this.minMiddleIndex).getPeriod().getEn
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index  *  4  +  1)  {  this.maxMiddleIndex  =  index  *  4  +  1;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4 + 1; >>
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s <= -e) }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.max(this.minStartIndex,  minEndIndex);  ,this.minMiddleIndex = Math.min(-minMiddleIndex, -minMiddleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] variable e is already defined in method updateBounds(TimePeriod,int), ,long e = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
increase failing tests,310,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 4 + 1;
compilation error,131,replace,[CE] incompatible types, this.maxMiddleIndex  =(this.maxMiddleIndex  >  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex = DEFAULT_DOMAIN_DESCRIPTION;
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 3; >>
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) } this.minEndIndex = index * 3; }
patch is same with buggy,130,replace,, this.domain  =  domain  +  3;  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minEndIndex, 0);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2  +  1;  ,this.minEndIndex = index * 2 + 1;
compilation error,332,add,[CE] cannot find symbol index, ,this.index = -index * 3 + 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.minStartIndex);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex)+ 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex)+ 1;
patch is same with buggy,130,replace,, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 1;
increase failing tests,130,replace, [FE]  Size, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 2;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 2 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 - 1; }
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  >=  1)?  1  :  index;  ,this.maxEndIndex =(index >= 1)? 1 : index + 1;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  1)?  1  :  index;  ,this.maxEndIndex =(index >= 1)? 1 : index;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 1; >>
compilation error,317,add,[CE] generics are not supported in -source 1.4, ,if(this.maxMiddleIndex >= index + 1) < this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  0);  ,this.minMiddleIndex = Math.min(this.minEndIndex, 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxMiddleIndex);
increase failing tests,271,replace, [FE]  Size, this.minStartIndex  =(index  >=  1)?  this.minStartIndex  :  index  +  1;  ,this.minStartIndex =(index >= 1)? this.minStartIndex : index + 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > maxMiddle) } this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
increase failing tests,332,replace, [FE] AssertionFailedError, this.maxEndIndex  =(index  *  3);  ,this.maxEndIndex =(index * 2 + 1);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(this.maxStartIndex,  this.minStartIndex);  , 
compilation error,306,add,[CE] variable s is already defined in method updateBounds(TimePeriod,int), ,long s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =(index  -  3);  ,this.minEndIndex =(index * 3);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex / 2;
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain + 1; } else { this.domain = domain + 1; this.data = new ArrayList(); }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index - 1; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 2; if(this.minEndIndex >= index) { this.minEndIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= index) { this.maxMiddleIndex = index + 1; >>
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxMiddleIndex,  minStartIndex);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, minStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  maxEndIndex);  ,this.maxMiddleIndex = Math.min(maxStartIndex, maxEndIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) } this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  this.maxEndIndex);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.maxEndIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  /  2;  ,this.minEndIndex = -index / 2;
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =  -index  /  2;  ,this.minEndIndex = -index / 2 + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.minStartIndex);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.minStartIndex);
patch is same with buggy,317,replace,, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,if(end > minEnd) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex < index) { if(end > minEnd) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  minMiddleIndex);  , 
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex =(index - 3);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,321,replace,[CE] cannot find symbol miniEndIndex, this.maxEndIndex  =  index  *  4;  ,this.miniEndIndex = index * 5;
compilation error,552,add,[CE] cannot find symbol, ,this.maxMiddleIndex = getLowerMiddleIndex();
compilation error,131,replace,[CE] cannot find symbol minReturnIndex, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  minMiddleIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, this.minReturnIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,replace,[CE] ')' expected, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index 2) { this.maxMiddleIndex = index * 3; }
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index + 1)? this.minStartIndex : index + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex)- 1;
compilation error,317,replace,[CE] ')' expected, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index 2) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; presumably
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 1)? 1 : index;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 3 + 1; >>
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  0);  ,this.maxEndIndex = Math.max(this.maxEndIndex, 0);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.max(minEndIndex, maxMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  , 
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = this.minMiddleIndex + 3;
patch is same with buggy,130,replace,, if(domain  ==  this.domain)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain == this.domain) { this.domain = domain; this.range = range; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minStartIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex || e > this.maxMiddleIndex) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex || e > this.maxMiddleIndex)!=
patch is same with buggy,130,replace,, this.minEndIndex  =  0;  ,this.minEndIndex = 0;
compilation error,317,replace,[CE] illegal start of expression, this.maxEndIndex  =  index  /  2  +  1;  ,if(this.minEndIndex >= index) { this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 6; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  0);  ,this.minStartIndex = Math.min(this.minMiddleIndex, 0);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minEndIndex);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  1);  , 
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(-1,  -maxMiddleIndex);  ,this.maxStartIndex = Math.max(-maxStartIndex, -maxMiddleIndex);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(-1,  -maxMiddleIndex);  ,this.minStartIndex = Math.min(-minStartIndex, -maxMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index + 2)) { this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = maxMiddleIndex - 1;
patch is same with buggy,552,replace,, if(this.maxMiddleIndex  <=  0)  {  return  this.maxMiddleIndex;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; >>
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  , 
increase failing tests,306,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  index  -  1;  ,this.minMiddleIndex = index - 2;
patch is same with buggy,306,replace,, this.minMiddleIndex  =  index  -  1;  ,this.minMiddleIndex = index - 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,305,replace,, if(e  >  maxMiddle  ||  e!=  -e)  {  ,if(e > maxMiddle || e!= -e) {
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minStartIndex,  this.maxEndIndex);  ,this.minMiddleIndex = Math.max(this.minStartIndex, this.maxEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxStartIndex,  minEndIndex);  ,this.maxEndIndex = Math.max(maxStartIndex, minEndIndex);
increase failing tests,317,replace, [FE]  Size, this.maxEndIndex  =  index  /  2  +  1;  ,this.maxEndIndex = index * 2 + 1;
patch is same with buggy,317,replace,, this.maxEndIndex  =  index  /  2  +  1;  , 
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  -(this.minEndIndex  +  2);  ,this.minEndIndex = -(this.minEndIndex * 2);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > end) { this.minEndIndex = index * 2 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.minEndIndex = index * 2 + 1; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(maxMiddleIndex,  minEndIndex);  ,this.minStartIndex = Math.min(maxMiddleIndex, minEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = maxMiddleIndex / 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  minMiddleIndex  -  1;  ,this.maxMiddleIndex = minMiddleIndex - 1;
patch is same with buggy,131,replace,, int  maxEndIndex  =  minEndIndex  +  1;  ,int maxEndIndex = minEndIndex + 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.maxStartIndex);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.minMiddleIndex);  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 2; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex  %  2;  ,this.minMiddleIndex = minMiddleIndex % 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  minMiddleIndex  %  2;  ,this.minMiddleIndex = minMiddleIndex % 2 + 1;
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3; }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && e < this.minMiddleIndex) {
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  maxMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.minStartIndex);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
compilation error,317,replace,[CE] ')' expected, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.minEndIndex > index 2) { this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxMiddleIndex,  minStartIndex);  ,this.maxStartIndex = Math.max(maxMiddleIndex, minStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; >>
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(maxStartIndex,  0);  ,this.maxStartIndex = Math.min(maxStartIndex, 0);
compilation error,131,replace,[CE] cannot find symbol M, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  maxEndIndex));  ,this.maxEndIndex = M.max(maxEndIndex, maxEndIndex);
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 1)? 0 : index + 1;
compilation error,130,add,[CE] cannot find symbol length, ,if(domain!= null && domain.length > 0) { this.domain = domain; this.range = range; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxEndIndex);
compilation error,131,replace,[CE] ')' expected, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  -1));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.maxStartIndex, Math.min(this.minMiddleIndex, minEndIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minEndIndex, minEndIndex * 2);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > index) { if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index - 1; }
compilation error,131,replace,[CE] cannot find symbol, this.minEndIndex  =  getMinEndIndex();  ,this.minStartIndex = getMinimumIndex();
compilation error,131,replace,[CE] no suitable method found for min(int,int,int), this.minStartIndex  =  Math.min(2,  this.maxStartIndex);  ,this.minStartIndex = Math.min(2, this.minStartIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxStartIndex);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex);
compilation error,306,add,[CE] generics are not supported in -source 1.4, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) < this.maxMiddleIndex = index * 4; }
compilation error,332,replace,[CE] cannot find symbol minimumEndIndex, this.maxEndIndex  =(index  -  1);  ,this.minimumEndIndex =(index * 2);
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > -1) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > -1) >>
compilation error,131,add,[CE] cannot find symbol minConstants, ,this.maxStartIndex = Math.min(this.maxMiddleIndex, this.minConstants);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxEndIndex);  ,this.minEndIndex = Math.min(minMiddleIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, maxEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex * 2;
increase failing tests,306,replace, [FE]  Size, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,index = index + 2; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 3 + 2; } else { this.maxMiddleIndex = index; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index; }
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 3 + 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
compilation error,131,add,[CE] cannot find symbol, ,this.minMiddleIndex = minMiddleIndex * 2 + getDataItemCount();
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(10,  -1);  ,this.minMiddleIndex = Math.min(10, -1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minStartIndex = Math.min(minStartIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMiddleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  minEndIndex);  ,this.maxMiddleIndex = Math.min(maxStartIndex, minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index + 1)) { this.minEndIndex = index + 3; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minEndIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.max(this.minEndIndex, this.maxMiddleIndex);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minMiddleIndex > 0) { this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex > 0) { this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  this.maxMiddleIndex);  , 
compilation error,131,add,[CE] cannot find symbol millisecondIndex, ,this.minMiddleIndex = Math.min(millisecondIndex, this.minMiddleIndex);
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.min(middleIndex, this.minMiddleIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex || e > maxMiddle) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex || e > maxMiddle)!=
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(maxEndIndex,  minEndIndex  +  1);  ,this.minMiddleIndex = 1;
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e < -1) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e < -1) >>
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex + 1);
compilation error,317,add,[CE] cannot find symbol minimumMiddleIndex, ,if(this.minimumMiddleIndex > index) { this.minEndIndex = index * 2; }
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  1)?  0  :  index  +  1;  ,this.minEndIndex =(index < 1)? 0 : index + 1;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > 1) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > 1)) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3  -  1;  ,this.maxMiddleIndex = index * 3 - 1;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex < 0) { this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > -e) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > -e) >>
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  0);  ,this.minStartIndex = Math.min(this.minEndIndex, 0);
increase failing tests,306,replace, [FE] AssertionFailedError, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.minStartIndex,  this.maxMiddleIndex);  ,this.maxEndIndex = Math.max(this.minStartIndex, this.maxMiddleIndex);
compilation error,552,add,[CE] cannot find symbol, ,return getDataItemCount() / this.maxMiddleIndex;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  minStartIndex);  ,this.minEndIndex = Math.min(this.minMiddleIndex, minStartIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
increase failing tests,131,replace, [FE] ArithmeticException, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxMiddleIndex = this.minMiddleIndex / 0;
compilation error,317,add,[CE] generics are not supported in -source 1.4, ,if(this.maxMiddleIndex >= index - 1) < this.maxMiddleIndex = index - 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 3; >>
increase failing tests,332,replace, [FE] AssertionFailedError, this.maxEndIndex  =(index  *  3);  ,this.maxEndIndex =(index + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index - 1)) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(minEndIndex, minStartIndex + 1);
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index * 4 + 1;
increase failing tests,321,replace, [FE]  Size, this.minEndIndex  =(index  >=  2)?  2  :  index;  ,this.minEndIndex =(index >= 0)? 4 : index + 1;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, -1));
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; >>
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex < index + 1)) { this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  this.minEndIndex);  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2; }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || e!= -e) }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxMiddleIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.maxMiddleIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; Possibly
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(middle < maxMiddle) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  maxStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.maxStartIndex = maxStartIndex; this.maxEndIndex = maxEndIndex;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s < 0) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s <= -1) {
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxEndIndex, 0);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1)) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 1;
compilation error,131,add,[CE] cannot find symbol min, ,this.minMiddleIndex = Math.max(min, maxStartIndex, maxEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(minEndIndex < 0? 0 : minEndIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =(index  -  1)/  2;  ,this.minEndIndex =(index - 1)/ 2;
increase failing tests,332,replace, [FE] AssertionFailedError, this.minEndIndex  =(index  -  1)/  2;  ,this.minEndIndex =(index - 1)/ 2 + 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
increase failing tests,131,replace, [FE] ArithmeticException, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex / 0;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s >> -1) {
compilation error,310,add,[CE] cannot find symbol minimMiddleIndex, ,this.minimMiddleIndex = index / 3;
patch is same with buggy,306,replace,, s  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  ,s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
patch is same with buggy,306,replace,, s  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  ,s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; >>
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; meanwhile
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s > -1) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e > -e) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > index)) { this.maxMiddleIndex = index - 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2;!=
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(maxStartIndex,  minMiddleIndex);  ,this.minStartIndex = minStartIndex + 1; this.maxMiddleIndex = maxMiddleIndex + 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minEndIndex, 1);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(this.minEndIndex, 2);
patch is same with buggy,246,replace,, else  if(this.data.contains(item))  {  this.data.add(item);  }  else  if(this.data.contains(item))  {  this.data.add(item);  }  ,else if(this.data.contains(item)) { this.data.add(item); } else if(this.data.contains(item)) { this.data.add(item); }
patch is same with buggy,246,replace,, else  if(this.data.contains(item))  {  this.data.add(item);  }  else  if(this.data.contains(item))  {  this.data.add(item);  }  ,else if(this.data.contains(item)) { this.data.add(item); } else if(this.data.contains(item)) { this.data.add(item); }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 1; >>
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(minEndIndex,  maxStartIndex);  ,this.minEndIndex = minEndIndex + 2; this.maxMiddleIndex = maxMiddleIndex + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minStartIndex, 0);
compilation error,131,replace,[CE] possible loss of precision, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(-1.0, -maxMiddleIndex);
compilation error,317,add,[CE] cannot find symbol, ,if(this.maxMiddleIndex < index * 4 && isItemVisible(index, end)) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3; >>
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 3; luckily if(this.maxEndIndex >= index) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 1; meanwhile
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minMiddleIndex,  this.maxEndIndex);  ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxEndIndex);
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.max(middleIndex, 0);
compilation error,131,add,[CE] cannot find symbol millisecondIndex, ,this.minMiddleIndex = Math.max(millisecondIndex, 0);
compilation error,131,add,[CE] cannot find symbol length, ,this.minEndIndex = Math.min(minEndIndex, range.length * 1);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] 'else' without 'if', ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 4 + 1; } else { this.maxMiddleIndex = index; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index -
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex <= index) { this.maxMiddleIndex = index + 2; >>
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index << 0)? 4 : index;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex + 2);
compilation error,131,add,[CE] cannot find symbol M, ,this.maxEndIndex = M.max(maxEndIndex, 0);
compilation error,131,add,[CE] cannot find symbol Mat, ,this.maxEndIndex = Mat.max(maxEndIndex, 0);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; figured
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex && e < this.minMiddleIndex) }
compilation error,305,add,[CE] generics are not supported in -source 1.4, ,if(e > this.maxMiddleIndex && e) < this.minMiddleIndex) {
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  /  2  +  1;  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(2,  -1);  ,this.minStartIndex = Math.min(2, 0);
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(2,  -1);  ,this.minStartIndex = Math.min(2, 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(2,  -1);  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,131,replace,[CE] cannot find symbol minor, this.minStartIndex  =  Math.min(this.minStartIndex,  minMiddleIndex);  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.minor);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : -1);
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex > index) { this.minEndIndex = index * 2; bodied
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2;!=
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, range));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  *  2;  , 
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minStartIndex, 2);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  +  3)+(this.minMiddleIndex  +  1);  ,return(this.maxMiddleIndex + 3)+(this.minMiddleIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) } this.minEndIndex = index * 2; }
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index << 1)? index : index;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,552,replace,[CE] method indexOf in interface List cannot be applied to given types;, return  this.data.size()  -  1;  ,return this.data.indexOf('n', 0)+ 1;
patch is same with buggy,246,replace,, this.data.add(item);  if(item.getPeriod()  ==  null)  {  this.data.add(item);  }  ,this.data.add(item); if(item.getPeriod() == null) { this.data.add(item); }
patch is same with buggy,131,replace,, this.minEndIndex  =  minEndIndex  *  2;  ,this.minEndIndex = minEndIndex * 2;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s == -e) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s!= -e) {
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex));
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(this.maxStartIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.minMiddleIndex);
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > index) { if(this.minMiddleIndex < index) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.minEndIndex);  ,this.minStartIndex = Math.min(this.minStartIndex, this.minEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxStartIndex,  maxEndIndex);  ,this.minMiddleIndex = Math.min(maxStartIndex, maxEndIndex);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(-1,  -maxMiddleIndex);  ,this.minEndIndex = Math.min(1, -maxMiddleIndex);
compilation error,288,add,[CE] illegal start of expression, ,if(middle > this.minMiddleIndex) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  minMiddleIndex  *  1;  ,this.minMiddleIndex = maxMiddleIndex * 2;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; bodied
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == index) } this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 3; }
compilation error,310,add,[CE] cannot find symbol minimMiddleIndex, ,this.minimMiddleIndex = index * 4;
compilation error,131,add,[CE] cannot find symbol min, ,this.minMiddleIndex = Math.max(this.min, this.minEndIndex, this.maxStartIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s > 0) {
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4 - 1; >>
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  1);  ,this.maxStartIndex = Math.max(maxMiddleIndex, 0);
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  1)?  this.minStartIndex  :  index  +  1;  ,this.minStartIndex =(index >= 1)? this.minStartIndex : index + 1;
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || s > -1) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || s > -1) >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.min(maxEndIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxMiddleIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxEndIndex, 0);
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(maxEndIndex, 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s!= -e) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s!= -e) >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3  -  1;  ,this.maxMiddleIndex = index * 3 - 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) } this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,if(end > minEnd) { this.minEndIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = maxStartIndex / 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 3; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,131,add,[CE] cannot find symbol min, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.min);
compilation error,131,add,[CE] cannot find symbol maximumEndIndex, ,this.maxEndIndex = Math.max(maxEndIndex, maximumEndIndex + 1);
compilation error,131,replace,[CE] cannot find symbol min, this.maxEndIndex  =  Math.min(maxEndIndex,  this.maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.min);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3  -  1;  ,this.maxMiddleIndex = index * 3 - 1;
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  /  2;  ,this.minEndIndex = -index / 2;
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.minMiddleIndex = Math.max(this.miniMiddleIndex, 0);
compilation error,130,replace,[CE] cannot find symbol, this.minEndIndex  =  this.minEndIndex  +  getMaxEndIndex();  ,this.minEndIndex = this.minEndIndex + getMinimumEndIndex();
compilation error,306,replace,[CE] cannot find symbol maxMiddle, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(middle < this.maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2;
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  %  2  -  1;  ,this.maxEndIndex = index % 2 - 1;
compilation error,130,add,[CE] bad operand types for binary operator '-', ,this.domain = domain - 1;
patch is same with buggy,131,replace,, int  maxMiddleIndex  =  minMiddleIndex  -  1;  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
compilation error,130,replace,[CE] illegal start of expression, this.range  =  range  +  2;  ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain + 1; } else { this.domain = domain + 1; this.range = range + 1; }
compilation error,552,replace,[CE] unreachable statement, if(this.maxMiddleIndex  <=  this.data.size())  {  return  this.maxMiddleIndex;  }  ,return this.maxMiddleIndex; if(this.maxMiddleIndex < this.data.size()) { return this.maxMiddleIndex; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(!this.domain.equals(domain)) { throw new IllegalArgumentException("TimePeriod does not support field '" + domain +"'"); }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
compilation error,306,add,[CE] not a statement, ,if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 2; presumably
compilation error,246,replace,[CE] illegal start of expression, else  if(this.data.contains(item))  {  this.data.add(item);  }  else  if(this.data.contains(item))  {  this.data.add(item);  }  ,else if(this.data.contains(item)) { this.data.add(item); if(this.data.contains(item)) { this.data.add(item); }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,replace,[CE] cannot find symbol, this.minEndIndex  =  getMinEndIndex();  ,this.minStartIndex = getMinimumStartIndex();
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  minMiddleIndex;  this.maxStartIndex  =  maxMiddleIndex;  ,this.minEndIndex = minMiddleIndex; this.maxStartIndex = maxMiddleIndex;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; if(end < minEnd) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.miniMiddleIndex || e > this.maxMiddleIndex) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) {
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; figured
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.middleIndex;
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, DEFAULT_DOMAIN_DESCRIPTION);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  1;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  -  1);  , 
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 3; presumably
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 3; if(middle < maxMiddle) {
compilation error,321,replace,[CE] variable end is already defined in method updateBounds(TimePeriod,int), this.maxEndIndex  =  index  *  4;  ,long end = getDataItem(this.minEndIndex).getPeriod().getEnd(); this.minEndIndex = index * 5;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex  +  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, 2);
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex; this.maxStartIndex = maxMiddleIndex;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 3; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(this.maxStartIndex,  this.minStartIndex);  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.minStartIndex);
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null && range.isLocal()) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null && range.getType() == Token.FUNCTION) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(!(domain!= null || range.isNone())) { this.domain = domain; this.range = range; }
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = index * 4 + 1;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  minEndIndex);  ,this.maxMiddleIndex = Math.min(maxStartIndex, minEndIndex);
compilation error,131,replace,[CE] variable minEndIndex might not have been initialized, this.maxMiddleIndex  =  minMiddleIndex  -  1;  ,int minEndIndex = minEndIndex - 1;
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
compilation error,317,add,[CE] not a statement, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] not a statement, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) {
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= index) { this.minEndIndex = index * 3;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= index) { this.minEndIndex = index * 3; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= index) { this.minEndIndex = index * 3; figured
patch is same with buggy,306,replace,, this.minMiddleIndex  =  index  -  1;  ,this.minMiddleIndex = index - 1;
patch is same with buggy,131,replace,, int  maxEndIndex  =  minEndIndex  +  1;  ,int maxEndIndex = minEndIndex + 1;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain + 1; } else { this.domain = domain + 1; this.data = new ArrayList(); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain == null) { if(this.domain!= null) { this.domain = domain + 1; } else { this.domain = domain + 1; this.data = new ArrayList(); }
compilation error,131,add,[CE] no suitable method found for max(int), ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(-1));
compilation error,131,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minMiddleIndex = Math.min(this.minimumMiddleIndex, this.maxMiddleIndex);
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >> 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 1; if(this.minEndIndex >= index) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; }
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex && e >> this.minMiddleIndex) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex && e <= this.minMiddleIndex) {
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.min(middleIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, maxStartIndex));
compilation error,552,replace,[CE] cannot find symbol, return(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  *  1  :  0);  ,this.maxMiddleIndex = getRange().getMaxMiddleIndex();
increase failing tests,130,add, [FE] AssertionFailedError, ,this.maxStartIndex = maxStartIndex + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  minEndIndex  *  2;  ,this.minEndIndex = minEndIndex * 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) } this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex);
compilation error,130,add,[CE] cannot find symbol minimumIndex, ,this.minimumIndex = Math.min(minimumIndex, range);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex  %  2;  ,this.minMiddleIndex = minMiddleIndex % 2;
compilation error,131,add,[CE] int cannot be dereferenced, ,this.minEndIndex =(this.minEndIndex + 1).getDomain();
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3;
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(10, 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.maxMiddleIndex < 0) {
patch is same with buggy,305,replace,, if(e  >  maxMiddle  ||  e!=  -e)  {  , 
compilation error,271,add,[CE] possible loss of precision, ,this.minStartIndex =(index >= 0)? index : start + 1;
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(-1, -maxMiddleIndex);
compilation error,131,add,[CE] illegal start of expression, ,this.maxMiddleIndex = Math.max(-, -maxMiddleIndex);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(maxStartIndex,  -maxMiddleIndex);  ,this.minEndIndex = Math.min(-maxEndIndex, -maxMiddleIndex);
compilation error,131,replace,[CE] cannot find symbol, this.maxMiddleIndex  =  minMiddleIndex  -  1;  ,this.maxMiddleIndex =(this.maxMiddleIndex == 0)? getMaximumMiddleIndex() : 0;
compilation error,131,replace,[CE] cannot find symbol, this.maxMiddleIndex  =  minMiddleIndex  -  1;  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0)? getMaximumMiddleIndex() : 0;
compilation error,131,replace,[CE] cannot find symbol minSize, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  minEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, this.minSize));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 5; }
compilation error,306,replace,[CE] cannot find symbol maxMiddle, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddle > maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 1; }
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.miniMiddleIndex);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  +  3)+(this.minMiddleIndex  +  1);  , 
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, -1));
compilation error,246,add,[CE] cannot find symbol, ,updateBounds(item.getStart(), this.data.size() - 1);
compilation error,246,add,[CE] cannot find symbol, ,updateBounds(item.getSeries(), null);
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(1,  this.maxStartIndex);  ,this.maxStartIndex = Math.max(1, this.maxStartIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  , 
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(maxStartIndex, DEFAULT_DOMAIN_DESCRIPTION));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; }
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex - 2;
patch is same with buggy,130,replace,, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 1;
compilation error,130,replace,[CE] cannot find symbol index, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = index + 1;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; & }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.max(this.minStartIndex,  minEndIndex);  ,this.minMiddleIndex = Math.min(-maxMiddleIndex, -minMiddleIndex);
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = -index * 2 + 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index) { this.minEndIndex = index * 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)+ 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  , 
compilation error,246,add,[CE] cannot find symbol, ,this.data.add(item); updateBounds(item.getSeries(), this.data.size() - 1);
compilation error,131,replace,[CE] no suitable method found for max(int,int,int), this.maxStartIndex  =  Math.min(this.maxStartIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minMiddleIndex, this.maxEndIndex);
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(2,  -1);  ,this.minStartIndex = Math.min(2, 2);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 3; if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 3; if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; Possibly
patch is same with buggy,131,replace,, this.minEndIndex  =  getMinEndIndex();  ,this.minEndIndex = getMinEndIndex();
compilation error,131,replace,[CE] cannot find symbol, this.minEndIndex  =  getMinEndIndex();  ,this.minEndIndex = getMinimumEndIndex();
patch is same with buggy,131,replace,, this.maxStartIndex  =  maxStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.maxStartIndex = maxStartIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
patch is same with buggy,130,replace,, if(domain!=  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,552,replace,, this.maxMiddleIndex  =  getMaxMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddleIndex();
compilation error,552,replace,[CE] missing return statement, this.maxMiddleIndex  =  getMaxMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddleIndex() - 1;
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex; this.maxEndIndex = minEndIndex;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  minEndIndex  +  1);  , 
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,131,add,[CE] cannot find symbol index, ,this.minMiddleIndex = -index;
compilation error,266,add,[CE] cannot find symbol maxStart, ,long maxMiddle = end +(( maxStart - minStart)/ 2);
compilation error,266,add,[CE] cannot find symbol maxMiddle, ,long minMiddle = end +(( maxMiddle - minStart)/ 2);
compilation error,266,add,[CE] variable maxMiddle might not have been initialized, ,long maxMiddle = end +(( maxMiddle - minStart)/ 2);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  0);  ,this.minStartIndex = Math.min(this.minMiddleIndex, 0);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(this.minMiddleIndex,  0);  ,this.minStartIndex = Math.max(this.minMiddleIndex, 0);
compilation error,131,replace,[CE] cannot find symbol maximumEndIndex, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  maxEndIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, maximumEndIndex);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  2  +  1);  ,return(this.maxMiddleIndex * 2 + 1);
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex * 2;
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,332,replace,, this.minEndIndex  =(index  -  1)/  2;  ,this.minEndIndex =(index - 1)/ 2;
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex : this.data.size());
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =(index  -  3);  ,this.minEndIndex =(index * 2);
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 2; presumably
compilation error,306,add,[CE] cannot find symbol minimMiddleIndex, ,this.maxMiddleIndex = index * 2; if(this.minimMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; if(this.maxMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; if(middle > maxMiddle) {
compilation error,552,add,[CE] cannot find symbol, ,int index = getIndex(this.maxMiddleIndex); if(index < 0) { return this.data.size(); }
patch is same with buggy,306,replace,, s  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  ,s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
patch is same with buggy,306,replace,, s  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxEndIndex,  -1);  ,this.maxMiddleIndex = Math.max(maxEndIndex, -1);
patch is same with buggy,131,replace,, this.maxStartIndex  =  -1;  ,this.maxStartIndex = -1;
compilation error,288,replace,[CE] illegal start of expression, if(middle  >  this.minMiddleIndex)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.maxMiddleIndex >= 0) { if(middle > this.minMiddleIndex) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,288,replace,[CE] illegal start of expression, if(middle  >  this.minMiddleIndex)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.maxMiddleIndex >= index) { if(middle > this.minMiddleIndex) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(middle > 0) { this.maxMiddleIndex = index + 1; if(middle < 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] cannot find symbol minimMiddleIndex, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minimMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,552,add,[CE] no suitable method found for add(int,int), ,this.data.add(this.maxMiddleIndex, this.minMiddleIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e > -1) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e >> -1) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex && e > maxMiddle) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex && e >> maxMiddle) {
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index + 2; if(this.minEndIndex > index) { this.minEndIndex = index + 2; }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s >= 0) {
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex >= index) { this.minEndIndex = index * 4; if(this.maxEndIndex >= index) { this.minEndIndex = index * 2; }
compilation error,131,add,[CE] no suitable method found for max(int,int,String), ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(maxEndIndex, minMiddleIndex), DEFAULT_DOMAIN_DESCRIPTION);
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  1)?  0  :  index  +  1;  ,this.minEndIndex =(index < 1)? 0 : index + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(minMiddleIndex, 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex / 2);
compilation error,131,add,[CE] cannot find symbol, ,this.minMiddleIndex = getMinimumMiddleIndex() / 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex + 1);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  %  2  +  1;  ,this.maxEndIndex = index % 2 + 1;
patch is same with buggy,130,replace,, this.domain  =  domain  +  6;  ,this.domain = domain + 6;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,replace,[CE] ')' expected, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,if(this.minEndIndex!= minEndIndex) { if(this.minEndIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { if(this.range!= range) { this.domain = domain; if(this.range!= range) { this.data = new ArrayList(); }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.maxEndIndex / 2;
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.minStartIndex  =  Math.min(minStartIndex,  1);  ,this.minStartIndex = Math.min(minStartIndex, DEFAULT_DOMAIN_DESCRIPTION);
compilation error,306,add,[CE] not a statement, ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; figured
compilation error,306,add,[CE] not a statement, ,if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; figured
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2  +  1;  ,this.minEndIndex = index * 2 + 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(maxEndIndex,  -maxStartIndex);  ,this.minMiddleIndex = Math.min(-maxStartIndex, -maxEndIndex);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minStartIndex = Math.min(minStartIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  0);  ,this.maxEndIndex = Math.max(this.maxEndIndex, 0);
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4 - 1; if(this.minMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; if(middle < maxMiddle) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || s > 0) {
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  1)?  0  :  index  +  1;  ,this.minEndIndex =(index < 1)? 0 : index + 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] cannot find symbol maxMiddle, ,this.maxMiddleIndex = index + 2; if(this.maxMiddle < -1) { this.maxMiddleIndex = index + 2; }
compilation error,552,replace,[CE] method indexOf in interface List cannot be applied to given types;, return  this.data.size()  -  1;  ,return this.data.indexOf(this.maxMiddleIndex);
increase failing tests,131,replace, [FE]  Size, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  minMiddleIndex));  ,this.minMiddleIndex = Math.max(10, this.minMiddleIndex);
patch is same with buggy,317,replace,, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,if(end > minEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] cannot find symbol minimumEndIndex, ,this.maxMiddleIndex = index + 1; if(this.minimumEndIndex >= index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,130,replace,, this.minEndIndex  =  0;  ,this.minEndIndex = 0;
compilation error,130,replace,[CE] possible loss of precision, this.minEndIndex  =  0;  ,this.minEndIndex = 0L;
compilation error,552,add,[CE] illegal start of expression, ,for(int i = getMaxMiddle(); i < 0;) { if(getEndIndex() > 0) { return this.data.get(i); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = getMaxMiddleIndex(); i < 0;) { if(getEndIndex() > 0) { return this.data.get(i); }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; presumably
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; presumably
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.maxEndIndex,  this.minEndIndex);  ,this.minEndIndex = Math.min(this.maxEndIndex, this.minEndIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxStartIndex =(maxEndIndex < 0? minEndIndex - 1 : maxEndIndex);
compilation error,552,replace,[CE] unreachable statement, if(this.maxMiddleIndex  <=  0)  {  return  this.maxMiddleIndex;  }  ,return this.maxMiddleIndex; if(this.maxMiddleIndex < 0) { return this.maxMiddleIndex; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex + 1);
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  >=  1)?  1  :  index;  ,this.maxEndIndex =(index < 1)? 1 : index + 1;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s > -e), sectiune
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(maxEndIndex,  this.maxMiddleIndex);  ,this.maxEndIndex = Math.min(maxEndIndex, this.maxMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(-1, -maxStartIndex);
compilation error,131,add,[CE] illegal start of expression, ,this.maxStartIndex = Math.max(-, -maxStartIndex);
compilation error,131,add,[CE] no suitable method found for max(int), ,this.maxStartIndex = Math.max(-1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(middle < maxMiddle) {
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  -1);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : -1);
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; presumably
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; meanwhile
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex / 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  getMaxMiddleIndex()  -  1;  ,this.maxMiddleIndex = getMaxMiddleIndex() - 1;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 1; presumably
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  0);  , 
compilation error,131,add,[CE] cannot find symbol, ,this.minMiddleIndex = getMinimumMiddleIndex() - 1;
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || s > 1) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3  -  1;  , 
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && s <= -e) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 3; if(this.minMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 3; if(this.minMiddle < maxMiddle) {
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 2; presumably
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  *  2;  ,this.minEndIndex = -index * 2;
compilation error,321,add,[CE] cannot find symbol minEnd, ,this.maxEndIndex = index * 4 +(end - minEnd);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; }
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; figured
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex  +  1);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, 12);
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; presumably
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; figured
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(0, this.maxMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(0, this.maxStartIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 2; if(middle < maxMiddle) {
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex : getMaxMiddleIndex());
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex < 0)? this.maxMiddleIndex : getMaxMiddleIndex();
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 1)) { this.minEndIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
increase failing tests,317,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.minMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex);
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.minMiddleIndex = Math.min(this.miniMiddleIndex, this.maxMiddleIndex);
compilation error,246,add,[CE] illegal start of expression, ,if(item.getSeriesCount() > 0) { if(item.getPeriod() == null) { this.data.add(item); }
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.minEndIndex  =  Math.min(maxEndIndex,  this.minEndIndex);  ,this.minEndIndex = Math.min(middleIndex, this.minEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex % 2 == 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; if(middle < maxMiddle) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(10,  -1);  ,this.minMiddleIndex = Math.min(10, -1);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; meanwhile
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2)) { this.minEndIndex = index * 2; figured
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4; presumably
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4;
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex; this.maxMiddleIndex = minEndIndex;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,131,replace,[CE] no suitable method found for max(int,int,int), this.minEndIndex  =  Math.min(minEndIndex,  this.maxMiddleIndex);  ,this.maxStartIndex = Math.max(maxStartIndex, Math.max(maxStartIndex, minEndIndex, maxMiddleIndex));
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) {
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) {
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain == DEFAULT_DOMAIN_DESCRIPTION) { this.domain = domain; this.range = range; }
compilation error,131,add,[CE] cannot find symbol MAX_END_INDEX, ,this.maxEndIndex = Math.max(maxEndIndex, MAX_END_INDEX + 1);
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  /  2  *  1;  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,130,replace,[CE] bad operand types for binary operator '/', this.range  =  range  +  2;  ,this.range = range / 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; }
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; presumably
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 2; if(end > maxEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 2; if(end > end) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; Possibly
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; presumably
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index % 3 + 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  minMiddleIndex  %  2;  ,this.minMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index << 0)? 4 : index + 1;
compilation error,310,add,[CE] cannot find symbol e, ,this.maxMiddleIndex = index * 5 + e;
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
patch is same with buggy,317,replace,, this.maxEndIndex  =  index  /  2  +  1;  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index - 1; }
compilation error,130,replace,[CE] illegal start of expression, if(domain  ==  this.domain)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain == null) { if(domain == this.domain) { this.domain = domain; this.range = range; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) {
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(minEndIndex,  maxStartIndex);  ,this.minMiddleIndex = minMiddleIndex + 1; this.maxMiddleIndex = maxMiddleIndex + 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  minEndIndex  -  1;  ,this.maxEndIndex = minEndIndex - 1;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex > index) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex > index) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex > index) { this.minEndIndex = index * 2; &&(end < minEnd)) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && s >= -1) {
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  -index  %  2;  ,this.maxEndIndex = -index % 2 + 1;
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index  %  2;  ,this.maxEndIndex = -index % 2;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  getMinMiddleIndex();  ,this.minMiddleIndex = getMinMiddleIndex();
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  -index  *  3  +  1;  ,this.maxEndIndex = -index * 4 + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  minStartIndex));  ,this.minMiddleIndex = Math.min(minEndIndex, Math.max(minEndIndex, minStartIndex));
compilation error,131,add,[CE] cannot find symbol index, ,this.minMiddleIndex = Math.min(minMiddleIndex, -index);
compilation error,131,replace,[CE] possible loss of precision, this.minMiddleIndex  =  Math.min(minEndIndex,  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, 0.0);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; figured
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxStartIndex < 0? this.maxStartIndex + 1 : -1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minEndIndex);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minEndIndex);
compilation error,317,add,[CE] cannot find symbol end, ,this.minEndIndex = index * 2 + 1; if(this.end < minEnd) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; if(middle < maxMiddle) {
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  -(this.minEndIndex  +  2);  ,this.minEndIndex = -(this.maxEndIndex * 1);
compilation error,131,replace,[CE] variable minMiddleIndex might not have been initialized, this.minEndIndex  =  Math.min(maxEndIndex,  minEndIndex  +  1);  ,int minMiddleIndex =(this.minMiddleIndex > 0? 0 : minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  /  2  +  1;  , 
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(10, this.maxMiddleIndex);
compilation error,306,replace,[CE] cannot find symbol Index, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,Index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
compilation error,131,add,[CE] cannot find symbol maxMaxEndIndex, ,this.minStartIndex = Math.min(minStartIndex, minEndIndex); this.maxMaxEndIndex = Math.max(maxEndIndex, maxEndIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.miniMiddleIndex || e > maxMiddle) {
compilation error,131,replace,[CE] incompatible types, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxMiddleIndex =(this.minMiddleIndex + 1)? this.maxMiddleIndex : 0;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; slated
increase failing tests,130,add, [FE] AssertionFailedError, ,this.maxStartIndex = 0;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex -> index) { this.minEndIndex = index + 1; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 3; presumably
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, -1));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,130,add,[CE] generics are not supported in -source 1.4, ,ArrayList < TimePeriodValues> data = Lists.newArrayList();
compilation error,130,add,[CE] generics are not supported in -source 1.4, ,ArrayList < TimePeriodValues> data = Collections.emptyList();
compilation error,552,add,[CE] cannot find symbol, ,int index = getIndex(this.maxMiddleIndex); this.data.remove(0);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 4; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)- 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 3 + 1; if(middle < maxMiddle) {
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; figured
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxMiddleIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; }
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3;
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(middleIndex, this.maxMiddleIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  getMaxMiddleIndex()  -  1;  ,this.maxMiddleIndex = getMaxMiddleIndex() - 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] cannot find symbol minMiddle, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index * 2 + 1 + 1; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 2; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain == this.domain) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { if(domain == this.domain) { this.domain; this.range = range; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 2;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 2; slated
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 2; presumably
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minEndIndex  =  Math.max(minEndIndex,  minEndIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, range + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  minEndIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, minEndIndex + 1);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  4;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; EVER
patch is same with buggy,332,replace,, this.minEndIndex  =(index  -  1)/  2;  ,this.minEndIndex =(index - 1)/ 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; }
compilation error,131,replace,[CE] cannot find symbol length, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(length, -1));
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; Possibly
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxMiddleIndex);
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  <=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; meanwhile
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  <=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; Afterward
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(this.minMiddleIndex,  0);  ,this.maxStartIndex = Math.max(2, -1);
increase failing tests,306,add, [FE]  Size, ,this.minMiddleIndex = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex);
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.minMiddleIndex  =  minMiddleIndex  *  1;  ,this.maxEndIndex =(maxEndIndex < 0? range : 0);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 1; slated
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index - 1; slated
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
increase failing tests,306,replace, [FE]  Size, if(this.maxMiddleIndex  <=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(index >= index) { index = index + 2; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  0);  ,this.minStartIndex = Math.min(this.minMiddleIndex, 0);
compilation error,131,add,[CE] int cannot be dereferenced, ,int minMiddleIndex = minMiddleIndex.get - 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2;
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.min(middleIndex, this.maxEndIndex);
compilation error,131,replace,[CE] cannot find symbol min, this.minMiddleIndex  =  Math.min(maxEndIndex,  -maxStartIndex);  ,this.minMiddleIndex = Math.min(-min, -maxStartIndex);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  maxStartIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, maxStartIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2; presumably
increase failing tests,130,add, [FE]  Size, ,this.minEndIndex = minEndIndex + 3;
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  -1);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : -1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; definite
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(-1,  -maxStartIndex);  ,this.maxStartIndex = Math.max(-maxStartIndex, -maxStartIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < 0) { this.minEndIndex = index + 2; presumably
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < 0) { this.minEndIndex = index + 2; Possibly
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(10, this.maxMiddleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; Possibly
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(10,  -1);  ,this.minMiddleIndex = Math.min(10, -1);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,130,replace,[CE] illegal start of expression, if(this.domain!=  domain)  {  this.range  =  domain;  }  ,this.range = domain; if(domain!= null) {
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 6; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(maxStartIndex,  0);  ,this.maxStartIndex = Math.min(maxStartIndex, 0);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxEndIndex);
compilation error,310,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = index - 3;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 4;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; slated
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) } this.minEndIndex = index * 3; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = minMiddleIndex * getMaxMiddleIndex();
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index) { this.minEndIndex = index * 2; & }
compilation error,131,replace,[CE] ';' expected, this.minEndIndex  =  Math.min(minEndIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxStartIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, this.maxMiddleIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < index * 2) } this.maxMiddleIndex = index * 3; }
patch is same with buggy,130,replace,, this.domain  =  domain  +  3;  , 
compilation error,130,add,[CE] '(' expected, ,if(this.domain!= null) { this.domain = domain + 1; if else { this.range = domain + 1; this.data = new ArrayList(); }
compilation error,130,add,[CE] '(' expected, ,if(this.domain!= null) { this.domain = domain + 1; if else { this.domain = domain + 1; this.data = new ArrayList(); }
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  1)?  0  :  index  +  1;  ,this.minEndIndex =(index < 1)? 0 : index + 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 2; Possibly
patch is same with buggy,306,replace,, s  =  getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();  ,s = getDataItem(this.maxMiddleIndex).getPeriod().getStart().getTime();
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  /  2  +  1;  ,this.maxMiddleIndex = index / 2 + 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; Possibly
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) {
compilation error,131,add,[CE] possible loss of precision, ,this.maxStartIndex = Math.max(-1.0, -maxMiddleIndex);
compilation error,131,add,[CE] possible loss of precision, ,this.maxStartIndex = Math.max(-1.5, -maxMiddleIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < 0) { this.minEndIndex = index + 1; Toujours
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(this.maxStartIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.minMiddleIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxEndIndex, minEndIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  , 
increase failing tests,306,add, [FE]  Size, ,this.minMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; Toujours
compilation error,246,replace,[CE] illegal start of expression, else  if(this.data.contains(item))  {  this.data.add(item);  }  else  if(this.data.contains(item))  {  this.data.add(item);  }  ,else if(this.data.contains(item)) { this.data.add(item); if(this.data.size() > 0) { this.data.add(item); }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  2  +  1;  ,this.minEndIndex = index * 3; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2  +  1;  ,this.minEndIndex = index * 3; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; EVER
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index - 1;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index - 1; slated
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  2  +  1);  ,return(this.maxMiddleIndex * 2 + 1);
compilation error,246,add,[CE] illegal start of expression, ,else if(this.data.size() > this.maximumItemCount) { if(this.data.contains(item)) { this.data.add(item); }
compilation error,246,add,[CE] illegal start of expression, ,if(this.data.size() > 0) { if(this.data.size() > this.data.size()) { this.data.add(item); }
compilation error,131,replace,[CE] no suitable method found for max(int,int,int), this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  maxStartIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minEndIndex, minStartIndex, -1));
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2;
compilation error,266,replace,[CE] illegal start of type, long  maxMiddle  =  end  +((  minStart  -  minStart)/  2);  ,long maxMiddle = start +(( minStart - end)/ 2);
increase failing tests,130,add, [FE]  Size, ,this.minEndIndex = minEndIndex + 6;
increase failing tests,130,add, [FE]  Size, ,this.minStartIndex = minEndIndex + 6;
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex  +  1);  ,this.minEndIndex = Math.max(this.minEndIndex, 3);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex -> index + 1) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; Toujours
compilation error,131,add,[CE] possible loss of precision, ,this.maxMiddleIndex = Math.max(maxMiddleIndex, 0.0f);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2; slated
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(2,  this.maxStartIndex);  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3; Toujours
compilation error,332,replace,[CE] cannot find symbol, this.maxEndIndex  =(index  -  1);  ,this.maxEndIndex =(index == 0)?(index - 1): period.getDataItem(index);
compilation error,332,replace,[CE] incompatible types, this.maxEndIndex  =(index  -  1);  ,this.maxEndIndex =(index << 0)?(index - 1): period.getDataItem(index);
compilation error,131,add,[CE] <identifier> expected, ,this.maxEndIndex = Math.max(maxEndIndex, 0).
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e!= -1) {
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; Toujours
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  %  2  -  1;  ,this.maxEndIndex = index % 2 - 1;
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain; } else if(range == null) { this.range = range; }
compilation error,131,replace,[CE] cannot find symbol token, this.minStartIndex  =  Math.min(minStartIndex,  1);  ,this.minStartIndex = Math.min(token.min(minStartIndex, minStartIndex));
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 3; presumably
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; Afterward
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 3; Toujours
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex =(this.maxEndIndex + 5);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex - e) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,130,replace,, if(domain!=  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { this.domain = domain; this.range = range; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 1; EVER
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 1; Afterward
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  minEndIndex);  ,this.maxMiddleIndex = Math.min(maxStartIndex, minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex  %  2;  ,this.minMiddleIndex = minMiddleIndex % 2;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 1; if(this.minEndIndex >= index) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index - 1; Toujours
compilation error,317,add,[CE] cannot find symbol endIndex, ,this.minEndIndex = index * 2 + 1; if(this.endIndex >= index) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2;
compilation error,130,replace,[CE] '(' expected, this.range  =  range  +  2;  ,if(domain!= null) { this.domain = domain + 1; if else { this.range = range + 1; }
compilation error,130,replace,[CE] '(' expected, this.range  =  range  +  2;  ,if(this.domain!= null) { this.domain = domain + 1; if else { this.range = range + 1; }
patch is same with buggy,321,replace,, this.minEndIndex  =  index  /  4;  ,this.minEndIndex = index / 4;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; Toujours
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(middle < 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.minMiddleIndex = index + 2; if(middle < minMiddle) { this.minMiddleIndex = index + 2; }
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.minMiddleIndex = index + 2; if(middle < minMiddle) { this.minMiddleIndex = index + 1; }
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  *  2;  ,this.minEndIndex = -index * 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(middle < minEnd) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(middle >= minEnd) { this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 2; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; >>
compilation error,305,add,[CE] illegal start of expression, ,if(m > maxMiddle || e > -e) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; Toujours
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; Possibly
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2; & }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2; & }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(this.minEndIndex,  maxMiddleIndex);  ,this.maxEndIndex = Math.max(-maxEndIndex, -maxEndIndex);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(this.maxStartIndex,  this.minStartIndex);  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.minStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxStartIndex, minMiddleIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.middleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3;
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(this.minStartIndex, 2);
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(this.minStartIndex, 3);
patch is same with buggy,131,replace,, int  maxMiddleIndex  =  minMiddleIndex  -  1;  ,int maxMiddleIndex = minMiddleIndex - 1;
compilation error,305,add,[CE] illegal start of expression, ,if(e < this.minMiddleIndex || e > this.maxMiddleIndex) {
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = minStartIndex - 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; Toujours
compilation error,246,add,[CE] bad operand types for binary operator '-', ,updateBounds(item.getPeriod() - 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3; Possibly
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxStartIndex, minMiddleIndex));
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 3; if(this.minEndIndex >= index + 1) } this.minEndIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  , 
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; Toujours
compilation error,310,replace,[CE] ';' expected, this.maxMiddleIndex  =  index  /  2  *  1;  ,this.maxMiddleIndex = index / 2, maxMiddle;
compilation error,317,replace,[CE] '(' expected, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  else  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if else { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] '(' expected, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  else  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if else { this.minEndIndex = index * 4; presumably
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; Afterward
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; & }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 3;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2; presumably
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index * 2; if(this.minEndIndex < index) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3; Toujours
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; Toujours
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  <=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; Toujours
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex = -(this.minimumEndIndex + 1);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = Math.max(this.miniMiddleIndex, 0);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; Possibly
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? range : minEndIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; Possibly
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(maxEndIndex < 0? 0 : maxEndIndex);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(-1,  -maxMiddleIndex);  ,this.minStartIndex = Math.max(-minStartIndex, -maxMiddleIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; slated
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  minStartIndex  +  0;  ,this.minStartIndex = minStartIndex + 2;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(end > minEnd) { this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; }
patch is same with buggy,552,replace,, return  this.data.size()  -  1;  ,return this.data.size() - 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4;
patch is same with buggy,317,replace,, this.maxEndIndex  =  index  /  2  +  1;  ,this.maxEndIndex = index / 2 + 1;
compilation error,305,add,[CE] ')' expected, ,if(e > maxMiddle and& s <= -e) {
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  /  2  +  1;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1; meanwhile
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2  +  1;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index) { this.minEndIndex = index + 1; Possibly
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; Toujours
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; Afterward
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 1; slated
compilation error,305,add,[CE] ')' expected, ,if(e > maxMiddle and& s > -e) {
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 1; Toujours
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = minStartIndex * 2;
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  /  4;  ,this.maxEndIndex = index / 4;
compilation error,552,replace,[CE] unreachable statement, if(this.maxMiddleIndex  <=  0)  {  return  this.maxMiddleIndex;  }  ,return this.maxMiddleIndex; if(this.minStartIndex <= 0) { return this.maxMiddleIndex; }
compilation error,306,add,[CE] cannot find symbol, ,this.maxMiddleIndex = period.getDataItem(s); if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2  +  1  +  1;  ,this.maxMiddleIndex = index * 2 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 - 1;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; Afterward
compilation error,131,replace,[CE] cannot find symbol maximumStartIndex, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  ,this.minStartIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maximumStartIndex);
compilation error,130,replace,[CE] illegal start of expression, if(this.domain  ==  domain)  {  this.range  =  range;  }  ,this.range = range; if(domain!= null) {
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range == domain) { this.range = range; }
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(1,  this.maxStartIndex);  ,this.maxStartIndex = Math.max(2, this.maxStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,130,replace,, this.domain  =  domain  +  6;  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; Possibly
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1; meanwhile
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex + 1);
compilation error,131,add,[CE] int cannot be dereferenced, ,this.minEndIndex =(this.minEndIndex + 1).getIndex();
compilation error,131,add,[CE] int cannot be dereferenced, ,this.minEndIndex =(this.minEndIndex + 1).getSize();
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, -1));
compilation error,131,add,[CE] cannot find symbol miniStartIndex, ,this.minStartIndex = Math.max(this.miniStartIndex, 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = -(this.minStartIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.maxEndIndex,  this.minEndIndex);  , 
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,add,[CE] cannot find symbol, ,setBounds(this.maxMiddleIndex, index + 2);
compilation error,317,add,[CE] cannot find symbol maxMiddlingIndex, ,this.maxMiddlingIndex = index / 2 + 1;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minMiddleIndex,  this.maxEndIndex);  ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxEndIndex);
increase failing tests,317,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,index = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minMiddleIndex * 2 + getMaxMiddleIndex();
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; slated
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index - 1;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index - 1; Toujours
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
compilation error,288,replace,[CE] cannot find symbol e, if(middle  >  this.minMiddleIndex)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > this.minMiddleIndex) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,288,replace,, if(middle  >  this.minMiddleIndex)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  , 
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.minEndIndex =(minEndIndex < 0? maxEndIndex : minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  , 
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 5? index + e : period.getValue(this.minMiddleIndex);
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 5? index + e -(middle - s): index * 5;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  0);  ,this.minStartIndex = Math.min(this.minEndIndex, 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 2; presumably
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 2; Possibly
compilation error,305,add,[CE] illegal start of expression, ,if(m > maxMiddle || e > -1) {
patch is same with buggy,131,replace,, int  maxEndIndex  =  minEndIndex  +  1;  ,int maxEndIndex = minEndIndex + 1;
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.minEndIndex =(minEndIndex < 0? minEndIndex : range);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 3;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(minStartIndex, 0);this.maxEndIndex = Math.max(maxStartIndex, 0);
compilation error,131,add,[CE] <identifier> expected, ,this.minStartIndex = Math.max(minStartIndex, 0).this.maxEndIndex = Math.max(maxStartIndex, 0);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2  +  1;  ,this.minEndIndex = index * 2 + 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,131,replace,, this.minEndIndex  =  getMinEndIndex();  ,this.minEndIndex = getMinEndIndex();
compilation error,131,replace,[CE] cannot find symbol, this.minEndIndex  =  getMinEndIndex();  ,this.minEndIndex = getMinEndIndex(getMiddleIndex());
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minStartIndex + 1);
patch is same with buggy,130,replace,, this.minEndIndex  =  0;  ,this.minEndIndex = 0;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; Possibly
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; Possibly
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.maxStartIndex  =  Math.max(this.maxStartIndex,  maxMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxStartIndex, range);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2;
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(minEndIndex,  maxStartIndex);  ,this.minEndIndex = minEndIndex + 2; this.maxMiddleIndex = maxMiddleIndex + 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxEndIndex);  , 
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,130,replace,, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 1;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex < index + 1) { this.minEndIndex = index + 2; slated
patch is same with buggy,306,replace,, this.minMiddleIndex  =  index  -  1;  ,this.minMiddleIndex = index - 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(end > minEnd) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  1;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(end > minEnd) { this.minEndIndex = index * 2; Possibly
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(minStartIndex, maxStartIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxStartIndex, minStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4; Possibly
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; Toujours
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; presumably
compilation error,266,add,[CE] cannot find symbol maxStart, ,long maxMiddle = start +(( maxStart - minStart)/ 2);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3; }
compilation error,305,add,[CE] ')' expected, ,if(e > maxMiddle and& s!= -e) {
compilation error,131,add,[CE] cannot find symbol max, ,this.maxEndIndex = Math.min(this.max, this.maxEndIndex, this.maxEndIndex);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  /  3;  , 
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; Possibly
compilation error,321,replace,[CE] ';' expected, this.maxEndIndex  =  index  %  3;  ,this.maxEndIndex = index % 2, but(end < 0)? index : period.getDataItem(this.minEndIndex);
compilation error,131,add,[CE] cannot find symbol, ,this.maxStartIndex = Math.min(maxStartIndex, name.length());
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; Possibly
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; Toujours
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)- 1;
compilation error,131,add,[CE] cannot find symbol minimumStartIndex, ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minimumStartIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3; Toujours
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 2; presumably
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,130,add,[CE] illegal start of expression, ,if(range!= null) { if(this.domain!= null) { this.domain = domain + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.range!= null) { this.domain = domain + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(range!= null) { if(this.domain!= null) { this.domain = domain; }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.maxMiddleIndex.size(); i < isize; i++) { if(this.data.size() > this.maxMiddleIndex) { this.data.add(i); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.maxMiddleIndex.size(); i < isize; i++) { if(this.data.size() > this.maxMiddleIndex) { return this.data.size(); }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(minMiddleIndex,  -maxEndIndex);  ,this.minMiddleIndex = Math.min(-minMiddleIndex, -maxEndIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(middle < 0) { this.maxMiddleIndex = index + 1; if(middle > 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  minMiddleIndex));  ,this.minMiddleIndex = Math.max(minMiddleIndex, range);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  0);  ,this.maxEndIndex = Math.max(this.maxEndIndex, 0);
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(this.maxEndIndex,  0);  ,this.maxEndIndex = Math.max(this.maxEndIndex, 255);
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(this.domain!= null && range!= null) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(!(domain instanceof TimePeriodValues)) { throw new IllegalArgumentException(""); }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= range) { this.range = range; }
increase failing tests,271,replace, [FE] AssertionFailedError, this.minStartIndex  =(index  >=  1)?  this.minStartIndex  :  index  +  1;  ,this.minStartIndex =(index < 1)? this.minStartIndex : index + 1;
compilation error,131,add,[CE] no suitable method found for abs(int,int), ,this.minMiddleIndex = Math.abs(minMiddleIndex, 0);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= index) { this.minEndIndex = index * 3; definite
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex);  , 
compilation error,131,replace,[CE] cannot find symbol minSize, this.maxMiddleIndex  =  Math.min(this.minMiddleIndex,  -1);  ,this.maxEndIndex = Math.max(this.maxMiddleIndex, this.minSize);
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; presumably
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; Toujours
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; slated
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  minMiddleIndex;  this.maxStartIndex  =  maxMiddleIndex;  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 1) } this.minEndIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; bodied
compilation error,306,add,[CE] cannot find symbol minEnd, ,this.maxMiddleIndex = index + 2; if(middle >= minEnd) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] cannot find symbol minEnd, ,this.maxMiddleIndex = index + 2; if(middle < minEnd) { this.maxMiddleIndex = index + 2; }
compilation error,131,replace,[CE] ';' expected, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  minMiddleIndex));  ,this.minEndIndex = Math.min(this.minEndIndex, -1));
compilation error,131,replace,[CE] no suitable method found for min(int,int,int), this.maxEndIndex  =  Math.min(maxEndIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxMiddleIndex + 1, this.maxMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < 0) { this.minEndIndex = index * 2; Toujours
patch is same with buggy,131,replace,, this.maxStartIndex  =  maxStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.maxStartIndex = maxStartIndex; this.maxEndIndex = maxEndIndex;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = maxStartIndex + 1;
compilation error,131,replace,[CE] ')' expected, this.minEndIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.minEndIndex =(minEndIndex < 0? 0 : minEndIndex, maxEndIndex);
compilation error,131,add,[CE] bad operand types for binary operator '*', ,this.minEndIndex = Math.min(minEndIndex, range * 1);
compilation error,131,replace,[CE] cannot find symbol getMaxMiddleIndex, this.minEndIndex  =  minEndIndex  *  2;  ,this.maxMiddleIndex =(maxMiddleIndex < 0? domain.getMaxMiddleIndex : minEndIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; presumably
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; Possibly
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  , 
compilation error,131,replace,[CE] cannot find symbol maximumEndIndex, this.maxEndIndex  =  minEndIndex  -  1;  ,this.maxEndIndex = maximumEndIndex - 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; if(middle < index - 1) { this.maxMiddleIndex = index + 3; }
compilation error,305,add,[CE] ')' expected, ,if(e > maxMiddle and& s < -1) {
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; Possibly
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, maxStartIndex));
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; slated
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  this.maxEndIndex);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.maxEndIndex);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index) { this.minEndIndex = index + 3;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index) { this.minEndIndex = index + 3; presumably
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2;
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, count = this.data.size(); i < this.maxMiddleIndex; i++) { if(getItemCount(i) > this.maxMiddleIndex) { this.data.get(i); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.data.size(); i < isize; i++) { if(getItemCount(i) > this.maxMiddleIndex) { this.data.get(i); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.data.size(); i < isize; i++) { if(getItemCount(i)> maxMiddleIndex) { this.data.get(i); }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3  -  1;  , 
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index >> 0)? this.minStartIndex : index + 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,332,replace,, this.maxEndIndex  =  index  %  2  +  1;  ,this.maxEndIndex = index % 2 + 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; Toujours
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 1; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, maxMiddleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; slated
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4  +  1;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7;
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3; meanwhile, period.setValue(this.maxMiddleIndex, new Period(this.minMiddle)); }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; slated
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3; presumably
compilation error,306,replace,[CE] ';' expected, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.minMiddleIndex = index -- 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; Possibly
compilation error,131,add,[CE] cannot find symbol max, ,this.maxEndIndex = Math.min(this.max, this.minEndIndex, maxEndIndex);
compilation error,131,add,[CE] cannot find symbol max, ,this.maxStartIndex = Math.min(this.max, this.minEndIndex, maxEndIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  /  2;  ,this.minEndIndex = -index / 2;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 2; Possibly
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.maxEndIndex, this.middleIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; Possibly
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; Afterward
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex = Math.min(this.minimumEndIndex, this.minimumEndIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; Afterward
compilation error,306,add,[CE] cannot find symbol minEnd, ,this.maxMiddleIndex = index + 2; if(middle >= minEnd) { this.minMiddleIndex = index + 1; }
compilation error,131,replace,[CE] cannot find symbol length, this.minMiddleIndex  =  minMiddleIndex  %  2;  ,this.minEndIndex = Math.min(minEndIndex, range.length * 2);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,552,replace,, this.maxMiddleIndex  =  getMaxMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddleIndex();
compilation error,552,replace,[CE] method getMaxMiddleIndex in class TimePeriodValues cannot be applied to given types;, this.maxMiddleIndex  =  getMaxMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddleIndex(this.maxStartIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(m > maxMiddle || s > -1) {
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  minMiddleIndex));  , 
compilation error,131,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = Math.min(this.miniEndIndex, 0);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; slated
compilation error,317,add,[CE] cannot find symbol maxMiddlingIndex, ,this.maxMiddlingIndex = index * 2 - 1;
compilation error,131,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = Math.max(this.miniEndIndex, 0);
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,131,replace,, this.minMiddleIndex  =  getMinMiddleIndex();  ,this.minMiddleIndex = getMinMiddleIndex();
compilation error,131,add,[CE] ';' expected, ,this.maxStartIndex = Math.max(maxStartIndex, -1));
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; Possibly
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; Afterward
compilation error,306,add,[CE] cannot find symbol maxMiddlingIndex, ,this.maxMiddlingIndex = index / 4 + 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxStartIndex,  minEndIndex);  ,this.maxMiddleIndex = Math.min(maxStartIndex, minEndIndex);
patch is same with buggy,246,replace,, this.data.add(item);  if(item.getPeriod()  ==  null)  {  this.data.add(item);  }  , 
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; Toujours
compilation error,310,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = index / 4;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; slated
compilation error,317,replace,[CE] not a statement, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; meanwhile
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.maxMiddleIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex > 0) { this.minEndIndex = index * 2; & }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2; slated
patch is same with buggy,131,replace,, this.maxStartIndex  =  -1;  ,this.maxStartIndex = -1;
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =  index  *  4;  ,this.minEndIndex = index * 3;
patch is same with buggy,332,replace,, this.minEndIndex  =  index  *  4;  , 
compilation error,332,replace,[CE] cannot find symbol, this.maxEndIndex  =(index  -  2);  ,this.maxEndIndex =(index >= 0)?(index - 1): period.getDataItem(index);
patch is same with buggy,131,replace,, this.minEndIndex  =  minEndIndex  *  2;  ,this.minEndIndex = minEndIndex * 2;
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index  %  2;  ,this.maxEndIndex = -index % 2;
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index  *  4;  , 
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; slated
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2;
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  +  3)+(this.minMiddleIndex  +  1);  ,return(this.maxMiddleIndex + 3)+(this.minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minEndIndex);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex + 1);
compilation error,131,add,[CE] cannot find symbol maximalEndIndex, ,this.maxEndIndex = Math.max(maxEndIndex, maximalEndIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index - 1;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index - 1; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; Possibly
compilation error,305,add,[CE] not a statement, ,if(e > this.minMiddleIndex && e) { maxMiddle) {
compilation error,131,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = -(this.minimumMiddleIndex + 1);
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = -(this.miniMiddleIndex + 1);
compilation error,131,replace,[CE] ';' expected, this.maxMiddleIndex  =  Math.min(this.minMiddleIndex,  -1);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex), this.maxEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxStartIndex);  , 
compilation error,305,add,[CE] ')' expected, ,if(s > maxMiddle and& e < -1) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  0);  ,this.minMiddleIndex = Math.min(this.minEndIndex, 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minMiddleIndex / 2;
increase failing tests,317,add, [FE]  Size, ,this.minMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  -2;  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,131,add,[CE] possible loss of precision, ,this.maxStartIndex = Math.max(-1.0, -maxStartIndex);
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.min(middleIndex, -1);
patch is same with buggy,130,replace,, if(domain  ==  this.domain)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain == this.domain) { this.domain = domain; this.range = range; }
compilation error,332,replace,[CE] method getDataItem in class TimePeriodValues cannot be applied to given types;, this.maxEndIndex  =(index  -  1);  ,this.maxEndIndex =(index * 2 + getDataItem(end)).getPeriod().getEnd().getTime();
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  maxStartIndex));  , 
