compilation error,131,replace,[CE] cannot find symbol maximumMiddleIndex, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxMiddleIndex = maximumMiddleIndex;
compilation error,130,add,[CE] not a statement, ,if(this.domain!= null) { this.domain = domain; figured else if(this.range!= range) { this.data = new ArrayList(); }
compilation error,130,add,[CE] not a statement, ,if(this.domain!= null) { this.domain = domain; slated else if(this.range!= range) { this.data = new ArrayList(); }
compilation error,130,add,[CE] not a statement, ,if(this.domain!= null) { this.domain = domain; figured else if(range!= 0) { this.data = new ArrayList(); }
compilation error,266,replace,[CE] illegal start of type, long  minMiddle  =  start  +((  end  -  minStart)/  2);  ,long maxEnd = period.getEnd().getTime() - minStart;
compilation error,552,add,[CE] unreachable statement, ,return this.maxMiddleIndex / 2;
compilation error,552,add,[CE] unreachable statement, ,return this.maxMiddleIndex % 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  ,this.maxMiddleIndex = index - 2;
compilation error,552,replace,[CE] missing return statement, if(this.maxMiddleIndex  <  0)  {  return  this.maxMiddleIndex  -  1;  }  ,if(this.maxMiddleIndex > 0) { return this.maxMiddleIndex - 1; }
patch is same with buggy,552,replace,, if(this.maxMiddleIndex  <  0)  {  return  this.maxMiddleIndex  -  1;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  ,this.minEndIndex = index + 2;
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,[Delete]
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null) { this.domain = domain; } else { this.domain = domain; this.range = range; }
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = 0;
patch is same with buggy,131,replace,, this.minStartIndex  =  minStartIndex;  ,this.minStartIndex = minStartIndex;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  minStartIndex;  ,this.minStartIndex = minStartIndex + 1;
compilation error,249,replace,[CE] illegal start of expression, updateBounds(item.getPeriod(),  this.data.size());  ,updateBounds(item.getPeriod(), this.data.size() - 2);
compilation error,302,add,[CE] variable minMiddle is already defined in method updateBounds(TimePeriod,int), ,long minMiddle = s +(this.minMiddleIndex + 2)/ 2; Long minMiddle = s +(this.minMiddleIndex + 2)/ 2;
compilation error,302,add,[CE] cannot find symbol minMiddle, ,if(middle > minMiddle) { long minMiddle = s +(this.minMiddleIndex + 2)/ 2; }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle) >>
patch is same with buggy,290,replace,, long  median  =  s  +(e  -  s)*  2;  , 
patch is same with buggy,321,replace,, this.maxEndIndex  =  index  -  1;  ,this.maxEndIndex = index - 1;
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null) { this.domain = domain; } else { this.domain = domain; this.range = range; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 1; >>
compilation error,377,add,[CE] cannot find symbol, ,item.add(period);
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index + 1;
compilation error,302,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
compilation error,552,replace,[CE] : expected, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = getDataItemCount(); if(this.maxMiddleIndex < 0) { return this.maxMiddleIndex /(this.maxMiddleIndex!= 0? this
compilation error,552,replace,[CE] : expected, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = getDataItemCount(); if(this.maxMiddleIndex >= 0) { return this.maxMiddleIndex /(this.maxMiddleIndex < 0? this
patch is same with buggy,305,replace,, if(e  >  maxMiddle  ||  s  >  maxMiddle)  {  ,if(e > maxMiddle || s > maxMiddle) {
patch is same with buggy,552,replace,, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  , 
patch is same with buggy,552,replace,, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  :  data.size());  ,return this.maxMiddleIndex /(this.maxMiddleIndex > 0? this.maxMiddleIndex : data.size());
increase failing tests,328,add, [FE]  Size, ,this.minEndIndex = index + 2;
increase failing tests,328,add, [FE]  Size, ,this.minEndIndex = index + 3;
patch is same with buggy,131,replace,, this.minEndIndex  =  minMiddleIndex;  , 
compilation error,266,add,[CE] illegal start of expression, ,if(start > minStart) { if(this.minStartIndex == index) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"' "); }
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = index + 1;
compilation error,317,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index + 3;
patch is same with buggy,131,replace,, this.range  =  range;  this.minEndIndex  =  minEndIndex;  ,this.range = range; this.minEndIndex = minEndIndex;
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e < maxMiddle) {
compilation error,304,replace,[CE] possible loss of precision, long  maxMiddle  =  s  +(e  -  s)/  2  *  1;  ,int maxMiddle = s +(e - s)/ 2 * 1;
compilation error,328,replace,[CE] cannot find symbol minimumEndIndex, this.maxEndIndex  =  index  +  2;  ,this.minimumEndIndex = index + 31;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
compilation error,131,replace,[CE] cannot find symbol maximumEndIndex, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maximumEndIndex;
patch is same with buggy,130,replace,, this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; presumably
compilation error,260,add,[CE] variable end is already defined in method updateBounds(TimePeriod,int), ,long end = period.getEnd().getTime() + start + 1;
compilation error,260,add,[CE] cannot find symbol begin, ,long end = period.getEnd().getTime() - begin + 1;
patch is same with buggy,328,replace,, this.minEndIndex  =  index  +  1;  ,this.minEndIndex = index + 1;
compilation error,302,replace,[CE] cannot find symbol e, if(this.minMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex >= 0) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,246,add,[CE] not a statement, ,if(this.data!= null) { this.data.add(item); bodied else { this.data.add(item); }
patch is same with buggy,131,replace,, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 1;
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 2;
patch is same with buggy,299,replace,, if(index  >=  this.minMiddleIndex)  {  ,if(index >= this.minMiddleIndex) {
compilation error,327,add,[CE] illegal start of expression, ,if(maxEnd > 0) }
compilation error,327,add,[CE] illegal start of expression, ,if(maxEnd > 0) >>
patch is same with buggy,304,replace,, long  minMiddle  =  s  +(e  -  s)/  2  +  1;  ,long minMiddle = s +(e - s)/ 2 + 1;
compilation error,249,replace,[CE] illegal start of expression, updateBounds(item.getPeriod(),  this.data.size());  ,refreshBounds(item.getPeriod(), this.data.size()); fireSeriesChanged();
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  minEndIndex);  ,this.minStartIndex = Math.min(minStartIndex, minEndIndex); this.maxEndIndex = Math.max(maxEndIndex, minEndIndex);
compilation error,249,add,[CE] cannot find symbol, ,refreshBounds(item.getPeriod(), this.data.size() + 1);
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { this.domain = domain; slated else { this.range = range; }
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { this.domain = domain; figured else if(domain!= null) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { this.domain = domain; figured else if(range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,260,replace,, long  end  =  period.getEnd().getTime()  -  start  +  1;  ,long end = period.getEnd().getTime() - start + 1;
compilation error,260,replace,[CE] cannot find symbol start, long  end  =  period.getEnd().getTime()  -  start  +  1;  ,long end = period.getEnd().getTime() + this.start + 1;
compilation error,304,replace,[CE] cannot find symbol maxMiddle, long  minMiddle  =  s  +(e  -  s)/  2  +  1;  ,long median = s +(e - s)/ 2;
compilation error,130,add,[CE] incompatible types, ,this.domain = new ArrayList();
compilation error,130,add,[CE] incompatible types, ,this.domain = name;
patch is same with buggy,328,replace,, this.maxEndIndex  =  index  +  2;  ,this.maxEndIndex = index + 2;
patch is same with buggy,100,replace,, private  int  maxMiddleIndex  =  255;  ,private int maxMiddleIndex = 255;
increase failing tests,310,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index - 2;
increase failing tests,321,replace, [FE]  Size, this.minEndIndex  =(index  <  0)?  0  :  index;  ,this.minEndIndex =(index < 0)? 0 : index + 1;
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  0)?  0  :  index;  ,this.minEndIndex =(index < 0)? 0 : index;
patch is same with buggy,131,replace,, this.minStartIndex  =  minStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minStartIndex = minStartIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,328,replace,, this.maxEndIndex  =  index  +  2;  ,this.maxEndIndex = index + 2;
compilation error,304,add,[CE] possible loss of precision, ,int midMiddle = s +(e - s)/ 2 + 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; >>
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 0)? 0 : index;
patch is same with buggy,130,replace,, this.domain  =  domain  + "DOMAIN ";  ,this.domain = domain +"DOMAIN";
patch is same with buggy,130,replace,, this.domain  =  domain  + "DOMAIN ";  ,this.domain = domain + "DOMAIN";
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  ,long minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  ,long minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  minEndIndex);  ,this.minStartIndex = Math.min(minStartIndex, minMiddleIndex); this.maxEndIndex = Math.max(maxEndIndex, minEndIndex);
compilation error,130,replace,[CE] cannot find symbol, this.minEndIndex  =  minEndIndex  +  getMaxEndIndex();  ,this.minEndIndex = minEndIndex + getDomainIndex();
compilation error,130,replace,[CE] cannot find symbol, this.minEndIndex  =  minEndIndex  +  getMaxEndIndex();  ,this.minEndIndex = minEndIndex + getDomain();
patch is same with buggy,286,replace,, long  m  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  ,long m = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
compilation error,286,replace,[CE] cannot find symbol s, long  m  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  ,long m = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
compilation error,299,add,[CE] illegal start of expression, ,if(this.minMiddleIndex <= this.maxMiddleIndex) {
compilation error,299,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < this.maxMiddleIndex) {
compilation error,552,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex > 0) { return this.maxMiddleIndex /(this.maxMiddleIndex - 0? this.maxMiddleIndex : data.size()); }
compilation error,552,add,[CE] <identifier> expected, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = getDataItemCount(); if(this.maxMiddleIndex < 0) { return this.maxMiddleIndex /(this.maxMiddleIndex - 1? this.
patch is same with buggy,552,replace,, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  ,return this.maxMiddleIndex /(this.maxMiddleIndex >= 0? this.maxMiddleIndex : data.size());
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index >> 0)? this.minStartIndex : index;
increase failing tests,266,replace, [FE] IllegalArgumentException, if(start  <  minStart)  {  if(this.minStartIndex  ==  index)  {  throw  new  IllegalArgumentException( "Period  does  not  support  field  ' "  +  this.minStartIndex  + "' ");  }  ,if(index < minStart) { if(this.minStartIndex == index) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"'"); }
patch is same with buggy,302,replace,, long  minMiddle  =  s  +(this.minMiddleIndex  +  2)/  2;  ,long minMiddle = s +(this.minMiddleIndex + 2)/ 2;
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minEndIndex + getMinMiddleIndex();
compilation error,288,replace,[CE] cannot find symbol e, if(this.maxMiddleIndex  <  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.maxMiddleIndex >= 0) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,278,replace,, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
compilation error,304,add,[CE] ';' expected, ,if(middle > maxMiddle) { this.maxMiddleIndex = index; figured e +(e - s)/ 2 + 1; }
compilation error,304,add,[CE] not a statement, ,if(middle > maxMiddle) { this.maxMiddleIndex = index; rang +(e - s)/ 2 + 1; }
patch is same with buggy,278,replace,, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index >> 0)? 0 : index;
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > maxMiddle) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > maxMiddle) >>
patch is same with buggy,246,replace,, if(this.data!=  null)  {  this.data.add(item);  }  else  {  this.data.add(item);  }  ,if(this.data!= null) { this.data.add(item); } else { this.data.add(item); }
compilation error,246,replace,[CE] illegal start of expression, if(this.data!=  null)  {  this.data.add(item);  }  else  {  this.data.add(item);  }  ,if(this.data == null) { if(this.data.contains(item)) { this.data.add(item); } else { this.data.add(item); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { this.domain = domain; } else { this.range = range; >>
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || e > s) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || e > s) >>
compilation error,288,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data  =  new  ArrayList();  }  ,if(domain!= null) { this.data = new ArrayList(); } else { this.data = new ArrayList(); }
increase failing tests,246,add, [FE] IllegalArgumentException, ,if(item.getPeriod()!= null) { throw new IllegalArgumentException(" "); }
compilation error,131,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = minMiddleIndex;
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { this.domain = domain; figured else if(range!= null) { this.data = new ArrayList(); }
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { this.domain = domain; slated else if(range!= 0) { this.data = new ArrayList(); }
compilation error,130,add,[CE] not a statement, ,if(domain!= null) { this.domain = domain; slated else if(range!= null) { this.data = new ArrayList(); }
compilation error,130,add,[CE] bad operand types for binary operator '-', ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION - DEFAULT_RANGE_DESCRIPTION;
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index;  ,this.maxEndIndex = -index;
patch is same with buggy,130,replace,, this.range  =  range;  ,this.range = range;
patch is same with buggy,259,replace,, long  start  =  period.getStart().getTime()  -  this.minStartIndex  +  1;  ,long start = period.getStart().getTime() - this.minStartIndex + 1;
compilation error,325,add,[CE] illegal start of expression, ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();.getTime();
patch is same with buggy,327,replace,, if(maxEnd  >  0)  {  ,if(maxEnd > 0) {
patch is same with buggy,325,replace,, long  minStart  =  getDataItem(this.minEndIndex).getPeriod().getStart().getTime();  ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();
patch is same with buggy,325,replace,, long  minStart  =  getDataItem(this.minEndIndex).getPeriod().getStart().getTime();  ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();
compilation error,305,add,[CE] illegal start of expression, ,if(middle > maxMiddle || e >> s) {
compilation error,305,add,[CE] illegal start of expression, ,if(middle > maxMiddle || e <= s) {
compilation error,299,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < index) {
compilation error,130,add,[CE] cannot find symbol domino, ,this.domino = domain;
compilation error,130,add,[CE] cannot find symbol domino, ,this.domino = name;
increase failing tests,314,replace, [FE]  Size, long  minEnd  =  getDataItem(index).getPeriod().getStart().getTime();  ,long minEnd = getDataItem(1).getPeriod().getEnd().getTime();
compilation error,314,add,[CE] cannot find symbol, ,long minEnd = getDataItem(0).getEnd().getTime();
compilation error,314,add,[CE] variable end is already defined in method updateBounds(TimePeriod,int), ,long end = getDataItem(0).getEnd().getTime();
patch is same with buggy,299,replace,, if(this.minMiddleIndex  <=  index)  {  , 
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  -  2;  ,this.maxMiddleIndex = index - 2;
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > s) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > s) >>
compilation error,259,add,[CE] variable start is already defined in method updateBounds(TimePeriod,int), ,long start = period.getStart().getTime() - this.minStartIndex + 2;
patch is same with buggy,271,replace,, this.minStartIndex  =(index  <  0)?  this.minStartIndex  :  index;  ,this.minStartIndex =(index < 0)? this.minStartIndex : index;
increase failing tests,271,replace, [FE] AssertionFailedError, this.minStartIndex  =(index  <  0)?  this.minStartIndex  :  index;  ,this.minStartIndex =(index < 1)? this.minStartIndex : index;
compilation error,314,add,[CE] possible loss of precision, ,int minEnd = getDataItem(index).getPeriod().getStart().getTime();
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  , 
compilation error,275,add,[CE] illegal start of expression, ,long minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();.getStart().getTime();
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || e > this.minMiddleIndex) {
increase failing tests,332,replace, [FE] AssertionFailedError, this.maxEndIndex  =(index  <  0)?  0  :  index;  ,this.maxEndIndex =(index < 0)? 0 : index + 1;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  0  :  index;  ,this.maxEndIndex =(index < 0)? 0 : index;
patch is same with buggy,246,replace,, if(item.getPeriod()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  ,if(item.getPeriod() == null) { throw new IllegalArgumentException(""); }
patch is same with buggy,246,replace,, if(item.getPeriod()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,377,replace,, item.setValue(value);  ,item.setValue(value);
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { this.domain = domain; } else { this.range = range; >>
compilation error,304,add,[CE] variable maxMiddle is already defined in method updateBounds(TimePeriod,int), ,long maxMiddle = e +(e - s)/ 2 * 1;
compilation error,299,add,[CE] illegal start of expression, ,if(index <= this.minMiddleIndex) {
compilation error,299,add,[CE] illegal start of expression, ,if(index << this.minMiddleIndex) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 1;!=
patch is same with buggy,275,replace,, long  minStart  =  getDataItem(this.minStartIndex).getPeriod().getEnd().getTime();  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); s +(e - s)/
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); s +(e - s)
patch is same with buggy,314,replace,, long  minEnd  =  getDataItem(index).getPeriod().getStart().getTime();  ,long minEnd = getDataItem(index).getPeriod().getStart().getTime();
patch is same with buggy,130,replace,, this.data  =  new  ArrayList();  ,this.data = new ArrayList();
compilation error,130,replace,[CE] cannot find symbol, this.data  =  new  ArrayList();  ,this.data = new LinkedList();
compilation error,304,add,[CE] possible loss of precision, ,int minMiddle = s +(e - s)/ 2 + 1;
increase failing tests,310,add, [FE]  Size, ,this.minMiddleIndex = index + 2;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > maxMiddle) }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > maxMiddle) >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddle < -1) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddle < 0) {
compilation error,130,replace,[CE] illegal start of type, this.range  =  range;  ,}
compilation error,130,replace,[CE] cannot find symbol minimumIndex, this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  ,this.minimumIndex = Math.max(0, DEFAULT_DOMAIN_DESCRIPTION);
compilation error,266,replace,[CE] illegal start of type, long  minMiddle  =  start  +((  end  -  minStart)/  2);  ,long minMiddle = period.getMiddle().getTime();
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { this.domain = domain; for(int i = 0, minStartIndex = minStartIndex; i < maxStartIndex; i++) { this.domain = domain; }
patch is same with buggy,130,replace,, this.range  =  range;  ,this.range = range;
compilation error,271,replace,[CE] possible loss of precision, this.minStartIndex  =(index  <  0)?  this.minStartIndex  :  index;  ,this.minStartIndex =(index < 0)? index : start;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(!this.domain.equals(domain)) { this.domain = domain; if(this.range!= null) { this.data = new ArrayList(); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(!this.domain.equals(domain)) { throw new IllegalArgumentException(""); }
patch is same with buggy,131,replace,, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 1;
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain; } else { this.domain = domain; this.range = range; }
patch is same with buggy,321,replace,, this.maxEndIndex  =  index  -  1;  ,this.maxEndIndex = index - 1;
compilation error,246,replace,[CE] illegal start of expression, if(this.data!=  null)  {  this.data.add(item);  }  else  {  this.data.add(item);  }  ,if(this.data == null) { if(this.data!= null) { this.data.add(item); }
compilation error,131,add,[CE] incompatible types, ,this.maxStartIndex = range;
compilation error,260,add,[CE] variable start is already defined in method updateBounds(TimePeriod,int), ,long start = period.getStart().getTime() - start + 1;
compilation error,260,add,[CE] variable start is already defined in method updateBounds(TimePeriod,int), ,long start = period.getStart().getTime() - end + 1;
compilation error,131,replace,[CE] cannot find symbol maximumMiddleIndex, this.minStartIndex  =  minStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.maxStartIndex = maximumMiddleIndex;
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index >> 0)? index : period.getStart();
compilation error,271,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.minStartIndex =(index >= 0)? index : period.getStart();
compilation error,271,add,[CE] possible loss of precision, ,this.minStartIndex =(index >= 0)? index : start;
compilation error,131,add,[CE] cannot find symbol MAX_VALUE, ,this.minEndIndex = Math.min(minEndIndex, MAX_VALUE);
compilation error,131,add,[CE] cannot find symbol MAX_END_INDEX, ,this.minEndIndex = Math.min(minEndIndex, MAX_END_INDEX);
compilation error,249,replace,[CE] illegal start of expression, updateBounds(item.getPeriod(),  this.data.size()  +  1);  ,updateBounds(item.getStart(), this.data.size());
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 1; if(middle < maxMiddle) {
compilation error,328,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index + 1;
compilation error,552,add,[CE] cannot find symbol, ,int index = getIndex(this.maxMiddleIndex); this.data.add(index);
compilation error,275,add,[CE] possible loss of precision, ,int minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain!= null) { this.domain = domain; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain!= null) { throw new IllegalArgumentException(""); }
compilation error,377,add,[CE] variable item is already defined in method add(TimePeriod,Number), ,if(item == null) { TimePeriodValue item = new TimePeriodValue(period, value); item.setData(item); }
compilation error,377,add,[CE] variable item is already defined in method add(TimePeriod,Number), ,if(item!= null) { TimePeriodValue item = new TimePeriodValue(period, value); item.setData(item); }
compilation error,304,replace,[CE] possible loss of precision, long  minMiddle  =  s  +(e  -  s)/  2  +  1;  ,int median = s +(e - s)/ 2 + 1;
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 0)? 0 : index + 1;
patch is same with buggy,299,replace,, if(index  >=  this.minMiddleIndex)  {  ,if(index >= this.minMiddleIndex) {
compilation error,130,add,[CE] cannot find symbol Arrays, ,Arrays.sort(this.data);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddle > maxMiddle) {
compilation error,130,replace,[CE] illegal start of expression, this.data  =  new  ArrayList();  ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain; this.range = range; }
compilation error,302,replace,[CE] cannot find symbol e, long  minMiddle  =  s  +(this.minMiddleIndex  +  2)/  2;  ,long minMiddle = s +(this.minMiddleIndex * 2)/ 2;
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex;
patch is same with buggy,100,replace,, private  int  maxMiddleIndex  =  255;  ,private int maxMiddleIndex = 255;
patch is same with buggy,288,replace,, if(this.maxMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.maxMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > 0) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > m) {
compilation error,327,add,[CE] illegal start of expression, ,if(maxEnd > 0) { this.maxEndIndex = index; if(this.maxEndIndex >= 0) { this.maxEndIndex = index; }
compilation error,327,add,[CE] illegal start of expression, ,if(maxEnd > 0) { this.maxEndIndex = index; if(this.maxEndIndex < 0) { this.maxEndIndex = index; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  minStartIndex;  ,this.minStartIndex = minMiddleIndex + 1;
patch is same with buggy,328,replace,, this.maxEndIndex  =  index  +  2;  , 
compilation error,266,add,[CE] cannot find symbol, ,long minEnd = period.getMiddle().getTime();
compilation error,130,replace,[CE] cannot find symbol, this.minEndIndex  =  minEndIndex  +  getMaxEndIndex();  ,this.minEndIndex = minEndIndex + getMinimumEndIndex();
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > maxMiddle), e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); if(s > maxMiddle || e > s) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > maxMiddle), e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); if(s > maxMiddle || e < this.maxMiddle) {
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = maxStartIndex + 1;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(!this.domain.equals(domain)) { this.data = new ArrayList(); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,302,replace,, if(this.minMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,278,add,[CE] cannot find symbol minimumStartIndex, ,long s = getDataItem(this.minimumStartIndex).getPeriod().getStart().getTime();
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= null) { this.domain = domain; this.range = range; } else { this.data = new ArrayList(); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain; this.range = range; } else { this.data = new ArrayList(); }
patch is same with buggy,131,replace,, this.range  =  range;  this.minEndIndex  =  minEndIndex;  ,this.range = range; this.minEndIndex = minEndIndex;
compilation error,302,add,[CE] illegal start of expression, ,long minMiddle = s +(this.minMiddleIndex +)/ 2;
compilation error,249,add,[CE] cannot find symbol, ,updateBounds(item.getRange(), this.data.size() + 1);
compilation error,249,add,[CE] cannot find symbol, ,updateBounds(item.getRange(), this.data.size() - 1);
compilation error,249,add,[CE] bad operand types for binary operator '-', ,updateBounds(item.getPeriod() - 1, this.data.size());
compilation error,131,replace,[CE] cannot find symbol, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,int minStartIndex = getMiddleIndex();
patch is same with buggy,328,replace,, this.minEndIndex  =  index  +  1;  ,this.minEndIndex = index + 1;
compilation error,286,add,[CE] cannot find symbol, ,long s = getDataItem(this.minMiddleIndex).getPeriod().getSize();
compilation error,266,add,[CE] illegal start of expression, ,if(start < minStart) { if(index < this.minStartIndex) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"'"); }
compilation error,266,add,[CE] illegal start of expression, ,if(this.minStartIndex < index) { if(start < minStart) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"'"); }
compilation error,266,add,[CE] illegal start of expression, ,if(index < this.minStartIndex) { if(start < minStart) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"'"); }
compilation error,552,add,[CE] cannot find symbol, ,return getDataItemCount();
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  0)?  0  :  index;  ,this.minEndIndex =(index < 0)? 0 : index;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  0  :  index;  ,this.maxEndIndex =(index < 0)? 0 : index;
compilation error,130,add,[CE] cannot find symbol minimumIndex, ,this.minimumIndex = Math.min(minimum, DEFAULT_DOMAIN_DESCRIPTION, DEFAULT_RANGE_DESCRIPTION);
patch is same with buggy,259,replace,, long  start  =  period.getStart().getTime()  -  this.minStartIndex  +  1;  ,long start = period.getStart().getTime() - this.minStartIndex + 1;
increase failing tests,259,replace, [FE] ArithmeticException, long  start  =  period.getStart().getTime()  -  this.minStartIndex  +  1;  ,long start = period.getStart().getTime() / this.minStartIndex + 1;
compilation error,314,add,[CE] variable end is already defined in method updateBounds(TimePeriod,int), ,long end = getDataItem(0).getStart().getEnd().getTime();
compilation error,314,add,[CE] variable end is already defined in method updateBounds(TimePeriod,int), ,long end = getDataItem(0).getEnd().getIndex();
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain == null) { throw new IllegalArgumentException(""); }
compilation error,246,add,[CE] illegal start of expression, ,if(this.data!= null) { if(this.data.size() > 0) { this.data.add(item); }
compilation error,246,add,[CE] illegal start of expression, ,if(this.data!= null) { if(this.data.size() > 0) { throw new IllegalArgumentException(""); }
patch is same with buggy,130,replace,, this.domain  =  domain  + "DOMAIN ";  ,this.domain = domain +"DOMAIN";
compilation error,278,add,[CE] cannot find symbol s, ,s = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
compilation error,304,add,[CE] variable middle is already defined in method updateBounds(TimePeriod,int), ,long middle = s +(e - s)/ 2 * 1;
patch is same with buggy,260,replace,, long  end  =  period.getEnd().getTime()  -  start  +  1;  ,long end = period.getEnd().getTime() - start + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > s) {
patch is same with buggy,130,replace,, this.data  =  new  ArrayList();  ,this.data = new ArrayList();
compilation error,130,replace,[CE] bad operand types for binary operator '+', this.data  =  new  ArrayList();  ,this.data = new ArrayList() + 1;
patch is same with buggy,130,replace,, this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION;
patch is same with buggy,246,replace,, if(item.getPeriod()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  ,if(item.getPeriod() == null) { throw new IllegalArgumentException(""); }
compilation error,304,replace,[CE] cannot find symbol maxMiddle, long  minMiddle  =  s  +(e  -  s)/  2  +  1;  ,long minMiddle = s +(e - s)/ 2 * 1;
patch is same with buggy,552,replace,, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  ,return this.maxMiddleIndex /(this.maxMiddleIndex >= 0? this.maxMiddleIndex : data.size());
patch is same with buggy,278,replace,, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
compilation error,552,add,[CE] cannot find symbol, ,int index = getRange().getIndex(this.maxMiddleIndex); this.data.add(index, this.maxMiddleIndex);
compilation error,306,replace,[CE] break outside switch or loop, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; break;
compilation error,304,add,[CE] variable median might not have been initialized, ,long median = s +(e - median)/ 2 + 1;
compilation error,304,add,[CE] variable median might not have been initialized, ,long median = s +(e - median)/ 2;
compilation error,100,add,[CE] variable maxMiddleIndex is already defined in class TimePeriodValues, ,private int maxMiddleIndex = Math.max(maxMiddleIndex - 1);
compilation error,305,replace,[CE] long cannot be dereferenced, if(e  >  maxMiddle  ||  s  >  maxMiddle)  {  ,if(e > maxMiddle || s > s.length) {
patch is same with buggy,286,replace,, long  m  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  ,long m = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
patch is same with buggy,377,replace,, item.setValue(value);  ,item.setValue(value);
compilation error,304,replace,[CE] possible loss of precision, long  maxMiddle  =  s  +(e  -  s)/  2  *  1;  ,int maxMiddle = s +(e - s)/ 2;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || e > this.maxMiddleIndex) {
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  ,this.minEndIndex = index + 2;
compilation error,249,add,[CE] cannot find symbol, ,if(this.range!= null) { updateBounds(item.getRange(), this.data.size()); fireSeriesChanged(); }
compilation error,249,add,[CE] cannot find symbol, ,if(this.range!= null) { updateBounds(item.getRange(), this.data.size() - 1); fireSeriesChanged(); }
patch is same with buggy,131,replace,, this.minStartIndex  =  minStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minStartIndex = minStartIndex; this.maxEndIndex = maxEndIndex;
compilation error,130,replace,[CE] illegal start of expression, this.range  =  range;  ,if(domain!= null) { if(domain!= null) { this.domain = domain; this.range = range; }
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > maxMiddle), e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); if(e > maxMiddle || s < -1) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > maxMiddle), e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); if(e > maxMiddle || s < e) {
compilation error,131,add,[CE] variable minStartIndex might not have been initialized, ,int minStartIndex = minStartIndex;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.range!= null) { throw new IllegalArgumentException(""); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(!this.domain.equals(domain)) { this.domain = domain; this.range = range; }
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  ,long minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  , 
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); if(s > maxMiddle) {
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  , 
compilation error,266,replace,[CE] illegal start of expression, if(start  <  minStart)  {  if(this.minStartIndex  ==  index)  {  throw  new  IllegalArgumentException( "Period  does  not  support  field  ' "  +  this.minStartIndex  + "' ");  }  ,[Delete]
compilation error,131,replace,[CE] variable minStartIndex might not have been initialized, this.minStartIndex  =  Math.min(minStartIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  minEndIndex);  ,int minStartIndex = minStartIndex; int maxMiddleIndex = maxMiddleIndex;
compilation error,305,add,[CE] illegal start of expression, ,if(middle > maxMiddle || e >= s) {
patch is same with buggy,302,replace,, if(this.minMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,288,replace,, if(this.maxMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  minEndIndex);  ,this.minMiddleIndex = minEndIndex + 1;
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain!= null) { this.data = new ArrayList(); }
compilation error,278,add,[CE] cannot find symbol, ,long e = getDataItem(this.minStartIndex).getPeriod().start().getTime();
patch is same with buggy,278,replace,, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || e > middle) {
patch is same with buggy,325,replace,, long  minStart  =  getDataItem(this.minEndIndex).getPeriod().getStart().getTime();  ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();
patch is same with buggy,325,replace,, long  minStart  =  getDataItem(this.minEndIndex).getPeriod().getStart().getTime();  ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();
patch is same with buggy,266,replace,, if(start  <  minStart)  {  if(this.minStartIndex  ==  index)  {  throw  new  IllegalArgumentException( "Period  does  not  support  field  ' "  +  this.minStartIndex  + "' ");  }  ,if(start < minStart) { if(this.minStartIndex == index) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"'"); }
patch is same with buggy,131,replace,, this.minStartIndex  =  minStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minStartIndex = minStartIndex; this.maxEndIndex = maxEndIndex;
compilation error,249,replace,[CE] illegal start of expression, updateBounds(item.getPeriod(),  this.data.size()  +  1);  ,updateBounds(Item.getPeriod(), this.data.size());
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle || s > maximumMiddle) {
compilation error,305,add,[CE] illegal start of expression, ,if(m > maxMiddle || e > maxMiddle) {
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.data == null) { this.data.add(new TimePeriodValue(name, domain, range)); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.data == null) { this.data.add(new TimePeriodValue(name), domain, range); }
patch is same with buggy,328,replace,, this.maxEndIndex  =  index  +  2;  ,this.maxEndIndex = index + 2;
patch is same with buggy,286,replace,, long  m  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  ,long m = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
compilation error,286,replace,[CE] cannot find symbol, long  m  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  ,long m = getDataItem(this.minMiddleIndex).getPeriod().start().getTime();
increase failing tests,328,replace, [FE]  Size, this.maxEndIndex  =  index  +  2;  ,this.maxEndIndex = index + 30;
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain.equals(getDomainName())) { this.domain = domain; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain.equals(getDomainName())) { throw new IllegalArgumentException(""); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain.equals("")) { throw new IllegalArgumentException(""); }
compilation error,302,add,[CE] variable maxMiddle is already defined in method updateBounds(TimePeriod,int), ,long maxMiddle = s +(this.minMiddleIndex + 2)/ 2;
compilation error,302,add,[CE] no suitable method found for add(long), ,if(this.minMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); } else { this.data.add(s); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain; } else if(range!= null) { this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain.equals("")) { this.domain = domain; } else if(range!= null) { this.range = range; }
compilation error,305,replace,[CE] cannot find symbol maxMiddle, if(e  >  maxMiddle  ||  s  >  maxMiddle)  {  ,if(e > this.maxMiddle || e < this.minMiddleIndex) {
compilation error,266,add,[CE] illegal start of expression, ,if(start < minStart) { if(index == 0) { throw new IllegalArgumentException("Period does not support field '" + this.minStartIndex +"'"); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.maxMiddleIndex.size(); i < isize; i++) { if(getItemCount(i)> this.maxMiddleIndex) { this.data.add(i); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.maxMiddleIndex.size(); i < isize; i++) { if(getItemCount(this.maxMiddleIndex)> this.maxMiddleIndex) { this.data.add(i); }
compilation error,131,add,[CE] cannot find symbol maximumStartIndex, ,this.maxStartIndex = maximumStartIndex;
patch is same with buggy,327,replace,, if(maxEnd  >  0)  {  ,if(maxEnd > 0) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > minMiddle) {
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > mid) {
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.data == null) { this.data.add(name); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.data!= null) { this.data = new ArrayList(); }
compilation error,310,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = index - 1;
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null) { this.domain = domain; if(range!= null) { this.range = range; }
patch is same with buggy,321,replace,, this.maxEndIndex  =  index  -  1;  ,this.maxEndIndex = index - 1;
patch is same with buggy,278,replace,, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
compilation error,278,replace,[CE] cannot find symbol, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().start().getTime();
compilation error,131,add,[CE] cannot find symbol startIndex, ,this.startIndex = minStartIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,131,replace,, this.minStartIndex  =  minStartIndex;  ,this.minStartIndex = minStartIndex;
compilation error,304,add,[CE] cannot find symbol minMiddle, ,long maxMiddle = s +(e - minMiddle)/ 2 + 1;
patch is same with buggy,130,replace,, this.data  =  new  ArrayList();  ,this.data = new ArrayList();
increase failing tests,249,add, [FE] AssertionFailedError, ,this.data.add(item); updateBounds(item.getPeriod(), this.data.size() + 1);
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index * 2; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index * 2; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index + 3; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,328,replace,, this.maxEndIndex  =  index  +  3;  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = minMiddleIndex; this.maxEndIndex = maxEndIndex;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  ,this.minEndIndex = index + 2;
patch is same with buggy,131,replace,, this.range  =  range;  this.minEndIndex  =  minEndIndex;  ,this.range = range; this.minEndIndex = minEndIndex;
compilation error,131,replace,[CE] cannot find symbol minimumEndIndex, this.range  =  range;  this.minEndIndex  =  minEndIndex;  ,this.range = range; this.minEndIndex = minimumEndIndex;
compilation error,131,replace,[CE] cannot find symbol maximumEndIndex, this.minStartIndex  =  minStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex); this.maxEndIndex = Math.max(maxEndIndex, maximumEndIndex);
patch is same with buggy,328,replace,, this.maxEndIndex  =  index  +  2;  ,this.maxEndIndex = index + 2;
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  +  2;  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  1;  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= 0) {
patch is same with buggy,377,replace,, item.setValue(value);  ,item.setValue(value);
compilation error,131,add,[CE] cannot find symbol, ,this.minMiddleIndex = minMiddleIndex + name.length();
compilation error,288,add,[CE] no suitable method found for add(long), ,if(this.maxMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); } else { this.data.add(s); }
compilation error,288,replace,[CE] cannot find symbol e, if(this.maxMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex < index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,552,replace,[CE] illegal start of expression, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  ,for(int i = 0, isize = this.maxMiddleIndex.size(); i < isize; i++) { if(this.minMiddleIndex >= this.maxMiddleIndex) { this.maxMiddleIndex = data.get(i); }
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  ,long minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,275,replace,, long  minStartIndex  =  getDataItem(this.minStartIndex).getPeriod().getStart().getTime();  ,long minStartIndex = getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,328,replace,, this.minEndIndex  =  index  +  1;  ,this.minEndIndex = index + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  minEndIndex  +  1;  ,this.minEndIndex = minEndIndex + 1;
patch is same with buggy,302,replace,, if(this.minMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,302,replace,[CE] cannot find symbol e, if(this.minMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null) { this.domain = domain; if(this.range!= range) { this.domain = domain; this.range = range; }
compilation error,377,add,[CE] variable item is already defined in method add(TimePeriod,Number), ,if(value!= null) { TimePeriodValue item = new TimePeriodValue(period, value); item.setDataArea(data); } else { fireSeriesChanged(); }
compilation error,304,add,[CE] cannot find symbol minStart, ,long midMiddle = s +(e - minStart)/ 2;
compilation error,131,replace,[CE] cannot find symbol maximumMiddleIndex, this.minStartIndex  =  minStartIndex;  ,this.maxMiddleIndex = maximumMiddleIndex;
compilation error,260,add,[CE] variable start is already defined in method updateBounds(TimePeriod,int), ,long start = period.getEnd().getTime() - start + 1;
patch is same with buggy,100,replace,, private  int  maxMiddleIndex  =  255;  ,private int maxMiddleIndex = 255;
compilation error,100,replace,[CE] possible loss of precision, private  int  maxMiddleIndex  =  255;  ,private long maxMiddleIndex = 255;
compilation error,131,replace,[CE] cannot find symbol, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minStartIndex = minStartIndex + name.length();
compilation error,100,add,[CE] illegal start of type, ,return ValueUtils.getValue(getMillis(), getZone());
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(this.data == null) { this.data = new ArrayList(); }
patch is same with buggy,130,replace,, this.range  =  range;  ,this.range = range;
patch is same with buggy,325,replace,, long  minStart  =  getDataItem(this.minEndIndex).getPeriod().getStart().getTime();  ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();
patch is same with buggy,325,replace,, long  minStart  =  getDataItem(this.minEndIndex).getPeriod().getStart().getTime();  ,long minStart = getDataItem(this.minEndIndex).getPeriod().getStart().getTime();
compilation error,131,replace,[CE] cannot find symbol, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.minEndIndex = minEndIndex + name.length();
increase failing tests,130,add, [FE] StackOverflowError, ,this.data.add(new TimePeriodValues(name, domain, range));
compilation error,130,add,[CE] no suitable constructor found for TimePeriodValue(Comparable,String,String), ,this.data.add(new TimePeriodValue(name, domain, range));
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.data  =  new  ArrayList();  }  else  {  this.data  =  new  ArrayList();  }  ,if(domain!= null) { this.data = new ArrayList(); if(range!= null) { this.data = new ArrayList(); }
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.middleIndex = minMiddleIndex; this.maxMiddleIndex = maxMiddleIndex;
patch is same with buggy,302,replace,, if(this.minMiddleIndex  <  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.minMiddleIndex < index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,add,[CE] ';' expected, ,this.maxMiddleIndex = index -- 3;
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minStartIndex = minEndIndex + getMaxStartIndex();
patch is same with buggy,130,replace,, this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION + DEFAULT_RANGE_DESCRIPTION;
compilation error,130,replace,[CE] bad operand types for binary operator '&', this.domain  =  domain  +  DEFAULT_DOMAIN_DESCRIPTION  +  DEFAULT_RANGE_DESCRIPTION;  ,this.domain = domain + DEFAULT_DOMAIN_DESCRIPTION & DEFAULT_RANGE_DESCRIPTION;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  ,this.maxMiddleIndex = index - 2;
patch is same with buggy,278,replace,, long  e  =  getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();  ,long e = getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
patch is same with buggy,271,replace,, this.minStartIndex  =(index  <  0)?  this.minStartIndex  :  index;  ,this.minStartIndex =(index < 0)? this.minStartIndex : index;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.minMiddle > maxMiddle) {
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  0)?  0  :  index;  ,this.minEndIndex =(index < 0)? 0 : index;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  , 
compilation error,130,add,[CE] illegal start of expression, ,if(range!= null) { if(domain!= null) { this.domain = domain; }
compilation error,130,add,[CE] illegal start of expression, ,if(range!= null) { if(domain!= null) { throw new IllegalArgumentException(""); }
patch is same with buggy,249,replace,, updateBounds(item.getPeriod(),  this.data.size());  , 
patch is same with buggy,130,replace,, this.domain  =  domain  + "DOMAIN ";  ,this.domain = domain +"DOMAIN";
patch is same with buggy,130,replace,, this.domain  =  domain  + "DOMAIN ";  , 
patch is same with buggy,288,replace,, if(this.maxMiddleIndex  >=  index)  {  long  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(this.maxMiddleIndex >= index) { long e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,304,replace,[CE] cannot find symbol minStart, long  minMiddle  =  s  +(e  -  s)/  2  +  1;  ,long minMiddle = s +(e - minStart)/ 2;
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  -  2;  ,this.maxMiddleIndex = index - 2;
patch is same with buggy,260,replace,, long  end  =  period.getEnd().getTime()  -  start  +  1;  ,long end = period.getEnd().getTime() - start + 1;
compilation error,552,add,[CE] incompatible types, ,return getDataItem(this.maxMiddleIndex);
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || e > minEnd) {
compilation error,130,add,[CE] cannot find symbol, ,this.minEndIndex = minEndIndex + getMinimumDaysInIndex();
compilation error,317,add,[CE] ';' expected, ,this.minEndIndex = index -- 1;
compilation error,299,add,[CE] illegal start of expression, ,if(middle > this.maxMiddleIndex) {
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  0  :  index;  ,this.maxEndIndex =(index < 0)? 0 : index;
compilation error,305,add,[CE] illegal start of expression, ,if(m > maxMiddle || e > s) {
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain.equals(getDomainName())) { this.data = new ArrayList(); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain.equals(getDomainName())) { this.data.add(name); }
patch is same with buggy,246,replace,, if(item.getPeriod()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  ,if(item.getPeriod() == null) { throw new IllegalArgumentException(""); }
patch is same with buggy,552,replace,, return  this.maxMiddleIndex  /(this.maxMiddleIndex  >=  0?  this.maxMiddleIndex  :  data.size());  ,return this.maxMiddleIndex /(this.maxMiddleIndex >= 0? this.maxMiddleIndex : data.size());
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  ,this.minEndIndex = index + 2;
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.domain  =  domain;  }  else  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null) { this.domain = domain; if(range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index;  ,this.maxEndIndex = -index;
patch is same with buggy,259,replace,, long  start  =  period.getStart().getTime()  -  this.minStartIndex  +  1;  ,long start = period.getStart().getTime() - this.minStartIndex + 1;
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, isize = this.maxMiddleIndex.size(); i < isize; i++) { if(getItemCount(i)> this.maxMiddleIndex) { this.maxMiddleIndex = getItemCount(i); }
compilation error,131,replace,[CE] cannot find symbol maximumEndIndex, this.minStartIndex  =  minStartIndex;  this.maxEndIndex  =  maxEndIndex;  ,this.maxEndIndex = maximumEndIndex;
increase failing tests,246,add, [FE] AssertionFailedError, ,if(this.data!= null) { this.data.add(item); } else if(this.data.size() > 0) { this.data.add(item); }
increase failing tests,246,add, [FE] AssertionFailedError, ,if(this.data!= null) { this.data.add(item); } else if(this.data.size() > 0) { throw new IllegalArgumentException(""); }
increase failing tests,246,add, [FE] AssertionFailedError, ,if(this.data!= null) { this.data.add(item); } else if(this.data.size() > 0) { fireSeriesChanged(); }
compilation error,275,replace,[CE] cannot find symbol, long  minStart  =  getDataItem(this.minStartIndex).getPeriod().getEnd().getTime();  ,long minStart = getDataItem(this.minStartIndex).getPeriod().start().getTime();
