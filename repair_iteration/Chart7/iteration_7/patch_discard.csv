increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = this.minEndIndex / 2 + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex!= -1)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex!= -1)? this.maxEndIndex : 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(maxStartIndex, minMiddleIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minStartIndex,  -1);  ,this.minMiddleIndex = Math.max(this.minStartIndex, -1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxMiddleIndex,  minStartIndex);  ,this.maxEndIndex = Math.max(this.maxMiddleIndex, minStartIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minMiddleIndex = Math.max(this.maxMiddleIndex, 0);
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 2; figured
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 2; luckily
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = -(this.minEndIndex + 1); this.maxEndIndex = -(this.maxEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = -(this.minEndIndex + 1); this.maxEndIndex = -(this.maxEndIndex + 1);
compilation error,131,add,[CE] cannot find symbol minimMiddleIndex, ,this.minimMiddleIndex = Math.min(10, 0);
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index < 0)? 2 : index + 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5 - 1)) { this.maxMiddleIndex = index * 5 - 1; }
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  +  1  :  0);  ,return(this.maxMiddleIndex > 0? this.maxMiddleIndex + 1 : 0);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 10);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 100);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; Possibly
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  5;  ,if(end > minEnd) { this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  5;  ,if(end > minEnd) { this.minEndIndex = index * 7; if(end > maxEnd) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minMiddleIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { this.domain = domain + 1; } else { this.range = range + 1; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxStartIndex,  0);  ,this.minMiddleIndex = Math.min(maxStartIndex, 0);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.minEndIndex)- 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minEndIndex)- 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minEndIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.max(this.minEndIndex, this.maxMiddleIndex);
compilation error,552,add,[CE] illegal start of expression, ,if(this.data!= null) { if(this.data.size() > 0) { this.data.add("-"); } else { this.data.add("-"); return this.data.size(); }
compilation error,552,add,[CE] illegal start of expression, ,if(this.data!= null) { if(this.data.contains("-")) { this.data.add("-"); } else { this.data.add("-"); return this.data.size(); }
compilation error,552,add,[CE] illegal start of expression, ,if(this.data!= null) { if(this.data.size() > 0) { this.data.add("-"); } else { this.data.add("-"); return this.data.get(i); }
patch is same with buggy,130,replace,, this.maxMiddleIndex  =  0;  ,this.maxMiddleIndex = 0;
compilation error,317,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index * 6;
compilation error,131,replace,[CE] variable minMiddleIndex might not have been initialized, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int minMiddleIndex = Math.min(minMiddleIndex, minStartIndex);
compilation error,131,replace,[CE] variable minMiddleIndex might not have been initialized, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int minMiddleIndex = Math.max(minMiddleIndex, minStartIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index) { this.minEndIndex = index + 1; }
compilation error,131,add,[CE] cannot find symbol minMinimumIndex, ,this.minMiddleIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, this.minMinimumIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= index) } index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minStartIndex - 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; Possibly
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, if(middle  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex >= index) { if(middle < 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(middle  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex > index) { if(middle < 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.minStartIndex,  this.minEndIndex);  ,this.maxMiddleIndex = Math.min(this.minStartIndex, this.minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 2;!=
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.max(this.minStartIndex,  -1);  ,this.maxStartIndex = Math.max(this.maxEndIndex, 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] generics are not supported in -source 1.4, ,if(this.maxMiddleIndex >= 0) < this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex > index + 1) { this.minEndIndex = index + 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex > index + 1) { this.minEndIndex = index + 2; }
compilation error,131,add,[CE] no suitable method found for max(int,String), ,this.minStartIndex = Math.min(minStartIndex, Math.max(minEndIndex, range));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 3; if(end > minEnd) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxMiddleIndex,  maxStartIndex);  ,this.maxEndIndex = Math.max(this.maxMiddleIndex, maxStartIndex);
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 2)? 2 : index;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; presumably
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(maxEndIndex,  minMiddleIndex  +  1);  ,this.maxStartIndex = Math.max(maxStartIndex, maxEndIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(maxEndIndex,  minMiddleIndex  +  1);  ,this.minStartIndex = Math.max(minStartIndex, minEndIndex + 1);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  +  1  :  0);  ,return(this.maxMiddleIndex > 0? this.maxMiddleIndex + 1 : 0);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2) } this.minEndIndex = index * 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.minMiddleIndex =(minMiddleIndex < 0? 0 : minEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.maxMiddleIndex - 1;
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.max(this.minEndIndex, Math.min(this.minEndIndex, range));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; figured
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex);  ,this.maxEndIndex = Math.max(this.maxStartIndex, this.maxEndIndex);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxMiddleIndex,  this.maxStartIndex);  ,this.maxEndIndex = Math.min(this.maxMiddleIndex, this.maxStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1)) { this.maxMiddleIndex = index + 2; }
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  maxEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, this.range));
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 4; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minEndIndex  -  1;  ,this.minEndIndex = this.minEndIndex - 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.minEndIndex,  this.maxEndIndex);  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxMiddleIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? maxMiddleIndex : minEndIndex);
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minEndIndex = Math.max(this.minMiddleIndex, 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  5;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  6;  }  ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 6; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  5;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  6;  }  ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 6; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxEndIndex < 0? this.maxEndIndex + 1 : 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxStartIndex,  1);  ,this.minMiddleIndex = Math.min(maxStartIndex, 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  -1);  , 
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < 0) { this.minEndIndex = index * 3; thankfully
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; figured
increase failing tests,130,replace, [FE] AssertionFailedError, this.maxEndIndex  =  0;  ,this.minMiddleIndex = 0;
compilation error,130,replace,[CE] cannot find symbol minimumMiddleIndex, this.maxEndIndex  =  0;  ,this.minimumMiddleIndex = 0;
compilation error,552,replace,[CE] cannot find symbol, this.maxMiddleIndex  =  getMinMiddleIndex();  ,this.maxMiddleIndex = getMaxMiddle();
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minEndIndex / 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(1,  -1);  ,this.minMiddleIndex = Math.min(1, 0);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex * 2);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex);  ,this.maxMiddleIndex = Math.min(this.minEndIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex);  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 5; }
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxStartIndex  =  Math.max(maxStartIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.min(minStartIndex, Math.min(minStartIndex, range));
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex =(index + 2)/ 2;
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(this.minMiddleIndex, 1);
compilation error,306,replace,[CE] ')' expected, this.maxMiddleIndex  =  index  *  5;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index 2) { this.maxMiddleIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2;!=
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 5; meanwhile
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  this.minMiddleIndex  -  1;  ,this.maxEndIndex = -(this.minEndIndex * 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minMiddleIndex = Math.max(this.minEndIndex, Math.min(this.minEndIndex, minEndIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5;!=
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxMiddleIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, maxMiddleIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; >>
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(-1,  -minStartIndex);  ,this.minEndIndex = Math.min(1, -minEndIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minStartIndex, 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = getMaxStartIndex() - 1;
compilation error,306,add,[CE] illegal start of expression, ,if(middle < 0) { this.maxMiddleIndex = index + 1; >>
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxMiddleIndex,  this.maxEndIndex);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.maxEndIndex);
compilation error,131,add,[CE] ')' expected, ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, Math.max(minStartIndex, minEndIndex));
compilation error,131,add,[CE] ')' expected, ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, Math.max(minEndIndex, minEndIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 4 ||(index + 1)> minEnd) { this.maxMiddleIndex = index * 4; >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex < 0)? this.minEndIndex + 1 : this.maxEndIndex;
compilation error,317,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex >= index) { this.minEndIndex = index * 6; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.minEndIndex >= index) { this.minEndIndex = index * 6; if(this.maxEndIndex >= index) { this.minEndIndex = index * 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) } this.maxMiddleIndex = index * 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.minEndIndex  =  Math.min(minMiddleIndex,  Math.max(minEndIndex,  maxEndIndex));  ,this.minEndIndex = Math.max(minEndIndex, range * 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(2, 1);
compilation error,317,replace,[CE] ')' expected, this.minEndIndex  =  index  *  3;  if(this.minEndIndex  <  index  *  1)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index 1) { this.minEndIndex = index * 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(10,  0);  ,this.maxMiddleIndex = Math.max(10, 0);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minMiddleIndex = Math.min(-minMiddleIndex, 1);
compilation error,131,replace,[CE] no suitable method found for min(int,int,int), this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minMiddleIndex, this.maxMiddleIndex), this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  /  2;  ,this.maxEndIndex = this.minMiddleIndex / 2;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex > index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); } else { this.maxMiddleIndex = index + 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); } else { this.maxMiddleIndex = index + 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(-1, -minMiddleIndex);
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(minEndIndex >> 0? 0 : minEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex  +  1);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxEndIndex + 1);
compilation error,317,add,[CE] generics are not supported in -source 1.4, ,if(this.maxMiddleIndex > index + 1) < this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] ')' expected, ,if(range < DEFAULT_DOMAIN_DESCRIPTION) { if(minMiddleIndex < minMiddleIndex) { this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex,
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.minMiddleIndex = Math.min(minMiddleIndex, minMiddleIndex * 2);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  0  :  minEndIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? 0 : minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(minEndIndex,  maxEndIndex);  , 
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index + 3 + 1;
increase failing tests,310,add, [FE]  Size, ,this.minMiddleIndex = index + 3 + 1;
increase failing tests,317,replace, [FE]  Size, this.minMiddleIndex  =  index  /  2  +  1;  ,this.minMiddleIndex = index * 2 + 1;
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  /  2  +  1;  , 
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minEndIndex, 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.minEndIndex = index * 2; >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minEndIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 6; if(end > minEnd) { this.minEndIndex = index * 5; }
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  this.data.size())  /  2;  ,return(this.maxMiddleIndex * this.data.size())/ 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minMiddleIndex  /  2;  ,this.minEndIndex = this.minMiddleIndex / 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 3; >>
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= index * 2) { this.maxMiddleIndex = index * 2; >>
patch is same with buggy,131,replace,, this.minEndIndex  =(maxEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.minEndIndex =(maxEndIndex < 0? maxEndIndex : minEndIndex);
compilation error,317,replace,[CE] illegal start of expression, this.minMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <=  1)?  0  :  index;  , 
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,552,add,[CE] cannot find symbol length, ,if(this.maxMiddleIndex < this.data.length) { return this.maxMiddleIndex; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2;!=
increase failing tests,321,replace, [FE]  Size, this.minEndIndex  =(index  <=  2)?  2  :  index;  ,this.minEndIndex =(index < 1)? 2 : index;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  this.maxEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, this.maxEndIndex));
patch is same with buggy,130,replace,, if(this.domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  this.data  =  new  ArrayList();  }  ,if(this.domain!= null) { this.domain = domain + 1; } else { this.range = range + 1; this.data = new ArrayList(); }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index - 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(2, 0);
compilation error,332,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(index * 12);
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  ,this.maxEndIndex = this.maxMiddleIndex * 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0?  maxMiddleIndex  :  minEndIndex);  ,this.minEndIndex =(minEndIndex < 0? maxMiddleIndex : minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0?  maxMiddleIndex  :  minEndIndex);  , 
patch is same with buggy,332,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,305,replace,, if(e  >  maxMiddle  ||  s  <  1)  {  ,if(e > maxMiddle || s < 1) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 7; if(end < minEnd) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 7; if(end < minEnd) { this.minEndIndex = index * 6; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(10,  -1);  ,this.maxMiddleIndex = Math.min(10, -1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(10,  -1);  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2  -  2;  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  minStartIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, minStartIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxStartIndex = Math.max(maxStartIndex, minMiddleIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,this.minMiddleIndex = Math.max(minMiddleIndex, minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(1,  this.minStartIndex);  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  4;  }  ,if(this.maxMiddleIndex > index +4) { this.maxMiddleIndex = index + 4; >>
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,if(index > 0) { if(index < this.maxMiddleIndex) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex + 1);
increase failing tests,131,replace, [FE] ArithmeticException, this.minEndIndex  =  this.minEndIndex  +  0;  ,this.minEndIndex = this.minEndIndex / 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,if(this.minEndIndex < index + 1) { this.minEndIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minEndIndex - 1;
patch is same with buggy,130,replace,, if(this.domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.domain  =  domain  +  1;  }  ,if(this.domain!= null) { this.domain = domain; } else if(this.range!= range) { this.domain = domain + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3;!=
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 3; }
compilation error,131,add,[CE] cannot find symbol minContiguous, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, this.minContiguous));
compilation error,131,add,[CE] cannot find symbol minReferences, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, this.minReferences));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  maxMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4;!=
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.maxEndIndex);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.maxEndIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex + 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; meanwhile
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.maxMiddleIndex);  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.maxMiddleIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(maxStartIndex,  this.minMiddleIndex);  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  Math.max(minEndIndex,  maxStartIndex));  ,this.minMiddleIndex = Math.min(minStartIndex, Math.max(minEndIndex, maxStartIndex));
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(-maxStartIndex, -maxEndIndex);
compilation error,131,add,[CE] cannot find symbol min, ,this.minEndIndex = Math.max(-min, -maxEndIndex);
compilation error,131,add,[CE] cannot find symbol min, ,this.minMiddleIndex = Math.max(-min, -maxEndIndex);
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.minEndIndex  =  Math.max(minEndIndex,  Math.min(minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.max(minEndIndex, Math.min(minEndIndex, range));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(0, 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 1; >>
patch is same with buggy,130,replace,, this.maxEndIndex  =  0;  ,this.maxEndIndex = 0;
compilation error,266,replace,[CE] illegal start of type, long  maxMiddle  =  middle  +((  minStart  -  minStart)/  2);  ,long maxMiddle = middle +(( end - minStart)/ 2);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex);  , 
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  %  2;  ,this.minEndIndex = -index % 2;
increase failing tests,131,replace, [FE] ArithmeticException, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.minEndIndex = this.minMiddleIndex / 0;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(-1, -minMiddleIndex);
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(1, -minMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minStartIndex, 1);
patch is same with buggy,332,replace,, this.minEndIndex  =(index  -  1);  ,this.minEndIndex =(index - 1);
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index + 1) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,if(this.maxMiddleIndex > 4) { this.maxMiddleIndex = index - 4; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 2; >>
compilation error,131,add,[CE] cannot find symbol minSize, ,this.minMiddleIndex = Math.max(this.minStartIndex, this.minSize);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(0,  0);  ,this.minEndIndex = Math.max(0, 0);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.max(0,  0);  ,this.minEndIndex = Math.max(1, 0);
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index + 1)? index + 1 : index;
increase failing tests,131,replace, [FE] ArithmeticException, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  ,this.minMiddleIndex = this.maxMiddleIndex / 0;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,this.minMiddleIndex = Math.min(this.minStartIndex, -1);
increase failing tests,271,replace, [FE]  Size, this.minStartIndex  =(index  >=  1)?  index  -  1  :  index;  ,this.minStartIndex =(index >= 1)? index - 1 : index + 1;
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  1)?  index  -  1  :  index;  ,this.minStartIndex =(index >= 1)? index - 1 : index;
compilation error,552,replace,[CE] illegal start of expression, if(this.data!=  null)  {  this.data.add( "- ");  }  else  {  this.data.add( "- ");  return  this.data.size();  }  ,[Delete]
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index  /  4;  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; >>
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex > 0? this.maxMiddleIndex / 2 : 0);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex - 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.maxStartIndex =(this.maxMiddleIndex < 0)? this.minEndIndex + 1 : this.maxEndIndex;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.maxStartIndex =(this.maxMiddleIndex < 0)? this.maxEndIndex + 1 : this.maxEndIndex;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(maxEndIndex,  maxStartIndex  +  1);  ,this.maxEndIndex = Math.min(maxEndIndex, maxStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(index >= index) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
compilation error,306,add,[CE] illegal start of expression, ,if(middle < maxMiddle) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 3);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex > 0)? this.minEndIndex : 0;
compilation error,131,replace,[CE] cannot find symbol math, this.maxMiddleIndex  =  Math.min(maxEndIndex,  this.maxMiddleIndex);  ,this.maxMiddleIndex = Math.min(math.length, this.maxMiddleIndex);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,131,add,[CE] cannot find symbol startIndex, ,this.minStartIndex = Math.min(startIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  Math.min(maxEndIndex,  minStartIndex));  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, Math.min(maxEndIndex, minStartIndex));
compilation error,317,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index + 4;
compilation error,131,add,[CE] cannot find symbol millisecondIndex, ,this.minMiddleIndex = Math.max(millisecondIndex, this.minMiddleIndex);
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  3;  }  , 
patch is same with buggy,130,replace,, this.maxMiddleIndex  =  maxMiddleIndex  +  1;  ,this.maxMiddleIndex = maxMiddleIndex + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3; >>
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  this.minMiddleIndex  -  1;  ,this.minMiddleIndex = -(this.minEndIndex * 2);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  maxMiddleIndex  +  1);  ,this.minEndIndex = Math.min(maxEndIndex, maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > 0) { this.maxMiddleIndex = index + 1; }
compilation error,321,replace,[CE] cannot find symbol miniEndIndex, this.maxEndIndex  =  index  /  4;  ,this.miniEndIndex = index / 5;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  , 
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 3; luckily if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? maxEndIndex : minEndIndex);
compilation error,266,replace,[CE] illegal start of type, long  maxMiddle  =  start  +((  minStart  -  minStart)/  2);  ,long maxMiddle = mid +(( minStart - minStart)/ 2);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.minEndIndex)+ 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minEndIndex)+ 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex);  ,this.maxEndIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, 255);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, 254);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= index) { this.maxMiddleIndex = index + 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  1);  ,this.minStartIndex = Math.min(this.minEndIndex, 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; }
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.max(minMiddleIndex, this.minMiddleIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 2; >>
compilation error,306,add,[CE] generics are not supported in -source 1.4, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) < this.maxMiddleIndex = index * 4; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minStartIndex);  ,this.maxStartIndex = this.maxMiddleIndex * 2;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; >>
patch is same with buggy,130,replace,, if(domain!=  null  &&  domain.length()  >  0)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && domain.length() > 0) { this.domain = domain; this.range = range; }
compilation error,130,replace,[CE] 'else' without 'if', if(domain!=  null  &&  domain.length()  >  0)  {  this.domain  =  domain;  this.range  =  range;  }  ,else if(domain!= null && domain.length() > 0) { this.domain = domain; this.range = range; }
compilation error,332,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex = index / 3;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1)) { this.maxMiddleIndex = index + 1; }
compilation error,332,replace,[CE] method updateBounds in class TimePeriodValues cannot be applied to given types;, this.maxEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.minEndIndex =(index * 2 - 1); updateBounds(period, getDataItem(this.minEndIndex));
compilation error,332,replace,[CE] incompatible types, this.maxEndIndex  =(index  >=  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index >> 0)? 2 : index + 1;
compilation error,131,replace,[CE] no suitable method found for min(int,int,int), this.minEndIndex  =  Math.min(1,  this.maxEndIndex);  ,this.minEndIndex = Math.min(1, this.minEndIndex, this.maxEndIndex);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minStartIndex);  this.maxEndIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minStartIndex = Math.min(minStartIndex, minStartIndex); this.maxEndIndex = Math.max(maxStartIndex, maxStartIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  0);  ,this.minEndIndex = Math.min(maxEndIndex, 0);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,if(this.maxMiddleIndex > index * 4)) { this.maxMiddleIndex = index * 4 + 1; }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(1,  -1);  ,this.minMiddleIndex = Math.min(1, 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxStartIndex,  this.maxEndIndex);  ,this.maxMiddleIndex = Math.min(this.maxStartIndex, this.maxEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minEndIndex - 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  -1));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxEndIndex, -1));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2 + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; >>
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = -index % 2;
compilation error,131,add,[CE] possible loss of precision, ,this.minStartIndex = Math.min(0.0, this.minStartIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 1));
compilation error,552,add,[CE] cannot find symbol, ,return getDataItemCount() /(this.maxMiddleIndex * 3);
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex % 2 == 0) propagate this.minEndIndex = index + 2; }
compilation error,552,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = getMaxMiddleIndex();
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == index) } this.maxMiddleIndex = index + 3; }
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex : DEFAULT_DOMAIN_DESCRIPTION;
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex : new Integer(this.maxEndIndex);
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex * 1;
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex * 2 + 1;
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  maxMiddleIndex));  ,this.minStartIndex = Math.min(minEndIndex, Math.max(minStartIndex, range));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minEndIndex,  this.maxStartIndex);  ,this.minMiddleIndex = Math.max(this.minEndIndex, this.maxStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxEndIndex)- 1;
compilation error,552,add,[CE] no suitable method found for remove(int,Integer), ,this.data.remove(this.maxMiddleIndex, new Integer(this.maxMiddleIndex));
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  -(this.maxMiddleIndex  *  1);  , 
compilation error,306,replace,[CE] ')' expected, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 1; if(this.maxMiddleIndex > index 2) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  maxEndIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, maxEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxEndIndex)- 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex < index + 1)) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  4;  }  ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 4; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; }
patch is same with buggy,305,replace,, if(s  >  maxMiddle  &&  e  >  0)  {  ,if(s > maxMiddle && e > 0) {
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 4; meanwhile
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index) { this.minEndIndex = index + 3; Possibly
compilation error,131,replace,[CE] cannot find symbol math, this.minEndIndex  =  Math.max(minEndIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.min(math.length, this.maxMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { if(end > minEnd) { this.minEndIndex = index * 2; }
compilation error,310,add,[CE] ';' expected, ,this.maxMiddleIndex = index * 6 -(middle - maxMiddle)/ 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = -(this.minMiddleIndex + 3);
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index << 1)? index : index + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minStartIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(maxStartIndex,  -1);  ,this.minMiddleIndex = Math.min(1, -minEndIndex);
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(maxStartIndex,  -1);  ,this.minMiddleIndex = Math.min(2, -minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.minEndIndex = index * 2 + 1; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2;!=
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
compilation error,131,add,[CE] no suitable method found for min(int,String), ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(minEndIndex, range));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex  *  2  +  1;  ,this.minMiddleIndex = minMiddleIndex * 2 + 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 3;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index + 2; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2; Possibly
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; >>
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(maxEndIndex,  0);  ,this.minStartIndex = Math.min(2, -minMiddleIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  0));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, 0));
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
compilation error,306,add,[CE] incompatible types, ,if(this.minMiddleIndex >> 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(minEndIndex,  -1);  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3  -  1;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3 / 2; } else { this.maxMiddleIndex = index; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  255);  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, 255);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  this.minEndIndex));  , 
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1)) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(this.minEndIndex >> 0)? this.minEndIndex + 1 : this.minEndIndex;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.minEndIndex = index * 4; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.minEndIndex = index * 4; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.minEndIndex = index * 4; if(this.maxMiddleIndex < index) } this.minEndIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(0, 0);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; Possibly
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 6; if(end < minEnd) { this.minEndIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 6; if(end > end) { this.minEndIndex = index * 5; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(maxEndIndex,  0);  ,this.minEndIndex = Math.min(1, 1);
patch is same with buggy,317,replace,, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 4; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 4;!=
patch is same with buggy,130,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex >= index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); } else { this.maxMiddleIndex = index + 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex >= index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); } else { this.maxMiddleIndex = index + 2;
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(-0,  -maxMiddleIndex);  ,this.minEndIndex = Math.min(-minEndIndex, -maxMiddleIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minEndIndex,  this.minStartIndex);  ,this.minMiddleIndex = Math.max(this.minEndIndex, this.minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = this.minMiddleIndex / 2 + 1;
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(1, this.maxEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; if(this.minEndIndex >= 0) } this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; if(this.minEndIndex >= 0)!= this.minEndIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(-3, -minMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.minMiddleIndex)-  1;  ,this.minEndIndex = Math.min(this.minEndIndex, this.minMiddleIndex)- 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; bodied
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxStartIndex,  -1));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.maxStartIndex, -1));
compilation error,305,replace,[CE] illegal start of expression, if(s  >  maxMiddle  &&  e  >  0)  {  ,if(s > maxMiddle && e < 0) }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  1);  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  *  1;  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.minMiddleIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  1);  ,this.minMiddleIndex = Math.min(this.minEndIndex, 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
compilation error,332,add,[CE] cannot find symbol index, ,this.index = -index / 4;
compilation error,131,add,[CE] cannot find symbol minMaxMiddleIndex, ,this.minEndIndex = Math.max(this.minEndIndex, this.minMaxMiddleIndex);
compilation error,317,replace,[CE] ')' expected, if(this.maxMiddleIndex  <=  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index 2) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.minEndIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; }
compilation error,131,replace,[CE] no suitable method found for max(int,int,int), this.maxMiddleIndex  =  Math.min(this.minMiddleIndex,  maxEndIndex);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex, maxEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3)) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] no suitable method found for min(int,int,int), ,this.minMiddleIndex = Math.min(2, this.minMiddleIndex, this.maxMiddleIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
compilation error,317,add,[CE] not a statement, ,if(end > minEnd) { this.minEndIndex = index * 5; figured
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  , 
compilation error,131,add,[CE] ')' expected, ,this.minMiddleIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, Math.max(minStartIndex, minMiddleIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(-0, -maxMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(-0, -maxMiddleIndex);
compilation error,310,add,[CE] cannot find symbol minimMiddleIndex, ,this.minimMiddleIndex = index / 2 * 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex - 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.minMiddleIndex);  ,this.minEndIndex = Math.min(this.minEndIndex, this.minMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) } this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 2)) { this.minEndIndex = index + 1; }
patch is same with buggy,552,replace,, int  count  =  getMaxMiddleIndex();  ,int count = getMaxMiddleIndex();
compilation error,552,replace,[CE] cannot find symbol, int  count  =  getMaxMiddleIndex();  ,int count = getMaxMiddleCount();
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1 + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1 + 1;!=
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = index + 4;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 2;
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  this.maxMiddleIndex)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  Math.max(maxMiddleIndex,  minStartIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, Math.max(maxMiddleIndex, minStartIndex));
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2;
compilation error,246,add,[CE] illegal start of expression, ,if(item.getValue() == null) { this.data.add(item); >>
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex >= index * 2) { this.minEndIndex = index * 4;
compilation error,131,add,[CE] no suitable method found for max(int,int,int), ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minMiddleIndex, 0, 0));
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(this.minEndIndex >> 0? 0 : minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3; Possibly
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  +  1);  ,this.minEndIndex =(this.minEndIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minStartIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minStartIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  2);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex - 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 4 + 1; >>
increase failing tests,306,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex - 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.minEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minEndIndex / 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.min(this.minMiddleIndex, Math.max(this.minEndIndex, minEndIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 0));
compilation error,305,add,[CE] ')' expected, ,if(e > this.minMiddleIndex || e empty) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3;
patch is same with buggy,130,replace,, if(domain  ==  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain == null && range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; }
compilation error,552,add,[CE] not a statement, ,for(int i = this.data.size(); i < 0; i) { if(this.maxMiddleIndex >= this.minMiddleIndex) { return(i + 1)+(i + 1); }
compilation error,552,add,[CE] illegal start of expression, ,for(int i = this.data.size(); i < 0; i++) { if(this.maxMiddleIndex >= this.minMiddleIndex) { return(i + 1)+(i + 1); }
compilation error,552,add,[CE] not a statement, ,for(int i = this.data.size(); i < 0; i) { if(this.maxMiddleIndex >= this.minMiddleIndex) { return(i + 1); }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; >>
compilation error,552,replace,[CE] missing return statement, this.data.add(this.maxMiddleIndex,  new  Integer(this.maxMiddleIndex));  ,this.data.add(this.maxMiddleIndex, new Integer(this.minMiddleIndex));
patch is same with buggy,552,replace,, this.data.add(this.maxMiddleIndex,  new  Integer(this.maxMiddleIndex));  ,this.data.add(this.maxMiddleIndex, new Integer(this.maxMiddleIndex));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) } this.minEndIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minEndIndex / 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.maxMiddleIndex = index / 3 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > maxEnd) { this.maxMiddleIndex = index / 3 + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minEndIndex, this.minMiddleIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minStartIndex, this.minMiddleIndex)- 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  3;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,if(this.minEndIndex >= index) { this.minEndIndex = index * 3; if(this.minEndIndex >= index) { this.minEndIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,130,replace,, if(domain  ==  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain == null && range!= null) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && domain.length() > 0) } this.domain = domain; this.range = range; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  this.minEndIndex  +  1);  ,this.minEndIndex = Math.min(maxEndIndex, this.minEndIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2)) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; figured
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  getMaxEndIndex();  ,this.maxEndIndex = getMaxEndIndex();
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex > 0) { this.minEndIndex = index * 3;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(minMiddleIndex < 0? 0 : minMiddleIndex);
compilation error,131,add,[CE] incompatible types, ,this.minMiddleIndex =(minMiddleIndex >> 0? 0 : minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex > 0)? this.minEndIndex - 1 : 0;
compilation error,131,replace,[CE] possible loss of precision, this.minStartIndex  =  Math.min(minEndIndex,  -1);  ,this.minStartIndex = Math.min(0.0, 0.0);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  *  1;  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 - 2)) { this.maxMiddleIndex = index * 4 - 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 - 2) { this.maxMiddleIndex = index * 4 - 2; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex  -  1);  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex - 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 2) { this.minEndIndex = index + 2; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  maxEndIndex  -  1;  ,this.maxMiddleIndex = maxEndIndex - 1;
compilation error,131,add,[CE] cannot find symbol minor, ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, this.minor));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  maxEndIndex);  , 
compilation error,130,add,[CE] cannot find symbol minimEndIndex, ,this.minimEndIndex = 0;
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.minimumEndIndex, this.maxEndIndex));
compilation error,131,replace,[CE] variable minMiddleIndex might not have been initialized, this.maxMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int minMiddleIndex = Math.min(minStartIndex, minMiddleIndex);
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; luckily if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; luckily if(this.minEndIndex < index * 4) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  Math.max(maxStartIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, Math.max(maxStartIndex, minEndIndex));
patch is same with buggy,317,replace,, if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < index - 1) } this.maxMiddleIndex = index - 1; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,if(this.minEndIndex < index * 2) } this.minEndIndex = index * 5; }
patch is same with buggy,552,replace,, int  index  =  getMaxMiddleIndex();  ,int index = getMaxMiddleIndex();
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) } this.maxMiddleIndex = index * 2 + 1; }
compilation error,131,replace,[CE] cannot find symbol length, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.max(minEndIndex, range.length * 2);
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e > 0) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e > 0) >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 1; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) } this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 4; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  , 
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(minEndIndex >> 0? minEndIndex : minEndIndex);
compilation error,131,add,[CE] cannot find symbol, ,this.maxStartIndex = getMinimumIndex();
compilation error,305,add,[CE] generics are not supported in -source 1.4, ,if(e > this.maxMiddleIndex && e) < maxMiddle) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex && e < maxMiddle) }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  -(this.minMiddleIndex  +  2);  ,this.minMiddleIndex = -(this.minMiddleIndex * 2);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(maxEndIndex,  -maxEndIndex);  ,this.minMiddleIndex = Math.min(-minMiddleIndex, 0);
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1; }
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index % 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-0,  -maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(-0, -maxMiddleIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex - 2);
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.min(middleIndex, 0);this.maxEndIndex = Math.max(maxEndIndex, 0);
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.domain  =  domain  +  1;  this.range  =  range  +  1;  }  ,if(domain!= null) { this.domain = domain + 1; } else { this.domain = domain + 1; this.range = range + 1; }
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index << 4)? 4 : index;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =(this.maxEndIndex  <  0)?  this.minEndIndex  +  1  :  this.maxEndIndex;  ,this.minEndIndex =(this.maxEndIndex < 0)? this.minEndIndex + 1 : this.maxEndIndex;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 5; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, -1));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minMiddleIndex, maxStartIndex));
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 3;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minStartIndex,  this.minEndIndex);  ,this.minEndIndex = Math.min(this.minStartIndex, this.minEndIndex);
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  -(this.maxMiddleIndex  +  2);  ,this.maxEndIndex = -(this.maxEndIndex * 2);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex;  this.maxEndIndex  =  minEndIndex;  , 
increase failing tests,131,replace, [FE] ArithmeticException, this.maxMiddleIndex  =  maxMiddleIndex  +  0;  ,this.maxMiddleIndex = maxMiddleIndex / 0;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.range = range; if(this.data!= null) { this.data = new ArrayList(); }
compilation error,306,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2;
compilation error,131,add,[CE] ')' expected, ,if(range < DEFAULT_DOMAIN_DESCRIPTION) { if(minMiddleIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex,
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  , 
compilation error,317,add,[CE] not a statement, ,if(this.maxEndIndex >= index) { this.minEndIndex = index * 7; luckily if(this.minEndIndex >= index) { this.minEndIndex = index * 4; }
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, minMiddleIndex));
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex  +  1);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minMiddleIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,306,add,[CE] illegal start of expression, ,if(index >= this.minMiddleIndex) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minEndIndex + 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(minEndIndex,  -1);  ,this.minStartIndex = Math.max(minEndIndex, -1);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,130,replace,, if(this.domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 1)) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.maxStartIndex);  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minStartIndex,  this.maxMiddleIndex);  ,this.minEndIndex = Math.min(this.minStartIndex, this.maxMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, -minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 5; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 5;!=
compilation error,306,add,[CE] incompatible types, ,if(this.minMiddleIndex >> 0) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(-minMiddleIndex, -minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(-minEndIndex, -minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.min(-minStartIndex, -minStartIndex);
compilation error,131,add,[CE] cannot find symbol, ,this.maxEndIndex = getMinimumIndex();
compilation error,131,replace,[CE] bad operand types for binary operator '-', this.minEndIndex  =  Math.min(this.maxEndIndex,  Math.min(this.minEndIndex,  -1));  ,this.minEndIndex = Math.min(minEndIndex, range - 1);
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 0)? 3 : index;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxEndIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, minEndIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  1)?  index  :  index  +  1;  ,this.minStartIndex =(index >= 1)? index : index + 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; >>
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(1, 2);
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >=  index)  {  index  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(this.minMiddleIndex >= index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
compilation error,306,add,[CE] illegal start of expression, ,index = index + 1; if(middle -> maxMiddle) { this.maxMiddleIndex = index; }
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index * 5 + 1;
compilation error,310,add,[CE] cannot find symbol minimMiddleIndex, ,this.minimMiddleIndex = index / 4;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minStartIndex - 1;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxStartIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxStartIndex);
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index >= 0)? 2 : index + 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] generics are not supported in -source 1.4, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) < this.minEndIndex = index * 4; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,index = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  , 
compilation error,131,add,[CE] ')' expected, ,this.minMiddleIndex = Math.min(math.min(middleIndex, Math.max(minMiddleIndex, maxStartIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1)) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,131,add,[CE] cannot find symbol, ,this.minStartIndex = getMinimumMiddleIndex();
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2;
patch is same with buggy,317,replace,, if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, minEndIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 + 1) { this.maxMiddleIndex = index * 4; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 + 1) { this.maxMiddleIndex = index * 4;!=
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.minEndIndex;  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.minEndIndex;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 4; >>
patch is same with buggy,130,replace,, this.maxEndIndex  =  maxEndIndex  +  1;  ,this.maxEndIndex = maxEndIndex + 1;
increase failing tests,130,replace, [FE]  Size, this.maxEndIndex  =  maxEndIndex  +  1;  ,this.maxEndIndex = maxEndIndex + 2;
compilation error,552,replace,[CE] missing return statement, this.data.remove(0);  ,this.data.add("+");
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.maxMiddleIndex / 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(-0, -minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(0, -minMiddleIndex);
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxMiddleIndex,  minMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(maxMiddleIndex, minMiddleIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  0));  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxStartIndex * 2);
compilation error,130,add,[CE] 'else' without 'if', ,else if(this.domain!= null) { this.domain = domain; } else if(this.range!= range) { this.domain = domain + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1)) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= index) { this.maxMiddleIndex = index + 3; >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(minMiddleIndex, maxMiddleIndex + 1);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,if(end < minEnd) { this.minEndIndex = index * 7; figured
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.minStartIndex  +  1);  , 
compilation error,332,replace,[CE] incompatible types, this.maxEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index << 0)? 2 : 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.minMiddleIndex = index - 1; >>
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3  -  1;  }  ,this.maxMiddleIndex = index * 5 - 1; if(this.maxMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3;!=
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.maxMiddleIndex = index + 2 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > maxEnd) { this.maxMiddleIndex = index + 2 + 1; }
compilation error,130,add,[CE] cannot find symbol length, ,if(domain == null && domain.length > 0) { this.domain = domain; this.range = range; }
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  0)?  index  +  1  :  index;  ,this.minStartIndex =(index >= 0)? index + 1 : index;
increase failing tests,271,replace, [FE] AssertionFailedError, this.minStartIndex  =(index  >=  0)?  index  +  1  :  index;  ,this.minStartIndex =(index >= 0)? index + 1 : index + 1;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 3;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.minEndIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.minEndIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,if(end < minEnd) { this.minEndIndex = index * 5; bodied
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxEndIndex,  0);  ,this.maxMiddleIndex = Math.max(this.maxEndIndex, 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minStartIndex * 2;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  minStartIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, minStartIndex + 1);
compilation error,306,add,[CE] variable s is already defined in method updateBounds(TimePeriod,int), ,long s = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
compilation error,306,add,[CE] variable end is already defined in method updateBounds(TimePeriod,int), ,long end = getDataItem(this.maxMiddleIndex).getPeriod().getEnd().getTime();
compilation error,131,add,[CE] cannot find symbol minMinEndIndex, ,this.minStartIndex = Math.min(minStartIndex, minMinEndIndex); this.maxMiddleIndex = Math.max(maxEndIndex, maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.min(minEndIndex, -minEndIndex);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.max(minEndIndex, -minEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  -  1;  ,this.maxEndIndex = this.minMiddleIndex - 1;
compilation error,552,add,[CE] cannot find symbol, ,int index = getColumnIndex();
compilation error,552,add,[CE] cannot find symbol, ,int index = getMinimumIndex();
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(2, -maxMiddleIndex);
compilation error,131,add,[CE] cannot find symbol maxMaxMiddleIndex, ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, this.maxMaxMiddleIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  -1));  ,this.minMiddleIndex = Math.min(minEndIndex, Math.max(minEndIndex, -1));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; }
compilation error,131,replace,[CE] cannot find symbol min, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  maxEndIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, this.min));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  this.minMiddleIndex  -  1;  ,this.minMiddleIndex =(this.minMiddleIndex == 0)? this.minMiddleIndex : 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1  +  1;  }  ,this.maxMiddleIndex = index * 2 + 1; if(middle > maxMiddle) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  maxStartIndex));  , 
compilation error,131,add,[CE] bad operand types for binary operator '-', ,this.maxEndIndex = Math.max(maxEndIndex, range - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.maxMiddleIndex * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 2)) { this.minEndIndex = index * 4; }
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 0)? 2 : index + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMiddleIndex);
compilation error,131,replace,[CE] cannot find symbol minMinMiddleIndex, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMinMiddleIndex);
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,if(range < DEFAULT_DOMAIN_DESCRIPTION) { if(minMiddleIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index + 1)? index - 1 : index;
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minMiddleIndex  -  1;  ,this.minEndIndex = this.minMiddleIndex - 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxMiddleIndex,  1);  , 
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 2; }
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 2)? 2 : index;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -minEndIndex);  ,this.maxMiddleIndex = Math.max(-maxMiddleIndex, -minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 5; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 6; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5;!=
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-1,  -maxStartIndex);  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.maxMiddleIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(10, -1);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, -1));
compilation error,131,add,[CE] no suitable method found for max(int,String), ,this.maxEndIndex = Math.max(this.maxEndIndex, range + 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex)+ 2;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex)+ 2;
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(this.minMiddleIndex, this.minEndIndex)+ 2;
compilation error,131,add,[CE] bad operand types for binary operator '*', ,this.maxStartIndex = Math.max(maxStartIndex, range * 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  Math.max(minMiddleIndex,  minEndIndex));  ,this.minMiddleIndex = Math.min(minStartIndex, Math.max(minMiddleIndex, minEndIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxEndIndex,  minStartIndex);  ,this.maxMiddleIndex = Math.min(maxEndIndex, minStartIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2; }
increase failing tests,310,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 5 - 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3 - 1; >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(-1,  -maxEndIndex);  ,this.minMiddleIndex = Math.min(1, -maxEndIndex);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex < index * 1) { this.minEndIndex = index * 3; if(this.minEndIndex < index * 1) } this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex)/ 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2) } this.minEndIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < 0) } this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > 0) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)- 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  4;  }  , 
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.minEndIndex = index * 2;!=
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex * 2);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  , 
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = minEndIndex / 2 + 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index * 2; }
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  1;  ,this.maxEndIndex =(index >= 0)? 2 : 1;
increase failing tests,332,replace, [FE] AssertionFailedError, this.maxEndIndex  =(index  >=  0)?  2  :  1;  ,this.maxEndIndex =(index >= 1)? 2 : 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(index > 0) { if(index >= index) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  Math.min(minEndIndex,  minEndIndex));  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 4; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  4;  }  , 
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(minStartIndex, 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex!= -1)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= 0) } this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,replace, [FE] ArithmeticException, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.minMiddleIndex = this.minMiddleIndex / 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3;!=
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex * 2);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 1));
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) } this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.minMiddleIndex);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  this.minMiddleIndex  -  1;  ,this.maxMiddleIndex = this.minMiddleIndex - 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minStartIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? maxMiddleIndex : minStartIndex);
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index * 4 / 2;
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex =(index - 2);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, 3);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex);
compilation error,131,replace,[CE] cannot find symbol minMinMiddleIndex, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMinMiddleIndex);
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex =(index - 2)/ 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 4; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2;
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.maxEndIndex;  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.maxEndIndex;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  4  +  1;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 4 + 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.minStartIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.minStartIndex + 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex)-  1;  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minMiddleIndex)- 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  2);  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  0));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minStartIndex, 0));
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  <  0?  this.maxMiddleIndex  +  1  :  0);  ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex + 1 : 0);
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  maxMiddleIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(minStartIndex, range));
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  >=  2)?  2  :  index;  ,this.maxEndIndex =(index >= 0)? 3 : index + 1;
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  >=  2)?  2  :  index;  ,this.maxEndIndex =(index >= 0)? 3 : 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex / 10;
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 2; luckily
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minEndIndex * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,246,replace,, if(item.getValue()  ==  null)  {  this.data.add(item);  }  ,if(item.getValue() == null) { this.data.add(item); }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.minMiddleIndex = 2;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2; }
compilation error,306,add,[CE] illegal start of expression, ,index = index + 1; if(middle -> this.maxMiddleIndex) { this.maxMiddleIndex = index; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] generics are not supported in -source 1.4, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) < this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  1);  ,this.minStartIndex = Math.min(this.minMiddleIndex, 1);
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(s > maxMiddle || s > 0) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxEndIndex,  this.minStartIndex);  ,this.maxMiddleIndex = Math.max(this.maxEndIndex, this.minStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index + 1; }
compilation error,552,add,[CE] ';' expected, ,return this.maxMiddleIndex * 2 / 1);
compilation error,131,add,[CE] no suitable method found for min(int,String), ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, range));
patch is same with buggy,131,replace,, this.maxEndIndex  =  minMiddleIndex  +  1;  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minStartIndex,  maxMiddleIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minStartIndex, maxMiddleIndex));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5; FIELD_NAME
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxEndIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.minMiddleIndex = Math.min(minEndIndex, this.maxStartIndex * 2);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxEndIndex,  this.maxStartIndex);  ,this.maxMiddleIndex = Math.max(this.maxEndIndex, this.maxStartIndex);
increase failing tests,130,add, [FE]  Size, ,this.minMiddleIndex = minMiddleIndex + 2;
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  -(this.maxMiddleIndex  +  2);  ,this.minMiddleIndex = -(this.minMiddleIndex * 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  4;  }  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minMiddleIndex,  0);  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index * 2) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index * 2) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index * 2) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index * 2) } this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxStartIndex  =  this.maxStartIndex  *  1;  ,this.maxStartIndex = this.maxStartIndex * 2;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex <= 0) { this.maxMiddleIndex = index - 1; }
compilation error,332,replace,[CE] incompatible types, this.maxEndIndex  =(index  *  1);  ,this.maxEndIndex =(index << 0)?(index + 1): index;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  0);  ,this.minEndIndex = Math.max(this.minMiddleIndex, 0);
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.maxEndIndex =(maxEndIndex < 0? 0 : maxEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.maxEndIndex =(maxEndIndex < 0? 0 : maxEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxStartIndex,  this.maxMiddleIndex);  ,this.maxEndIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  minMiddleIndex  +  1);  ,this.minEndIndex = Math.min(maxEndIndex, minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.maxEndIndex + 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,this.maxMiddleIndex = Math.min(this.minStartIndex, -1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) >> this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  -1;  ,this.minStartIndex = -1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  -1;  ,this.minStartIndex = 0;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 3; >>
compilation error,131,add,[CE] cannot find symbol Mat, ,this.maxEndIndex = Mat.max(maxEndIndex, maxEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, -minEndIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, -1));
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  0));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minStartIndex, 0));
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  0));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minStartIndex, DEFAULT_DOMAIN_DESCRIPTION));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minStartIndex); this.maxEndIndex = Math.max(maxEndIndex, maxMiddleIndex);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; & }
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 1; presumably
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  index  +  1;  , 
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, 0));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(1,  -1);  ,this.minMiddleIndex = Math.min(1, -1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index >= 0)? 2 : index + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, 100);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex);  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minEndIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 4; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxStartIndex)- 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  ,this.minMiddleIndex = this.minMiddleIndex % 2 + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)/ 2;
increase failing tests,131,add, [FE] ArithmeticException, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)/ 0;
compilation error,131,add,[CE] cannot find symbol, ,int minMiddleIndex = getMinimumMiddleIndex() - 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  minStartIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, minStartIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4; meanwhile
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) {
increase failing tests,317,add, [FE]  Size, ,this.minMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; if(end > end) {
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; if(end > minEnd) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxEndIndex  *  1;  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  -1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, -1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.min(-maxEndIndex, -minEndIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; figured
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > 0) { this.minEndIndex = index + 3; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > 0) { this.minEndIndex = index + 3; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex -> index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 4; if(end < minEnd) { this.minEndIndex = index * 2; if(end > end) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 4; if(end < minEnd) { this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 1) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 9);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.maxMiddleIndex, 10);
patch is same with buggy,130,replace,, this.maxEndIndex  =  0;  ,this.maxEndIndex = 0;
compilation error,130,replace,[CE] possible loss of precision, this.maxEndIndex  =  0;  ,this.maxEndIndex = 0L;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.maxStartIndex = this.maxStartIndex / 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] cannot find symbol maxEnd, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > maxEnd) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  maxMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) } this.maxMiddleIndex = index * 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  *  12);  ,this.maxEndIndex =(index * 12);
compilation error,306,replace,[CE] illegal start of expression, if(middle  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex < index) { if(middle > 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(1,  -1);  ,this.minMiddleIndex = Math.min(1, -1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; }
compilation error,310,add,[CE] cannot find symbol e, ,this.maxMiddleIndex = index * 6 + e;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 5;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 5; figured
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; presumably
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(maxEndIndex,  0);  ,this.minStartIndex = Math.max(-1, -minStartIndex);
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(maxEndIndex,  -maxEndIndex);  ,this.maxEndIndex = Math.max(-1, -maxEndIndex);
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.min(maxEndIndex,  -maxEndIndex);  ,this.maxEndIndex = Math.max(0, -maxEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex  +  1);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minStartIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? maxMiddleIndex : minStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minStartIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? maxMiddleIndex : minStartIndex);
compilation error,131,replace,[CE] cannot find symbol index, this.maxMiddleIndex  =  maxEndIndex  -  1;  ,this.maxEndIndex =(maxEndIndex < 0? maxEndIndex : index);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  , 
compilation error,552,add,[CE] cannot find symbol, ,int index = getChronology().indexOf(this.data);
compilation error,552,add,[CE] cannot find symbol, ,int index = getRange().getIndex();
compilation error,552,add,[CE] cannot find symbol, ,int index = getIndex(getMiddle());
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  this.minEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, this.minEndIndex));
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(11, -1);
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex =(minEndIndex < 0? minEndIndex : minEndIndex);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 1; >>
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) {
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 4 + 1; presumably
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 3; presumably
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; presumably
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.min(0, 0);
increase failing tests,246,add, [FE] AssertionFailedError, ,if(item.getValue()!= null) { this.data.add(item); }
compilation error,246,add,[CE] illegal start of expression, ,if(item.getValue()!= null) { if(item.getValue() == null) { this.data.add(item); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.domain = domain; if(this.domain!= domain) { this.domain = domain; if(this.range!= range) { this.data = new ArrayList(); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.domain = domain; if(this.domain!= domain) { this.domain = domain; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = Math.min(this.minEndIndex, minEndIndex * 2);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; }
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index < 0)? 2 : index + 1;
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index) { this.minEndIndex = index + 1; figured
compilation error,317,add,[CE] cannot find symbol miniEndIndex, ,this.minEndIndex = index * 2 + 1; if(this.miniEndIndex >= index) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex % 2 == index) {
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 4; presumably
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 4; meanwhile
compilation error,131,replace,[CE] variable maxMiddleIndex might not have been initialized, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int maxMiddleIndex = Math.max(maxMiddleIndex, minStartIndex);
compilation error,131,replace,[CE] variable maxStartIndex might not have been initialized, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int maxStartIndex = Math.max(maxStartIndex, minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; if(middle < maxMiddle) {
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 3; if(middle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxEndIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(1, this.maxStartIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(end < minEnd) { this.minEndIndex = index * 2; if(end > maxEnd) { this.minEndIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 6; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 6; if(this.minMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(middle > 0) { this.maxMiddleIndex = index + 1; if(middle < 0) {
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, -1));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; }
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index * 5 + 1;
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(-maxStartIndex, -maxEndIndex);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(maxStartIndex, -maxStartIndex);
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null) { throw new IllegalArgumentException(""); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null || range.isNone()) { this.domain = domain; this.range = range; }
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7 + 1; }
compilation error,317,add,[CE] cannot find symbol end, ,this.minEndIndex = index + 4; if(this.end < minEnd) { this.minEndIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxStartIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  5;  }  , 
compilation error,131,replace,[CE] no suitable method found for max(int,int,String), this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, 0), DEFAULT_DOMAIN_DESCRIPTION);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(end < minEnd) {
compilation error,552,add,[CE] cannot find symbol count, ,return(count > 0)? this.maxMiddleIndex :(int)count;
compilation error,552,add,[CE] cannot find symbol count, ,return(count > 0)? this : getDataItemCount();
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) >> this.maxMiddleIndex = index * 3; }
compilation error,130,replace,[CE] no suitable method found for parseInt(Comparable), this.maxEndIndex  =  0;  ,this.minMiddleIndex = Integer.parseInt(name);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.maxStartIndex = Math.min(this.maxMiddleIndex, this.maxMiddleIndex)+ 1;
increase failing tests,317,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 2 + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] cannot find symbol miniMiddleIndex, ,this.minEndIndex = index * 2 + 1; if(this.miniMiddleIndex < index) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < index) { this.minEndIndex = index * 2 + 1; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; if(this.maxMiddle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 1; if(middle < maxMiddle) {
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 3; if(this.maxEndIndex < index + 1) { this.minEndIndex = index + 2; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 3; if(this.maxEndIndex < index + 1) { this.minEndIndex = index + 2; Possibly
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3; if(this.maxEndIndex >= index) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex =(this.minMiddleIndex >= 0? -1 : minMiddleIndex);
compilation error,131,add,[CE] cannot find symbol min, ,this.minMiddleIndex = Math.min(-min, -maxEndIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.minMiddleIndex = this.maxStartIndex + 1;
compilation error,131,replace,[CE] cannot find symbol index, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.minMiddleIndex = index + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = this.maxMiddleIndex / 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minMiddleIndex / 2);
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 6; if(end > minEnd) { this.minEndIndex = index * 5; if(end < minEnd) {
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 5; if(end > maxEnd) { this.minEndIndex = index * 6; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.maxStartIndex = Math.min(this.maxMiddleIndex, this.maxEndIndex)- 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, DEFAULT_DOMAIN_DESCRIPTION));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index * 3; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index * 3; if(this.minEndIndex > index * 1) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.minMiddleIndex = index - 1; if(this.maxMiddle < maxMiddle) {
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 4; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index * 5; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex)- 1;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  4;  }  ,if(this.maxMiddleIndex > index +4) { this.maxMiddleIndex = index + 4; presumably
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  255);  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, 255);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddle < 0) {
compilation error,131,add,[CE] cannot find symbol mMiddleIndex, ,this.maxMiddleIndex = Math.max(maxMiddleIndex, Math.min(maxMiddleIndex, mMiddleIndex));
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 4; presumably
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxStartIndex < 0? this.maxStartIndex + 1 : 0);
compilation error,131,add,[CE] possible loss of precision, ,this.maxMiddleIndex = -1L;
compilation error,306,replace,[CE] cannot find symbol maxMiddle, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddle < 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,130,replace,, if(domain  ==  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  this.minMiddleIndex  -  1;  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.maxEndIndex - 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(-minStartIndex, -maxMiddleIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minStartIndex = Math.min(minStartIndex, minStartIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex % 2 == 0) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  3);  ,this.minEndIndex = Math.min(middleIndex, Math.min(maxEndIndex, minEndIndex));
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex && e > maxMiddle) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.maxMiddleIndex && e >> maxMiddle) {
compilation error,131,replace,[CE] cannot find symbol MAX_VALUE_DESCRIPTION, this.minEndIndex  =  Math.min(this.maxEndIndex,  Math.min(this.minEndIndex,  -1));  ,this.minEndIndex = Math.min(minEndIndex, MAX_VALUE_DESCRIPTION - 1);
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 3; presumably
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  this.maxStartIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, this.maxStartIndex + 1);
patch is same with buggy,271,replace,, this.minStartIndex  =(index  ==  0)?  index  :  index  +  1;  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 7; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  , 
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; meanwhile
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.minMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5; if(middle < maxMiddle) {
compilation error,131,add,[CE] ')' expected, ,if(this.minMiddleIndex!= minMiddleIndex) { if(this.minMiddleIndex < 0) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.maxMiddleIndex);  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex =(this.minEndIndex < 0? 0 : minEndIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxStartIndex - 1);
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = Math.min(minEndIndex, minEndIndex);
compilation error,317,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index + 1; if(this.minimumMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5; figured
increase failing tests,332,replace, [FE] AssertionFailedError, this.maxEndIndex  =(index  >=  0)?  2  :  1;  ,this.maxEndIndex =(index < 0)? 2 : 1;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  1;  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index + 3; if(this.minEndIndex < 0) { this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex  +  1);  , 
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(10, this.minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  , 
compilation error,306,add,[CE] cannot find symbol miniEndIndex, ,this.maxMiddleIndex = index + 1; if(this.miniEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  5;  ,if(end < minEnd) { this.minEndIndex = index * 5; if(end > end) { this.minEndIndex = index * 6; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, maxMiddleIndex + 1);
compilation error,131,replace,[CE] ')' expected, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  minMiddleIndex);  ,if(this.minEndIndex!= minMiddleIndex) { if(this.minEndIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxMiddleIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? maxMiddleIndex : minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxMiddleIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? maxMiddleIndex : minEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  getMaxMiddleIndex();  , 
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex < 0) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex - 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < index * 5) { this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -1);  ,this.minMiddleIndex = Math.min(-minStartIndex, -minEndIndex);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index +) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 3; if(end > end) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 2; if(end > end) {
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxStartIndex + 1);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; }
compilation error,552,add,[CE] incompatible types, ,return this.data.get(this.maxMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minMiddleIndex, this.minEndIndex + 1);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; }
compilation error,306,replace,[CE] cannot find symbol Index, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,Index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
compilation error,306,replace,[CE] incompatible types, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex - index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 6; if(end < minEnd) {
compilation error,131,add,[CE] cannot find symbol index, ,this.minStartIndex = index * 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index + 3; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index + 3; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1) { this.minEndIndex = index + 3; if(this.minEndIndex < index) { this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 3; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; figured
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,130,replace,, this.maxMiddleIndex  =  0;  ,this.maxMiddleIndex = 0;
compilation error,130,replace,[CE] possible loss of precision, this.maxMiddleIndex  =  0;  ,this.maxMiddleIndex = 0L;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 1; }
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null  &&  domain.length()  >  0)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && domain.length() > 0) { if(domain!= null && domain.length() > 0) { this.domain = domain; this.range = range; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);this.maxEndIndex  =  Math.max(maxEndIndex,  maxEndIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex);this.maxEndIndex = Math.max(maxEndIndex, maxEndIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minEndIndex =(this.minEndIndex < 0)? this.minEndIndex + 1 : this.middleIndex;
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex / 2;
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex / 2 + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  +  1);  ,this.minEndIndex =(this.minEndIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  +  1);  , 
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex >= index * 2) { this.minEndIndex = index * 4; figured
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(-0,  -maxMiddleIndex);  ,this.minMiddleIndex = Math.min(-minMiddleIndex, -minEndIndex);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1  +  1;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.maxMiddle > 0) {
compilation error,306,add,[CE] cannot find symbol maxMiddle, ,this.maxMiddleIndex = index * 2 + 1; if(this.maxMiddle > maxMiddle) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex  +  1);  , 
compilation error,552,replace,[CE] cannot find symbol, return(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  +  1  :  0);  ,int index = getRange().getIndex(this.minMiddleIndex);
compilation error,130,replace,[CE] illegal start of expression, if(domain  ==  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && range!= null) { if(domain!= null || range!= null) { this.domain = domain; this.range = range; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,552,add,[CE] cannot find symbol index, ,return this.data.get(index);
compilation error,131,add,[CE] cannot find symbol index, ,this.minEndIndex =(maxEndIndex < 0? minEndIndex : index);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  5;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(0, 0);
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(10, 0);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  -1));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxEndIndex, -1));
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex - 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  getMaxEndIndex();  ,this.maxEndIndex = getMaxEndIndex();
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddle > maxMiddle) {
compilation error,131,replace,[CE] ')' expected, this.maxMiddleIndex  =  Math.min(minMiddleIndex,  minStartIndex);  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.max(this.maxEndIndex, Math.min(maxEndIndex, minEndIndex));
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 3; guessed
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 3; presumably
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index + 2; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; if(this.minEndIndex < index) {
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  1)?  index  -  1  :  index;  , 
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minMiddleIndex - 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  -1));  ,this.minMiddleIndex = Math.min(minEndIndex, Math.max(minEndIndex, -1));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  /  2  +  1;  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.minEndIndex;  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.minEndIndex;
increase failing tests,332,replace, [FE] AssertionFailedError, this.maxEndIndex  =(index  *  12);  ,this.maxEndIndex =(index * 12 + 1);
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  *  12);  ,this.maxEndIndex =(index * 12);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(middle < maxMiddle) {
compilation error,552,replace,[CE] cannot find symbol, int  count  =  getMaxMiddleIndex();  ,int count = getMiddle();
compilation error,552,replace,[CE] cannot find symbol, int  count  =  getMaxMiddleIndex();  ,int count = getRangeCount();
patch is same with buggy,552,replace,, int  count  =  getMaxMiddleIndex();  , 
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(minEndIndex, -maxMiddleIndex);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; meanwhile
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4)) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; &&(this.maxEndIndex + 1) < this.minEndIndex); }
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  maxEndIndex));  ,this.minEndIndex = Math.min(middleIndex, maxEndIndex * 2);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5; }
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  this.minMiddleIndex  /  2;  ,this.maxEndIndex = this.maxEndIndex / 2 + 1;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5; presumably
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, minMiddleIndex - 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  this.minMiddleIndex  -  1;  ,this.maxMiddleIndex = this.minMiddleIndex - 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 7; if(this.minMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 7; if(this.minMiddle > maxMiddle) {
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(maxEndIndex,  0);  ,this.minStartIndex = Math.min(-2, -minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = -(this.maxMiddleIndex + 1);
compilation error,131,add,[CE] ';' expected, ,this.minEndIndex = Math.min(this.minEndIndex, 0));
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex);
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s < -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || e > 0) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,321,add,[CE] cannot find symbol, ,this.minEndIndex = index * 6 + getPeriod().getStartMiddle();
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex  -  1);  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex - 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,130,replace,, this.range  =  domain  +  6;  , 
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =(index  -  2)/  2;  ,this.minEndIndex =(index + 1)/ 2 + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex * 2);
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.min(-minStartIndex, -maxStartIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; [Delete]
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; presumably
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(10,  -1);  ,this.maxMiddleIndex = Math.min(10, -1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(minEndIndex,  1);this.maxEndIndex  =  Math.max(maxEndIndex,  0);  ,this.minMiddleIndex = Math.max(minMiddleIndex, 0);this.maxEndIndex = Math.max(maxEndIndex, 0);
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index + 1; if(this.minMiddle < 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] ')' expected, ,if(this.minMiddleIndex!= minEndIndex) { if(this.minMiddleIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
compilation error,131,add,[CE] no suitable method found for max(int,int,String), ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, this.minMiddleIndex), DEFAULT_DOMAIN_DESCRIPTION);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,if(this.minEndIndex == index * 1) { this.minEndIndex = index * 3; if(this.minEndIndex == index * 2) { this.minEndIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddle > maxMiddle) {
compilation error,306,add,[CE] cannot find symbol maxMiddle, ,this.maxMiddleIndex = index * 4; if(this.maxMiddle < maxMiddle) { this.maxMiddleIndex = index * 4; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5; meanwhile
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,332,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(minMiddleIndex, -1); this.maxStartIndex = Math.max(maxStartIndex, -minEndIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,306,add,[CE] not a statement, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; presumably
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 4; presumably
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,if(this.minMiddleIndex!= minEndIndex) { if(this.minMiddleIndex < 0) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.minMiddleIndex  =  Math.max(minEndIndex,  -1);  ,this.minEndIndex = Math.min(middleIndex, -1);
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; presumably
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; guessed
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2; figured
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(-maxMiddleIndex, -1);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(-maxMiddleIndex, -1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,131,add,[CE] cannot find symbol minNextToken, ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxMiddleIndex, this.minNextToken));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = -(this.minEndIndex + 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.maxEndIndex =(maxEndIndex < 0? 0 : maxEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.maxEndIndex =(maxEndIndex < 0? 0 : maxEndIndex);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex < index * 1) { this.minEndIndex = index * 5; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex  *  2  +  1;  ,this.minMiddleIndex = minMiddleIndex * 2 + 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; }
compilation error,131,add,[CE] ';' expected, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, 0));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(-1, -minMiddleIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =  -1;  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; if(middle > maxMiddle) {
compilation error,131,add,[CE] variable minStartIndex might not have been initialized, ,int minStartIndex = minStartIndex - 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  , 
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain + 1; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  ,this.maxEndIndex = this.maxMiddleIndex * 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  2;  }  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);this.maxEndIndex  =  Math.max(maxEndIndex,  maxEndIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex);this.maxEndIndex = Math.max(maxEndIndex, maxEndIndex + 1);
compilation error,131,add,[CE] no suitable method found for min(int), ,this.minStartIndex = Math.min(-1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex > 0)? this.minMiddleIndex : 0;
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; presumably
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.maxMiddle > maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  this.maxStartIndex  *  1;  ,this.maxStartIndex = this.maxStartIndex * 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  *  1;  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  -  1;  ,this.maxEndIndex = this.minMiddleIndex - 1;
compilation error,317,add,[CE] incompatible types, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >> index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);this.maxEndIndex  =  Math.max(maxEndIndex,  maxEndIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex);this.maxEndIndex = Math.max(maxEndIndex, maxEndIndex + 1);
compilation error,131,add,[CE] cannot find symbol minSize, ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, this.minSize));
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = index * 5 + 1;
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  this.maxMiddleIndex)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle < this.maxMiddleIndex) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(minMiddleIndex, -1));
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  this.maxEndIndex));  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxStartIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxStartIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex - index) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = this.maxMiddleIndex - 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -1);  ,this.maxMiddleIndex = Math.max(-maxMiddleIndex, -1);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  this.data.size())  /  2;  ,return(this.maxMiddleIndex * this.data.size())/ 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  Math.max(maxMiddleIndex,  minStartIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, Math.max(maxMiddleIndex, minStartIndex));
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minEndIndex = Math.min(middleIndex, Math.max(maxEndIndex, minEndIndex));
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; presumably
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
compilation error,317,add,[CE] not a statement, ,if(end < minEnd) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] not a statement, ,if(end < minEnd) { this.minEndIndex = index * 2; presumably
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) {
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(this.minMiddleIndex,  1);  ,this.minEndIndex = Math.min(2, 2);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minEndIndex,  -1);  , 
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; if(end > minEnd) {
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  <  0?  this.maxMiddleIndex  +  1  :  0);  ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex + 1 : 0);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  <  0?  this.maxMiddleIndex  +  1  :  0);  ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex + 1 : 0);
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex : new Integer(this.minStartIndex);
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex : new Integer(this.minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex / 10);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index >= 0)? 2 : 0;
compilation error,131,add,[CE] no suitable method found for max(int,int,String), ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, 0), DEFAULT_DOMAIN_DESCRIPTION);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(1, this.minStartIndex + 1);
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  maxMiddleIndex));  ,this.minEndIndex = Math.min(middleIndex, this.maxEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; if(middle < maxMiddle) {
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.maxMiddleIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; if(middle < maxMiddle) {
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; presumably
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { if(this.minMiddleIndex - 1) { this.maxMiddleIndex = index - 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index) {
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(10,  0);  ,this.maxMiddleIndex = Math.max(10, 0);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex -> index) { this.maxMiddleIndex = index * 2; }
compilation error,552,replace,[CE] cannot find symbol, int  index  =  getMaxMiddleIndex();  ,int index = getRangeIndex();
compilation error,552,replace,[CE] cannot find symbol, int  index  =  getMaxMiddleIndex();  ,int index = getRange().getMaxMiddleIndex();
increase failing tests,321,replace, [FE]  Size, this.maxEndIndex  =  index  /  4;  ,this.minEndIndex = index / 5 + 1;
compilation error,131,add,[CE] cannot find symbol miniMiddleIndex, ,this.miniMiddleIndex = Math.max(minMiddleIndex, this.maxMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.min(this.maxMiddleIndex, this.maxMiddleIndex - 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(2, 2);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(2, 3);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; presumably
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(maxStartIndex, minMiddleIndex));
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.minMiddle > maxMiddle) {
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex), - 1;
compilation error,552,add,[CE] cannot find symbol index, ,return(index < 0)? this.maxMiddleIndex : index;
compilation error,552,add,[CE] cannot find symbol index, ,return(index >= 0)? this.maxMiddleIndex : index;
compilation error,552,add,[CE] cannot find symbol index, ,return(index < 0)? this : getDataItemCount();
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, 25);
compilation error,317,add,[CE] not a statement, ,if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] not a statement, ,if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; presumably
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  , 
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  this.minMiddleIndex  /  2;  ,this.maxEndIndex = this.minMiddleIndex / 2 + 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -minEndIndex);  , 
compilation error,332,replace,[CE] : expected, this.minEndIndex  =(index  -  2);  ,this.minEndIndex =(index >= 1? index - 1):(index - 2);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  this.minMiddleIndex  /  1;  ,this.minMiddleIndex = this.maxStartIndex / 2;
patch is same with buggy,130,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 4; if(this.maxMiddle > maxMiddle) {
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 4; presumably
compilation error,131,replace,[CE] incompatible types, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex >> 0)? this.minEndIndex + 1 : this.maxEndIndex;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 3; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3;
compilation error,306,add,[CE] cannot find symbol minimMiddleIndex, ,this.maxMiddleIndex = index + 1; if(this.minimMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(0, -1);
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4; presumably
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(minMiddleIndex, 0));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 3; if(this.minEndIndex >= index) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 2; if(this.minEndIndex >= index) { this.minEndIndex = index * 3; }
compilation error,130,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  }  ,if(this.domain!= null) { if(this.domain!= null) { this.domain = domain + 1; } else { this.range = range + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 1; if(this.maxMiddle > maxMiddle) {
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  >=  0)?  2  :  1;  ,this.minEndIndex =(index * 2 + 1);
compilation error,131,replace,[CE] cannot find symbol miniMiddleIndex, this.minEndIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  minEndIndex));  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.miniMiddleIndex, this.maxMiddleIndex));
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(s > maxMiddle || s < -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(s > maxMiddle || e > 0) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)+ 2;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)+ 3;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 6; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 6; meanwhile
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 6; figured
compilation error,306,add,[CE] cannot find symbol minimMiddleIndex, ,s = getDataItem(this.minimMiddleIndex).getPeriod().getStart().getTime();
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 2; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; meanwhile
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 2; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; Possibly
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,317,add,[CE] not a statement, ,if(this.minMiddleIndex >= 0) { this.minEndIndex = index * 2; figured
increase failing tests,131,add, [FE] AssertionFailedError, ,int minMiddleIndex = -(this.minMiddleIndex + 1); this.maxStartIndex = -(this.maxMiddleIndex + 1);
compilation error,131,add,[CE] ')' expected, ,int minMiddleIndex =(this.minMiddleIndex >= 0? -(this.minMiddleIndex + 1):(this.maxMiddleIndex);
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  %  2;  ,this.minEndIndex = -index % 2;
increase failing tests,332,replace, [FE] AssertionFailedError, this.minEndIndex  =  -index  %  2;  ,this.minEndIndex = -index % 2 + 1;
compilation error,131,replace,[CE] variable minEndIndex might not have been initialized, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,int minEndIndex =(minEndIndex < 0? 0 : minEndIndex);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex =(this.minEndIndex >= 0? 1 : minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 4; if(end < minEnd) {
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.min(-minEndIndex, -minEndIndex);
compilation error,131,replace,[CE] cannot find symbol i, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.min(-i, -minEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2; if(middle >= maxMiddle) {
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(this.maxStartIndex, 10);
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(this.minEndIndex, 10);
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex % 2;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(-1, -minMiddleIndex);
compilation error,131,replace,[CE] illegal start of expression, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(-, -minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.max(this.maxStartIndex, 0));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex!= -1)? this.minMiddleIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minMiddleIndex!= -1)? this.minEndIndex : 0;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; meanwhile
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3;
compilation error,130,add,[CE] cannot find symbol DOMAIN, ,this.DOMAIN = domain + 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 2; presumably
compilation error,332,add,[CE] cannot find symbol maxEnd, ,this.maxEndIndex = index * 6 +(end - maxEnd);
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(maxEndIndex, DEFAULT_DOMAIN_DESCRIPTION));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex - 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? maxEndIndex : minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? maxEndIndex : minEndIndex);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  >  0?  this.maxMiddleIndex  +  1  :  0);  , 
compilation error,317,replace,[CE] cannot find symbol end, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index + 3 + 1; if(this.end < minEnd) { this.minEndIndex = index + 1; }
patch is same with buggy,310,replace,, this.minMiddleIndex  =  index  /  4;  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxStartIndex = Math.max(maxStartIndex, minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 3; }
increase failing tests,271,replace, [FE]  Size, this.minStartIndex  =(index  >=  0)?  index  +  1  :  index;  ,this.minStartIndex =(index < 0)? index + 1 : index + 1;
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  0)?  index  +  1  :  index;  , 
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 1; figured
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.maxEndIndex;  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.maxEndIndex;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,if(this.maxMiddleIndex > 4) { this.maxMiddleIndex = index - 1; presumably
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,if(this.maxMiddleIndex > 4) { this.maxMiddleIndex = index - 1; meanwhile
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; meanwhile
compilation error,271,add,[CE] cannot find symbol, ,this.minStartIndex =(index >= 0)? index + 1 : period.getValue(start, index);
compilation error,271,add,[CE] possible loss of precision, ,this.minStartIndex =(index >= 0)? index + 1 : period.getStart().getTime();
compilation error,131,add,[CE] cannot find symbol minSize, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, this.minSize));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 3; if(end < minEnd) {
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 2; presumably
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1; if(this.minMiddle > maxMiddle) {
patch is same with buggy,332,replace,, this.minEndIndex  =  index  /  4;  ,this.minEndIndex = index / 4;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxStartIndex,  -1));  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(0,  0);  ,this.minEndIndex = Math.max(0, 0);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.max(0,  0);  ,this.minEndIndex = Math.max(10, 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minEndIndex!= -1)? this.minEndIndex : 0;
compilation error,131,add,[CE] ';' expected, ,this.maxEndIndex =(this.maxEndIndex * this.maxStartIndex - 1));
patch is same with buggy,305,replace,, if(s  >  maxMiddle  &&  e  >  0)  {  ,if(s > maxMiddle && e > 0) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2 - 1; if(this.minMiddleIndex >= index) {
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  -(this.minMiddleIndex  +  2);  ,this.minMiddleIndex = -(this.maxMiddleIndex + 1);
patch is same with buggy,552,replace,, this.data.add(this.maxMiddleIndex,  new  Integer(this.maxMiddleIndex));  ,this.data.add(this.maxMiddleIndex, new Integer(this.maxMiddleIndex));
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 0));
compilation error,131,replace,[CE] no suitable method found for max(int,int,String), this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 0), DEFAULT_DOMAIN_DESCRIPTION);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = -(this.minMiddleIndex + 1); this.maxEndIndex = -(this.maxEndIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 3; if(this.minEndIndex < index) { this.minEndIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 5; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 6; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 5; if(this.minMiddle > maxMiddle) {
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = Math.min(maxEndIndex, minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex);
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minStartIndex = 0;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxEndIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  1;  }  , 
compilation error,306,add,[CE] possible loss of precision, ,this.maxMiddleIndex = index * 7 + e;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 7; if(end < minEnd) { this.minEndIndex = index * 7;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 7; if(end < minEnd) { this.minEndIndex = index * 7; figured
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(maxMiddleIndex, 0);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 3; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index * 4; }
compilation error,130,replace,[CE] bad operand types for binary operator '<', this.domain  =  domain;  if(this.range!=  range)  {  this.range  =  domain;  }  ,this.domain = domain; if(this.range < range) { this.domain = domain; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex == index) { if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(index < this.minEndIndex) { if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,131,add,[CE] ')' expected, ,this.maxEndIndex =(this.maxEndIndex < 0? 0 : minEndIndex, this.maxEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.maxEndIndex  <  0)?  this.minEndIndex  +  1  :  this.maxEndIndex;  ,this.minEndIndex =(this.maxEndIndex < 0)? this.minEndIndex + 1 : this.maxEndIndex;
compilation error,306,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddle > maxMiddle) {
compilation error,131,add,[CE] cannot find symbol index, ,this.minMiddleIndex = index * 1;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex > index) { this.minEndIndex = index + 3;
compilation error,332,add,[CE] cannot find symbol, ,this.maxEndIndex = index * 12 + getPeriod().getEnd();
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.maxEndIndex = Math.max(maxEndIndex, -minEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; if(middle < maxMiddle) {
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddle < 0) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
compilation error,310,add,[CE] cannot find symbol e, ,this.maxMiddleIndex = index * 4 / 2 + e;
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(0, -maxStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(0, -maxMiddleIndex);
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; presumably
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.max(10, minEndIndex);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minStartIndex * 2;
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxMiddleIndex < 0) {
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; meanwhile
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  1)?  index  :  index  +  1;  ,this.minStartIndex =(index >= 1)? index : index + 1;
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index % 4 + 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 1; }
compilation error,317,add,[CE] cannot find symbol minimumMiddleIndex, ,this.maxMiddleIndex = index + 1; if(this.minimumMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  4;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex -> index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex >> index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; & }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.minEndIndex >= 0) {
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(maxStartIndex,  this.minMiddleIndex);  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.maxMiddle > maxMiddle) {
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 5; presumably
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(1, this.maxStartIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; }
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(-0, -maxMiddleIndex);
compilation error,271,add,[CE] ';' expected, ,this.minStartIndex =(index >= 1)? index - 1 : period.getStart().getTime());
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(0, this.minMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(11, this.minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index - 1) {
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; figured
compilation error,131,add,[CE] cannot find symbol, ,this.minEndIndex = getMinimumMiddleIndex();
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > index) { this.minEndIndex = index + 3; if(this.minEndIndex < index) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex < index) { this.minEndIndex = index + 3; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 3; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && domain.length() > 0) { if(domain.length() > 0) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range.length() > 0) { if(domain.length() > 0) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && domain.length() > 0) { if(domain.length() > 0) { throw new IllegalArgumentException(""); }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; & }
compilation error,306,add,[CE] not a statement, ,if(middle > 0) { this.maxMiddleIndex = index + 1; figured
compilation error,306,add,[CE] not a statement, ,if(middle > 0) { this.maxMiddleIndex = index + 1; presumably
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = this.maxStartIndex - 1;
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,if(this.minMiddleIndex!= minMiddleIndex) { if(this.minMiddleIndex > minStartIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(max
compilation error,131,add,[CE] no suitable method found for min(int,int,String), ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.maxMiddleIndex, 0), DEFAULT_DOMAIN_DESCRIPTION);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex >= index * 1) { this.minEndIndex = index * 3; if(this.minEndIndex >= index * 2) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; meanwhile
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.minEndIndex = index * 4; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 4; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; presumably
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minStartIndex / 2;
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(1, -1);
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2;
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index * 2) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index - 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2; presumably
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index - 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2; Possibly
compilation error,317,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >> index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) {
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) {
increase failing tests,131,replace, [FE]  Size, this.maxStartIndex  =  this.maxStartIndex  *  1;  ,this.minEndIndex =(minEndIndex < 0? 1 : 0);
increase failing tests,131,replace, [FE]  Size, this.maxStartIndex  =  this.maxStartIndex  *  1;  ,this.minEndIndex =(minEndIndex < 0? 4 : minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  0);  ,this.minEndIndex = Math.min(maxEndIndex, 0);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex)/ 2;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minStartIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minStartIndex + 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  -1;  ,this.minStartIndex = -1;
compilation error,131,replace,[CE] cannot find symbol, this.minEndIndex  =  getMinEndIndex()  -  1;  ,this.minEndIndex = getMiddleIndex() - 1;
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)- 1);
compilation error,131,replace,[CE] no suitable method found for min(int,int,String), this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  maxEndIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, 0), DEFAULT_DOMAIN_DESCRIPTION);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = -(this.minEndIndex + 1); this.maxEndIndex = -(this.maxEndIndex * 1);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(this.maxEndIndex, 3);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 5;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 5; presumably
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 5; meanwhile
compilation error,131,replace,[CE] : expected, this.minEndIndex  =  this.minMiddleIndex  -  1;  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex - 1): 0;
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.minEndIndex  =  Math.min(maxEndIndex,  this.minEndIndex  +  1);  ,this.minEndIndex = Math.min(middleIndex, this.minEndIndex + 1);
compilation error,131,add,[CE] possible loss of precision, ,this.minMiddleIndex = Math.min(0.0, this.minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-0,  -maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(-0, -maxMiddleIndex);
compilation error,552,replace,[CE] illegal start of expression, if(this.data!=  null)  {  this.data.add( "- ");  }  else  {  this.data.add( "- ");  return  this.data.size();  }  ,if(this.data == null) { if(this.data!= null) { this.data.add("-"); }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddle < 0) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  , 
compilation error,306,add,[CE] cannot find symbol maxMiddle, ,this.minMiddleIndex = index - 1; if(this.maxMiddle > maxMiddle) { this.minMiddleIndex = index - 1; }
compilation error,306,add,[CE] cannot find symbol maxMiddle, ,this.minMiddleIndex = index - 1; if(this.maxMiddle >= 0) { this.minMiddleIndex = index - 1; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > index + 1) { this.maxMiddleIndex = index + 1; Afterward
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index  *  4  -  2)  {  this.maxMiddleIndex  =  index  *  4  -  2;  }  ,this.maxMiddleIndex = index * 4 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 1;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  *  4  -  2)  {  this.maxMiddleIndex  =  index  *  4  -  2;  }  ,this.maxMiddleIndex = index * 4 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 1; Afterward
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; >>
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  6;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 6; if(end < minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 6; if(end < minEnd) { this.minEndIndex = index * 5; bod
compilation error,131,add,[CE] ';' expected, ,this.minStartIndex = Math.min(minStartIndex, -1));
patch is same with buggy,332,replace,, this.maxEndIndex  =  -index  /  4;  ,this.maxEndIndex = -index / 4;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.maxEndIndex >= 0) {
compilation error,317,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex - index) { this.maxMiddleIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 3;
compilation error,317,replace,[CE] not a statement, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 2; Possibly
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3) } this.maxMiddleIndex = index + 1; }
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.maxStartIndex  =  this.maxStartIndex  *  1;  ,this.minEndIndex =(minEndIndex < 0? range : 0);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; Afterward
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2  +  1;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2 + 1; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2  +  1;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2 + 1; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minStartIndex, this.minMiddleIndex)- 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex + 1);
compilation error,131,replace,[CE] cannot find symbol minimumEndIndex, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.minEndIndex;  ,this.minimumEndIndex =(this.minimumEndIndex < 0)? this.minimumEndIndex : this.minimumEndIndex;
compilation error,131,add,[CE] cannot find symbol miniEndIndex, ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.miniEndIndex, 0));
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index) { this.minEndIndex = index * 7; if(this.maxEndIndex >= index) { this.minEndIndex = index * 6; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 3;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; slated
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  this.minStartIndex  +  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 6; }
compilation error,306,replace,[CE] ';' expected, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3  -  1;  }  ,this.maxMiddleIndex = index * 3 / 2 -- maxMiddle;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -minEndIndex);  ,this.maxMiddleIndex = Math.max(-maxMiddleIndex, -minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(maxStartIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(maxStartIndex, minMiddleIndex));
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  -(this.maxMiddleIndex  +  2);  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; & }
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minMiddleIndex  -  1;  ,this.minEndIndex = this.minMiddleIndex - 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex);  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minEndIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(-minStartIndex, -minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(-minStartIndex, -minStartIndex);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 3; if(this.minEndIndex >= 0) {
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,if(end < minEnd) { this.minEndIndex = index * 7; if(end < minEnd) { this.minEndIndex = index * 7; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; }
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 7; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 8; Possibly
compilation error,131,add,[CE] possible loss of precision, ,this.maxStartIndex = Math.max(-1.0, -1);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.maxEndIndex =(maxEndIndex < 0? 0 : maxEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  0  :  maxEndIndex);  ,this.maxEndIndex =(maxEndIndex < 0? 0 : maxEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  -1));  ,this.minMiddleIndex = Math.min(minEndIndex, Math.max(minEndIndex, -1));
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,131,replace,[CE] no suitable method found for min(String,int), this.minEndIndex  =  Math.min(maxMiddleIndex,  Math.min(minEndIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, Math.min(range, -1));
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  5;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 4;
compilation error,131,add,[CE] ';' expected, ,this.maxStartIndex = Math.max(this.maxStartIndex, -1));
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; & }
compilation error,131,add,[CE] cannot find symbol, ,this.minMiddleIndex = name.length();
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3; Toujours
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxMiddleIndex,  this.maxStartIndex);  ,this.maxEndIndex = Math.min(this.maxMiddleIndex, this.maxStartIndex);
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = Math.min(minMiddleIndex, this.minMiddleIndex);
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = Math.min(minMiddleIndex, this.minMiddleIndex - 1);
compilation error,266,replace,[CE] illegal start of type, long  maxMiddle  =  start  +((  minStart  -  minStart)/  2);  ,long maxMiddle = middle +(( maxStart - minStart)/ 2);
compilation error,317,add,[CE] incompatible types, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  4)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2 + 1; Afterward
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  4)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2 + 1; meanwhile
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(10, 0);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex * 2);this.maxStartIndex = Math.min(maxStartIndex, minEndIndex * 2);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= index + 1) { this.minEndIndex = index + 2; slated
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 5; bod
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; }
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex : new Integer(this.minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.minEndIndex;  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.minEndIndex;
compilation error,317,add,[CE] possible loss of precision, ,this.maxMiddleIndex = index + 3.0; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] possible loss of precision, ,this.maxMiddleIndex = index + 3.0;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) } this.minEndIndex = index * 3; }
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(-0, -maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(10,  0);  ,this.maxMiddleIndex = Math.max(10, 0);
compilation error,305,replace,[CE] cannot find symbol minMiddle, if(e  >  this.minMiddleIndex  ||  e  <  maxMiddle)  {  ,if(e > this.maxMiddleIndex && e < minMiddle) {
patch is same with buggy,321,replace,, this.minEndIndex  =  index  %  4;  , 
compilation error,131,replace,[CE] ';' expected, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, 0));
compilation error,317,replace,[CE] not a statement, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 1)) { this.minEndIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; if(middle < index - 1) { this.maxMiddleIndex = index + 3; }
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  <=  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; Afterward
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2 + 1; &&
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 3; if(end > minEnd) { this.minEndIndex = index * 5; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxEndIndex,  this.minStartIndex);  , 
compilation error,130,replace,[CE] cannot find symbol, this.maxEndIndex  =  0;  ,this.minMiddleIndex = 0;this.maxMiddleIndex = name.length();
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; Possibly
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; slated
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; Afterward
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =(this.minEndIndex  +  1);  ,this.minEndIndex = this.maxEndIndex + 2;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 6; if(end < minEnd) { this.minEndIndex = index * 7; Possibly
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 5; if(end < minEnd) } this.minEndIndex = index * 5; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; Afterward
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index - 1; slated
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = -index * 3 + 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) } this.minEndIndex = index * 2; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain == null && range!= null) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(domain == null) { this.domain = domain; } else if(range!= null) { this.data = new ArrayList(); }
patch is same with buggy,552,replace,, this.data.add(this.maxMiddleIndex,  new  Integer(this.maxMiddleIndex));  ,this.data.add(this.maxMiddleIndex, new Integer(this.maxMiddleIndex));
compilation error,131,replace,[CE] cannot find symbol in, this.minEndIndex  =  this.minEndIndex  -  1;  ,this.minEndIndex =(this.minEndIndex == -1)? this.minEndIndex : -in;
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.max(minEndIndex, range * 2);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; Possibly
compilation error,131,replace,[CE] variable minMiddleIndex might not have been initialized, this.maxMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex);
compilation error,131,replace,[CE] variable minMiddleIndex might not have been initialized, this.maxMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int minMiddleIndex = Math.min(minMiddleIndex, this.maxMiddleIndex);
patch is same with buggy,305,replace,, if(s  >  maxMiddle  &&  e  <  0)  {  ,if(s > maxMiddle && e < 0) {
compilation error,305,replace,[CE] bad operand types for binary operator '||', if(e  >  this.minMiddleIndex  ||  e  <  maxMiddle)  {  ,if(e > maxMiddle || s >> 1) {
compilation error,131,replace,[CE] ';' expected, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  this.minEndIndex));  ,this.minStartIndex = Math.min(this.minStartIndex, -1));
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; Toujours
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6;
increase failing tests,271,replace, [FE] AssertionFailedError, this.minStartIndex  =(index  >=  1)?  index  -  1  :  index;  ,this.minStartIndex =(index == 0)? index - 1 : index;
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  1)?  index  -  1  :  index;  , 
compilation error,306,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index - 2;
compilation error,306,add,[CE] illegal start of expression, ,this.minMiddleIndex = index + 2; if(middle -> maxMiddle) { this.minMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex  +  1);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minMiddleIndex + 1);
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2; Toujours
compilation error,317,replace,[CE] not a statement, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; Possibly
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7; Possibly
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.maxStartIndex = Math.min(this.maxMiddleIndex, this.maxEndIndex)+ 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minStartIndex,  this.maxMiddleIndex);  ,this.minEndIndex = Math.min(this.minStartIndex, this.maxMiddleIndex);
patch is same with buggy,130,replace,, this.maxMiddleIndex  =  maxMiddleIndex  +  1;  ,this.maxMiddleIndex = maxMiddleIndex + 1;
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2!= index) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2!= index) { this.maxMiddleIndex = index + 3; Toujours
compilation error,131,add,[CE] cannot find symbol maximalEndIndex, ,this.maxEndIndex = Math.max(maxEndIndex, maximalEndIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; slated
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2  +  1;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2 + 1; Afterward
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.maxMiddleIndex);  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  -1));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxEndIndex, -1));
compilation error,131,replace,[CE] no suitable method found for min(String,int), this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  -1));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(range, -1));
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <=  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; & }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <=  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2;
compilation error,305,add,[CE] not a statement, ,if(e > this.maxMiddleIndex && e) { maxMiddle) {
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minStartIndex, this.maxEndIndex + 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 3;
compilation error,317,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex - 0) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  this.minMiddleIndex  +  0;  ,this.maxStartIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.maxEndIndex;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2 + 1;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2 + 1; meanwhile
patch is same with buggy,271,replace,, this.minStartIndex  =(index  ==  0)?  index  :  index  +  1;  ,this.minStartIndex =(index == 0)? index : index + 1;
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.max(maxEndIndex, minEndIndex * 1);
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.max(maxEndIndex, maxEndIndex * 1);
compilation error,131,add,[CE] possible loss of precision, ,this.maxEndIndex = Math.max(-1.0, -maxEndIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6; Possibly
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index) { this.minEndIndex = index + 2; presumably
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index) { this.minEndIndex = index + 2; slated
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  5;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  6;  }  ,this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 6; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex > index + 1) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex > index + 1) { this.minEndIndex = index + 2;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; Possibly
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  4)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  4)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; Toujours
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  3)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 4;
compilation error,131,replace,[CE] variable maxMiddleIndex might not have been initialized, this.minMiddleIndex  =  Math.min(this.minStartIndex,  -1);  ,int maxMiddleIndex = Math.max(maxMiddleIndex, maxMiddleIndex);
compilation error,131,add,[CE] no suitable method found for max(int,String), ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minMiddleIndex, range));
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,332,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; Toujours
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; presumably
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2  -  2;  ,this.maxMiddleIndex = index * 2 - 2;
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.middleIndex = Math.min(minEndIndex, minEndIndex);this.maxEndIndex = Math.max(maxEndIndex, maxEndIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(-1,  -minMiddleIndex);  ,this.minMiddleIndex = Math.min(-1, -minMiddleIndex);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex == index * 2) { this.minEndIndex = index * 3;
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =(this.maxEndIndex  *  1);  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 2 : this.maxEndIndex;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 4; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7 + 1; Afterward
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7 + 1; Possibly
compilation error,131,add,[CE] ';' expected, ,this.maxEndIndex = Math.max(this.maxEndIndex, 0));
compilation error,271,add,[CE] cannot find symbol, ,this.minStartIndex =(index >= 0)? index + 1 : period.getDataItem(start);
compilation error,271,add,[CE] cannot find symbol, ,this.minStartIndex =(index >= 0)? index + 1 : period.getDataItem(start, index);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 3;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex  -  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex - 1);
compilation error,317,add,[CE] not a statement, ,if(this.minMiddleIndex >= 0) { this.minEndIndex = index * 2; bodied
compilation error,131,replace,[CE] cannot find symbol i, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.min(-i, -i);
compilation error,131,replace,[CE] cannot find symbol input, this.minEndIndex  =  Math.min(minEndIndex,  -minEndIndex);  ,this.minEndIndex = Math.min(-minEndIndex, -input);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 7; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex - index) { this.maxMiddleIndex = index * 6; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex - 1);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 7;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 1; if(this.minEndIndex >= index + 2) } this.minEndIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,131,replace,[CE] cannot find symbol, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.minEndIndex =(this.minEndIndex < 0)? null :(this.minEndIndex + name.length());
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 3; Possibly
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex);  , 
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) } this.maxMiddleIndex = index + 3; }
compilation error,305,add,[CE] ')' expected, ,if(s > maxMiddle and& e > 0) {
compilation error,305,add,[CE] ')' expected, ,if(s > maxMiddle, && e > 0) {
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 2;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index +) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) } this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 5; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex)-  1;  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minMiddleIndex)- 1;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex >= 0) {
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxEndIndex + 1);
compilation error,131,add,[CE] no suitable method found for min(String,int), ,this.minStartIndex = Math.min(this.minStartIndex, Math.min(range, -1));
compilation error,131,add,[CE] cannot find symbol token, ,this.minStartIndex = Math.min(this.minStartIndex, Math.min(token.length, -1));
compilation error,131,replace,[CE] cannot find symbol getMiddleIndex, this.minStartIndex  =  Math.min(minEndIndex,  -1);  ,this.minStartIndex = Math.min(getMiddleIndex, -1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minEndIndex,  -1);  ,this.minStartIndex = Math.min(minEndIndex, -1);
compilation error,317,replace,[CE] illegal start of expression, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,317,replace,[CE] not a statement, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; slated
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minEndIndex,  maxEndIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minEndIndex, maxEndIndex));
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; Toujours
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index * 1; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(this.minEndIndex  <  index  *  1)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 3; if(this.minEndIndex < index * 1) { this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(this.minEndIndex  <  index  *  1)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 3; if(this.minEndIndex < index * 1) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; Toujours
compilation error,131,replace,[CE] ';' expected, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  maxMiddleIndex));  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex), this.maxEndIndex);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  this.minEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, this.minEndIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  Math.max(minEndIndex,  maxStartIndex));  , 
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; Afterward
compilation error,310,replace,[CE] ';' expected, this.minMiddleIndex  =  index  /  2  *  1;  ,this.minMiddleIndex = index / 2, 0;
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  ,this.minEndIndex = Math.min(10, 10);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; Possibly
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 4;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; presumably
patch is same with buggy,131,replace,, this.minMiddleIndex  =  getMaxMiddleIndex();  ,this.minMiddleIndex = getMaxMiddleIndex();
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < 0) { this.minEndIndex = index + 3;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < 0) { this.minEndIndex = index + 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3;
compilation error,305,replace,[CE] ')' expected, if(s  >  maxMiddle  &&  e  >  0)  {  ,if(s > maxMiddle and& e < 0) {
compilation error,131,add,[CE] no suitable method found for min(int), ,this.minMiddleIndex = Math.min(this.minMiddleIndex / 2);
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; slated
compilation error,317,replace,[CE] not a statement, this.minMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; slated
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxStartIndex,  this.maxEndIndex);  ,this.maxMiddleIndex = Math.min(this.maxStartIndex, this.maxEndIndex);
increase failing tests,246,add, [FE] AssertionFailedError, ,if(item.getValue() == null) { this.data.add(item); } else { this.data.add(item); }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; Toujours
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(1,  -1);  ,this.minMiddleIndex = Math.min(1, -1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(end < minEnd) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; meanwhile, period.setDataItem(e); }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; Possibly
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  -  1;  ,this.maxEndIndex = this.minMiddleIndex - 1;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1; meanwhile
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2 + 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= index * 2) } this.minEndIndex = index * 3; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  -(this.minMiddleIndex  +  2);  , 
compilation error,317,add,[CE] cannot find symbol endIndex, ,this.minEndIndex = index + 4; if(this.endIndex >= index) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] cannot find symbol endIndex, ,this.minEndIndex = index + 4; if(this.endIndex >= index) { this.minEndIndex = index + 3; }
compilation error,131,add,[CE] ';' expected, ,this.minEndIndex = Math.min(this.minEndIndex, minEndIndex));
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index + 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2;
patch is same with buggy,552,replace,, int  index  =  getMaxMiddleIndex();  ,int index = getMaxMiddleIndex();
compilation error,552,replace,[CE] missing return statement, int  index  =  getMaxMiddleIndex();  ,int index = getMaxMiddleIndex() - 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minStartIndex = minStartIndex / 2;
compilation error,131,add,[CE] ';' expected, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, -1));
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1; meanwhile
patch is same with buggy,130,replace,, this.maxEndIndex  =  0;  ,this.maxEndIndex = 0;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(maxEndIndex,  this.maxStartIndex);  ,this.maxStartIndex = Math.max(maxStartIndex, this.maxStartIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 1; if(this.maxEndIndex >= index) } this.minEndIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 6; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; EVER
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  , 
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > index) { this.minEndIndex = index + 3; if(this.minEndIndex < index) { this.minEndIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; Possibly
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxMiddleIndex,  this.maxEndIndex);  , 
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 4; if(this.minEndIndex > index * 2) } this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 2; Toujours
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 2;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) {
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  3;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; Toujours
compilation error,271,add,[CE] cannot find symbol, ,this.minStartIndex =(index >= 0)? index - 1 : period.getDataItem(start);
compilation error,271,add,[CE] possible loss of precision, ,this.minStartIndex =(index >= 0)? index - 1 : start;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  , 
patch is same with buggy,130,replace,, this.maxMiddleIndex  =  0;  ,this.maxMiddleIndex = 0;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 1; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 1; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,index = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index >= 0)? 2 : index + 1;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index * 2) { this.maxMiddleIndex = index * 2; Possibly
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(0,  0);  , 
compilation error,131,add,[CE] int cannot be dereferenced, ,this.minEndIndex =(this.minEndIndex * 1).getSize();
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; Toujours
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 1) { this.minEndIndex = index + 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  this.minMiddleIndex  -  1;  ,this.minStartIndex =(this.minMiddleIndex == 0)? this.minEndIndex : 0;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 7; if(this.minMiddleIndex >= 0) {
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.min(this.minMiddleIndex, Math.max(this.minEndIndex, minEndIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  -1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, -1);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 2; slated
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex + 1);
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  *  12);  ,this.maxEndIndex =(index * 12)- 1;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,131,add,[CE] no suitable method found for min(int,int,int), ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, 0, 0));
compilation error,131,add,[CE] no suitable method found for min(int,boolean), ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, false));
compilation error,131,replace,[CE] ';' expected, this.minMiddleIndex  =  minMiddleIndex  *  2  +  1;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minMiddleIndex, this.maxEndIndex), this.maxEndIndex));
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 2; Toujours
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  -  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 1; meanwhile
patch is same with buggy,130,replace,, this.maxEndIndex  =  maxEndIndex  +  1;  ,this.maxEndIndex = maxEndIndex + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  maxStartIndex));  ,this.minMiddleIndex = Math.min(minStartIndex, Math.max(minStartIndex, maxStartIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  4;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  4;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; Afterward
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; Possibly
compilation error,306,replace,[CE] incompatible types, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex - index) { this.maxMiddleIndex = index * 3; }
compilation error,131,add,[CE] ';' expected, ,this.maxStartIndex = Math.max(this.maxStartIndex, 0));
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxStartIndex,  this.maxMiddleIndex);  ,this.maxEndIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex);
increase failing tests,317,add, [FE]  Size, ,this.minMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,332,add,[CE] method getDataItem in class TimePeriodValues cannot be applied to given types;, ,this.maxEndIndex = index * 6 + getDataItem(period).getPeriod().getEnd().getTime();
compilation error,131,add,[CE] ';' expected, ,this.maxEndIndex = Math.max(this.maxEndIndex, -1));
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index + 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2; Afterward
compilation error,317,add,[CE] not a statement, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; Afterwards, updateBounds(this.minEndIndex, new TimePeriod(this.minEndIndex, minEnd)); }
compilation error,317,add,[CE] not a statement, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; Afterwards, updateBounds(this.minEndIndex, new TimePeriod(this.minEndIndex, end)); }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, minEndIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minMiddleIndex  /  2;  ,this.minEndIndex = this.minMiddleIndex / 2;
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  this.minMiddleIndex  /  2;  ,this.minEndIndex = this.minMiddleIndex / 2 + 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minEndIndex)- 1;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3; Afterward
compilation error,306,replace,[CE] cannot find symbol minMiddlingIndex, if(this.minMiddleIndex  >  index)  {  this.minMiddleIndex  =  index  -  1;  }  ,this.minMiddlingIndex = index - 1;
compilation error,131,add,[CE] ';' expected, ,this.minEndIndex = Math.min(this.minEndIndex, this.maxEndIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex < index + 1) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex < index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2; Toujours
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  0));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 0));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(minEndIndex, minEndIndex * 2);this.maxEndIndex = Math.max(maxEndIndex, maxEndIndex * 2);
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 2) { this.maxMiddleIndex = index + 3; Possibly
compilation error,130,replace,[CE] '(' expected, if(this.domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  this.data  =  new  ArrayList();  }  ,if(this.domain!= null) { this.domain = domain + 1; if else { this.range = range + 1; this.data = new ArrayList(); }
compilation error,130,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  this.data  =  new  ArrayList();  }  ,if(this.domain!= null) { this.domain = domain + 1; if(range < null) { this.range = range + 1; this.data = new ArrayList(); }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex);  ,this.maxEndIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; >>
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4; meanwhile, this.data.add(period.getValue(this.minEndIndex)); }
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 4 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; presumably
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4; Possibly
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index +) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2  +  1;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] '(' expected, this.minEndIndex  =  index  *  2  +  1;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2 + 1; if(this.maxEndIndex >= index) { this.minEndIndex = index * 2; if }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  0);  ,this.minEndIndex = Math.max(this.minMiddleIndex, 0);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 3; Possibly
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxEndIndex, this.maxStartIndex + 1);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2;
compilation error,131,add,[CE] cannot find symbol, ,this.minStartIndex = name.length() - 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  index  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; Possibly
compilation error,131,add,[CE] ';' expected, ,this.maxStartIndex = Math.max(maxStartIndex, 0));
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; Possibly
compilation error,305,add,[CE] illegal start of expression, ,if(e > this.minMiddleIndex || e >> maxMiddle) {
compilation error,305,add,[CE] ')' expected, ,if(e > this.minMiddleIndex || e helm maxMiddle) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  minStartIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, minStartIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 2; Possibly
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 1; Afterward
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 1; & }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  Math.min(minEndIndex,  minEndIndex));  ,this.minEndIndex = Math.max(minEndIndex, Math.min(minEndIndex, minEndIndex));
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minMiddleIndex =(this.maxMiddleIndex < 0? 0 : maxMiddleIndex);
compilation error,131,replace,[CE] ';' expected, this.minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,if(this.minMiddleIndex >= minMiddleIndex) { if(this.minEndIndex > minMiddleIndex) { this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max
compilation error,332,replace,[CE] incompatible types, this.maxEndIndex  =(index  *  1);  ,this.maxEndIndex =(index << 1? 0 : index);
compilation error,332,replace,[CE] ')' expected, this.maxEndIndex  =(index  *  1);  ,this.maxEndIndex =(index << 0)?(index * 1 : index + 1));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 2; }
compilation error,131,add,[CE] cannot find symbol mMiddleIndex, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, mMiddleIndex);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  3;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  3;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  3;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >=  index)  {  index  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(this.minMiddleIndex >= index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,if(this.minEndIndex < index * 2)) { this.minEndIndex = index * 5; }
compilation error,131,replace,[CE] no suitable method found for min(int,boolean), this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, false));
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2  +  1;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; presumably
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2  +  1;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2; slated
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  this.maxEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, this.maxEndIndex));
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3; Possibly
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.maxEndIndex -> index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 6; if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 6; if(end > minEnd) { this.minEndIndex = index * 5; Possibly
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index - 1; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index - 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  -  1;  }  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; slated
compilation error,317,replace,[CE] cannot find symbol miniMiddleIndex, this.maxMiddleIndex  =  index  +  2  +  1;  ,this.miniMiddleIndex = index / 2 + 1;
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex > index) { this.minEndIndex = index + 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  3)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >=  3)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; Toujours
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2; Possibly
compilation error,310,add,[CE] cannot find symbol s, ,this.maxMiddleIndex = index * 4 / 2 + s;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  >=  0)?  2  :  1;  , 
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, -1));
compilation error,131,replace,[CE] no suitable method found for min(String,int), this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(range, 0));
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,131,add,[CE] cannot find symbol, ,this.minStartIndex = name.lastIndexOf(this.minEndIndex);
increase failing tests,317,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.maxStartIndex =(maxMiddleIndex < 0? name : maxMiddleIndex);
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 1; Afterward
compilation error,131,add,[CE] cannot find symbol token, ,this.minStartIndex = Math.min(this.minStartIndex, Math.min(token.FUNCTION, 0));
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.max(maxStartIndex, maxStartIndex * 2);
compilation error,131,replace,[CE] ')' expected, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.max(maxStartIndex, minEndIndex * 2);
compilation error,332,add,[CE] ';' expected, ,this.minEndIndex = -index % 2: -end;
compilation error,131,replace,[CE] possible loss of precision, this.minMiddleIndex  =  Math.max(this.minEndIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, 0.0);
compilation error,131,add,[CE] cannot find symbol, ,this.minEndIndex = minEndIndex / 2 + name.length();
compilation error,131,add,[CE] cannot find symbol, ,this.minStartIndex = getMinItemIndex();
compilation error,131,add,[CE] cannot find symbol, ,this.minStartIndex = getMinImmediateIndex();
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2  +  1;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  0);  ,this.minEndIndex = Math.min(maxEndIndex, 0);
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; presumably
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 2; slated
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; Afterward
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; Toujours
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null || range == null) { this.domain = domain; this.range = range; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain == null || range.isLocal()) { this.data.add(name); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range!= null) { if(domain!= null || range.isLocal()) { this.data.add(name); }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; Possibly
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; Toujours
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxStartIndex,  -1));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.maxStartIndex, -1));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxStartIndex,  -1));  , 
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; slated
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; Possibly
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; Possibly
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1  +  1;  }  ,this.maxMiddleIndex = index * 2 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2; Toujours
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  this.minEndIndex  +  1  :  0);  ,this.minEndIndex =(this.minEndIndex < 0? this.minEndIndex + 1 : 0);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  3;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 4; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  3;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 4; bod
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  minStartIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, minStartIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  maxEndIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, maxEndIndex + 1);
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.minMiddleIndex  =  this.minMiddleIndex  /  1;  ,this.minMiddleIndex =(this.minMiddleIndex < 0)? null : this.minMiddleIndex / 2;
compilation error,131,add,[CE] variable maxEndIndex might not have been initialized, ,int maxEndIndex =(maxEndIndex < minEndIndex)? minEndIndex : 0;
compilation error,131,add,[CE] variable maxEndIndex might not have been initialized, ,int maxEndIndex =(maxEndIndex < minEndIndex? minEndIndex : 0);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(maxStartIndex, 1);
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 3; if(this.minEndIndex >= index) { this.minEndIndex = index * 3;
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.minEndIndex >= index) { this.minEndIndex = index * 3; Possibly
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(this.minimumEndIndex!= -1)? this.minimumEndIndex : 0;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2; presumably
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  , 
compilation error,131,replace,[CE] cannot find symbol domainIndex, this.minEndIndex  =  Math.min(minMiddleIndex,  Math.max(minEndIndex,  maxEndIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, domainIndex * 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-0,  -maxMiddleIndex);  , 
compilation error,552,add,[CE] cannot find symbol, ,int index = getImmediateValue();
compilation error,552,add,[CE] cannot find symbol, ,int index = getImmediateValue(index);
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  %  2;  ,this.minEndIndex = -index % 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxEndIndex, minMiddleIndex);
compilation error,321,add,[CE] method getDataItem in class TimePeriodValues cannot be applied to given types;, ,this.minEndIndex = index * 6 + getDataItem(period).getPeriod().getEnd().getTime();
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 4; Possibly
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 5; if(this.minEndIndex < index * 2) { this.minEndIndex = index * 4;
compilation error,317,replace,[CE] illegal start of expression, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] not a statement, if(this.maxEndIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; Possibly
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,131,replace,[CE] cannot find symbol minimumMiddleIndex, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.minEndIndex);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minimumMiddleIndex);
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; Afterward
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  this.minMiddleIndex  -  1;  ,this.maxMiddleIndex = this.minMiddleIndex - 1;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3; Possibly
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  this.maxEndIndex  +  1);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxEndIndex + 1);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; presumably
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; Toujours
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  3;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 1; if(this.maxEndIndex >= index) { this.minEndIndex = index * 2;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  3;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 1; if(this.maxEndIndex >= index) { this.minEndIndex = index * 2; presumably
compilation error,131,add,[CE] ';' expected, ,this.minStartIndex = Math.min(this.minStartIndex, minStartIndex));
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 3; if(this.maxEndIndex < index + 1) { this.minEndIndex = index + 2;
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 3; if(this.maxEndIndex < index + 1) { this.minEndIndex = index + 2; slated
patch is same with buggy,321,replace,, this.minEndIndex  =  index  %  3;  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = -(this.minEndIndex + 1);
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  4)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 1; Toujours
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex));
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; & }
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(this.minimumEndIndex < 0)? this.minimumEndIndex + 1 : this.minimumEndIndex;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 5; Possibly
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  maxEndIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, range * 2);
compilation error,131,add,[CE] cannot find symbol minOf, ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, this.minOf));
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.max(this.middleIndex, 0);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.maxMiddleIndex,  this.maxStartIndex);  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; Possibly
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > 0) { this.minEndIndex = index * 2; & }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxMiddleIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, maxMiddleIndex));
compilation error,131,replace,[CE] cannot find symbol maximumMiddleIndex, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  maxMiddleIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, maximumMiddleIndex));
compilation error,317,replace,[CE] TimePeriod is abstract; cannot be instantiated, this.maxMiddleIndex  =  index  +  2  +  1;  ,index = index / 2 + 1; this.data.add(index, new TimePeriod(period, getDataItem(this.minEndIndex)));
compilation error,131,replace,[CE] ';' expected, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minMiddleIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; slated
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= 0) { this.minEndIndex = index + 1; Afterward
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 2; Possibly
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; Possibly
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  4;  }  , 
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, maxStartIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, minMiddleIndex + 1);
compilation error,332,add,[CE] possible loss of precision, ,this.maxEndIndex = getDataItem(index).getPeriod().getEnd().getTime();
compilation error,332,add,[CE] cannot find symbol Collections, ,this.maxEndIndex = -index / 4; index = Collections.binarySearch(this.data, index + 1);
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.domain  =  domain  +  1;  this.range  =  range  +  1;  }  ,if(domain!= null) { this.domain = domain + 1; if(range == null) { this.domain = domain + 1; this.range = range + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 4; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 3; Possibly
compilation error,131,add,[CE] no suitable method found for min(int,boolean), ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.minEndIndex, false));
compilation error,131,add,[CE] ';' expected, ,this.minStartIndex = Math.min(this.minStartIndex, 0));
patch is same with buggy,552,replace,, int  count  =  getMaxMiddleIndex();  ,int count = getMaxMiddleIndex();
compilation error,552,replace,[CE] missing return statement, int  count  =  getMaxMiddleIndex();  ,int count = getMaxMiddleIndex() - 1;
compilation error,131,add,[CE] cannot find symbol, ,this.minMiddleIndex = minMiddleIndex % 2 + name.length();
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  2);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 2);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(middle < maxMiddle) { this.maxMiddleIndex = index + 2; Possibly
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index) { this.minEndIndex = index + 1; EVER
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index) { this.minEndIndex = index + 1; }
increase failing tests,306,add, [FE]  Size, ,this.minMiddleIndex = index * 2 - 1;
compilation error,306,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index * 2 - 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; Possibly
patch is same with buggy,131,replace,, int  maxEndIndex  =  minEndIndex  +  2;  ,int maxEndIndex = minEndIndex + 2;
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index * 7; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index * 7; if(this.minMiddle > maxMiddle) { this.maxMiddleIndex = index * 12; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index * 2; if(this.minMiddle >= 0) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 2;!=
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  6;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,if(end < minEnd) { this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 7; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index * 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; Possibly
patch is same with buggy,130,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
patch is same with buggy,306,replace,, index  =  index  +  1;  if(middle  <  this.maxMiddleIndex)  {  this.maxMiddleIndex  =  index  +  1;  }  ,index = index + 1; if(middle < this.maxMiddleIndex) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minMiddleIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minMiddleIndex);
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.maxEndIndex =(index < 0)? 2 : index + 1;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex > 0) { this.minEndIndex = index * 3; Toujours
patch is same with buggy,131,replace,, int  minMiddleIndex  =  getMinMiddleIndex()  -  1;  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  maxEndIndex));  ,this.maxStartIndex = maxStartIndex % 2 + 1;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; Toujours
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; Possibly
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1; meanwhile
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minMiddleIndex  *  2  +  1;  ,this.minMiddleIndex = minMiddleIndex * 2 + 1;
compilation error,552,add,[CE] illegal start of expression, ,for(int i = 0, count = this.data.size(); i < this.maxMiddleIndex; i++) { if(this.data.get(i) == null) { this.data.add(i); }
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,305,replace,, if(s  >  maxMiddle  ||  s  >  -1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle || s > -1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; bodied
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex < 0) { this.minEndIndex = index * 3; definite
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,131,replace,[CE] cannot find symbol minimumEndIndex, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.minEndIndex;  ,this.minimumEndIndex =(this.minimumEndIndex < 0)? this.minimumEndIndex : 0;
compilation error,332,add,[CE] int cannot be dereferenced, ,this.maxEndIndex =(index * 12).getTime();
patch is same with buggy,332,replace,, this.minEndIndex  =  -1;  ,this.minEndIndex = -1;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; Toujours
compilation error,306,add,[CE] not a statement, ,index = index + 1; if(middle > this.maxMiddleIndex) { this.maxMiddleIndex = index; Toujours
compilation error,306,add,[CE] illegal start of expression, ,index = index + 1; if(middle < this.maxMiddleIndex) { this.maxMiddleIndex = index;
compilation error,131,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = getMinEndIndex();
compilation error,131,add,[CE] no suitable method found for min(int,int,int), ,this.minStartIndex = Math.min(1, this.minStartIndex, this.maxStartIndex);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 2; presumably
compilation error,131,add,[CE] cannot find symbol max, ,this.maxEndIndex = Math.min(this.max, this.maxMiddleIndex);
compilation error,131,add,[CE] cannot find symbol MinEndIndex, ,this.minEndIndex = Math.min(MinEndIndex, minEndIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.domain = domain; if(this.range!= range) { this.data.add(name); }
compilation error,332,replace,[CE] cannot find symbol, this.minEndIndex  =(index  -  2);  ,this.minEndIndex =(index >= 0)?(index - 1): period.getDataItem(index);
compilation error,332,replace,[CE] incompatible types, this.minEndIndex  =(index  -  2);  ,this.minEndIndex =(index << 0)?(index - 1): period.getDataItem(index);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex  -  1);  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex - 1);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] ';' expected, ,this.minEndIndex = index % 2: new TimePeriod(period, getDataItem(this.minEndIndex), end, minEnd);
compilation error,317,add,[CE] ';' expected, ,this.minEndIndex = index % 2: new TimePeriod(period, getDataItem(this.minEndIndex));
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 1; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 1; if(this.maxMiddleIndex > index) { this.minEndIndex = index * 2; Possibly
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; Toujours
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.middleIndex = -(this.minEndIndex + 1); this.maxEndIndex = -(this.maxEndIndex + 1);
compilation error,131,add,[CE] no suitable method found for abs(int,int), ,this.minMiddleIndex = Math.abs(this.minMiddleIndex, 10);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle > 0) { this.maxMiddleIndex = index + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain; } else if(range == null) { this.data.add(new ArrayList()); }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, minMiddleIndex + 1);
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 2; Toujours
compilation error,306,replace,[CE] incompatible types, if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex - e) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 3; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; Toujours
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  /  2  +  1;  ,this.minMiddleIndex = index / 2 + 1;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(middle < maxMiddle) { this.maxMiddleIndex = index - 3; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 1; slated
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  Math.min(maxEndIndex,  minStartIndex));  , 
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; Possibly
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4  -  2;  }  ,this.maxMiddleIndex = index * 4 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4  -  2;  }  ,this.maxMiddleIndex = index * 4 - 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; Toujours
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index + 1)) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 3; figured
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 3; meanwhile, this.data.add(period.getDataItem(this.minEndIndex)); }
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  <  0?  this.maxMiddleIndex  +  1  :  0);  ,return(this.maxMiddleIndex < 0? this.maxMiddleIndex + 1 : 0);
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  <  0?  this.maxMiddleIndex  +  1  :  0);  , 
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 3; definite
compilation error,131,add,[CE] cannot find symbol maxMedianIndex, ,this.maxMedianIndex = -1;
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minMiddleIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  minStartIndex));  ,this.minMiddleIndex = Math.min(minStartIndex, Math.max(minStartIndex, range));
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.maxEndIndex  =  this.minMiddleIndex  /  2;  ,this.maxEndIndex =(this.maxEndIndex < 0)? null : this.maxEndIndex / 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  0  :  minEndIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? 0 : minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  0  :  minEndIndex);  , 
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 6; Toujours
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  0));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minStartIndex, 0));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 3; >>
patch is same with buggy,130,replace,, if(domain!=  null  &&  domain.length()  >  0)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain!= null && domain.length() > 0) { this.domain = domain; this.range = range; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <=  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, if(this.maxMiddleIndex  <=  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 2; Afterward
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex);  ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex);
compilation error,131,add,[CE] <identifier> expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex).- 1;
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex), 0;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  maxMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; Possibly
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minimumEndIndex);
compilation error,552,add,[CE] method getMaxMiddleIndex in class TimePeriodValues cannot be applied to given types;, ,this.maxMiddleIndex = getMaxMiddleIndex(this.data.size() / 2);
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minStartIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? range : minStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minStartIndex);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? maxMiddleIndex : minStartIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  0));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, 0));
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(maxStartIndex,  this.minMiddleIndex);  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  <  0)?  this.maxEndIndex  +  1  :  this.maxEndIndex;  ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex + 1 : this.maxEndIndex;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  0));  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxStartIndex - 1);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 3;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2; presumably
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,310,replace,, this.minMiddleIndex  =  index  /  4;  , 
compilation error,131,add,[CE] ')' expected, ,this.maxStartIndex = Math.max(maxStartIndex, Math.max(maxStartIndex, minEndIndex * 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  this.maxStartIndex);  ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxStartIndex);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4; definite
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; Toujours
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; presumably
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  5;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  5;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index) { this.minEndIndex = index + 2;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  3;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < index) { this.minEndIndex = index + 2; Possibly
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; Toujours
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; Afterward
compilation error,317,add,[CE] incompatible types, ,this.minEndIndex = index * 2 + 1; if(this.maxMiddleIndex - index) { this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 1; slated
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(1,  this.maxEndIndex);  ,this.minEndIndex = Math.min(1, this.maxEndIndex);
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2;
patch is same with buggy,271,replace,, this.minStartIndex  =(index  >=  0)?  index  +  1  :  index;  ,this.minStartIndex =(index >= 0)? index + 1 : index;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index) { this.minEndIndex = index + 3; Toujours
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index) { this.minEndIndex = index + 3; presumably
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(10,  -1);  ,this.maxMiddleIndex = Math.min(10, -1);
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.minEndIndex =(this.minEndIndex < 0)? null : this.minEndIndex / 2;
compilation error,131,add,[CE] bad operand types for binary operator '/', ,this.minEndIndex = name / 2;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; Toujours
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; & }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minStartIndex,  maxMiddleIndex));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minStartIndex, maxMiddleIndex));
compilation error,131,add,[CE] method getMaxStartIndex in class TimePeriodValues cannot be applied to given types;, ,this.maxStartIndex = getMaxStartIndex(name);
patch is same with buggy,246,replace,, if(item.getValue()  ==  null)  {  this.data.add(item);  }  ,if(item.getValue() == null) { this.data.add(item); }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 3; if(end > minEnd) { this.minEndIndex = index * 4; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,552,add,[CE] no suitable method found for add(int), ,if(this.data!= null) { this.data.add(getMaxMiddleIndex()); } else { this.data.add(getChronology()); }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minMiddleIndex!= -1)? this.maxEndIndex : 0;
patch is same with buggy,131,replace,, this.minEndIndex  =(this.maxEndIndex  <  0)?  this.minEndIndex  +  1  :  this.maxEndIndex;  ,this.minEndIndex =(this.maxEndIndex < 0)? this.minEndIndex + 1 : this.maxEndIndex;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4; Toujours
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 5;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index) { this.minEndIndex = index + 1; & }
compilation error,131,add,[CE] cannot find symbol maximumMiddleIndex, ,this.minStartIndex = Math.min(minStartIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, maximumMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
compilation error,305,replace,[CE] ')' expected, if(s  >  maxMiddle  &&  e  >  0)  {  ,if(s > maxMiddle and& e <= -e) {
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(this.minimumEndIndex < 0? 0 : minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  maxEndIndex  :  minEndIndex);  , 
compilation error,130,add,[CE] illegal start of expression, ,if(domain == null) { if(this.domain!= null) { this.domain = domain + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain == null) { this.domain = domain + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minStartIndex, this.minStartIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4; Possibly
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4; EVER
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2!= index) { this.maxMiddleIndex = index + 2; slated
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex % 2!= index) { this.maxMiddleIndex = index + 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(maxStartIndex,  -1);  ,this.minMiddleIndex = Math.min(-3, -minEndIndex);
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 6; Toujours
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(maxEndIndex,  0);  ,this.minStartIndex = Math.min(-3, -minStartIndex);
compilation error,131,add,[CE] cannot find symbol max, ,this.maxMiddleIndex = Math.min(this.max, this.maxMiddleIndex, this.maxMiddleIndex);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  3;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  3;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; Toujours
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,332,replace,[CE] cannot find symbol, this.minEndIndex  =(index  -  1);  ,this.minEndIndex =(index == 0)?(index - 1): period.getDataItem(index);
compilation error,317,add,[CE] not a statement, ,if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; bodied
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1; meanwhile
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 + 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.minEndIndex,  this.maxEndIndex);  ,this.maxEndIndex = Math.max(this.minEndIndex, this.maxEndIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 1; Toujours
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  -1);  ,this.maxMiddleIndex = Math.max(-maxMiddleIndex, -1);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; Toujours
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5; & }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex - e) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 2; presumably
compilation error,317,replace,[CE] incompatible types, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex - minEnd) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 3; if(this.minEndIndex < 0) { this.minEndIndex = index + 2;
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 3; presumably
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 3;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 1; }
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex >= index - 1) { this.maxMiddleIndex = index - 1; Toujours
compilation error,306,add,[CE] cannot find symbol minMiddle, ,this.maxMiddleIndex = index + 3; if(middle < minMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 4; Possibly
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 4; Possibly
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(this.minEndIndex, 10);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 3; if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; meanwhile
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 3; if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; & }
compilation error,306,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index / 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minMiddleIndex, maxStartIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = minMiddleIndex / 10;
patch is same with buggy,332,replace,, this.minEndIndex  =  index  /  4;  ,this.minEndIndex = index / 4;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minStartIndex,  maxMiddleIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minStartIndex, maxMiddleIndex));
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  -1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxStartIndex, -1));
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxStartIndex,  -1));  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3;
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null) { if(this.domain!= null) { this.domain = domain; } else if(this.range!= null) { this.range = range; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) } this.maxMiddleIndex = index * 7 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,552,add,[CE] cannot find symbol count, ,return(count < 0)? getMaxMiddleIndex() : data.size();
compilation error,552,add,[CE] cannot find symbol count, ,return(count == 0)? getMaxMiddleIndex() : data.size();
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3;
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.max(minEndIndex, 1);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  2)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= index * 2) { this.minEndIndex = index * 4; Possibly
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && range.length() > 0) { if(domain.indexOf('.')> 0) { this.data.add("'"); }
compilation error,552,add,[CE] cannot find symbol, ,checkPeriod(this.data);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 2; slated
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index - 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index - 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minStartIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minStartIndex + 1);
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  *  3;  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  1)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; slated
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index + 2; if(this.minEndIndex -> index) { this.minEndIndex = index + 3; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex -> index) { this.maxMiddleIndex = index * 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2; }
patch is same with buggy,130,replace,, if(domain  ==  null  &&  range!=  null)  {  this.domain  =  domain;  this.range  =  range;  }  ,if(domain == null && range!= null) { this.domain = domain; this.range = range; }
compilation error,131,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(this.minimumEndIndex < 0)? this.minimumEndIndex + 0 : this.minimumEndIndex;
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  index  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; meanwhile
compilation error,306,replace,[CE] not a statement, if(this.minMiddleIndex  >=  index)  {  index  =  index  +  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; Afterward
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 4; meanwhile, period.setDataItem(this.minMiddleIndex); }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 2; Possibly
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(1,  this.maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(1, this.maxMiddleIndex);
compilation error,130,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.domain  =  domain  +  1;  }  ,if(this.domain!= null) { this.domain = domain; if(this.range!= range) { this.domain = domain + 1; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 2; Toujours
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2  +  1;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2  +  1;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; Possibly
compilation error,131,add,[CE] cannot find symbol lowerMinute, ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, this.lowerMinute));
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 5; if(this.maxEndIndex >= index) } this.minEndIndex = index * 5; }
patch is same with buggy,131,replace,, this.minStartIndex  =  -1;  ,this.minStartIndex = -1;
patch is same with buggy,131,replace,, this.minEndIndex  =  getMinEndIndex()  -  1;  ,this.minEndIndex = getMinEndIndex() - 1;
compilation error,131,add,[CE] no suitable method found for abs(int,int), ,this.minMiddleIndex = Math.abs(minMiddleIndex, 255);
compilation error,317,add,[CE] not a statement, ,if(this.maxMiddleIndex < index * 4 ||(index + 1)> minEnd) { this.maxMiddleIndex = index * 4; Eventually
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minEndIndex  =  Math.min(minEndIndex,  1);this.maxEndIndex  =  Math.max(maxEndIndex,  0);  ,this.minStartIndex = Math.max(this.minStartIndex, range);
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; Afterward
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; meanwhile
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 3;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3;
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; Toujours
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3; Toujours
compilation error,552,replace,[CE] missing return statement, this.maxMiddleIndex  =  getMinMiddleIndex();  ,this.maxMiddleIndex =(this.maxMiddleIndex == 0? getMaxMiddleIndex() : getMaxMiddleIndex());
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 3;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 3; presumably
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; Possibly
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(end  <  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 3; if(end < minEnd) { this.minEndIndex = index * 2; }
compilation error,131,replace,[CE] cannot find symbol middleIndex, this.minEndIndex  =  Math.min(minEndIndex,  1);this.maxEndIndex  =  Math.max(maxEndIndex,  0);  ,this.middleIndex = Math.min(minEndIndex, 0);this.maxEndIndex = Math.max(maxEndIndex, 0);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 2; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =(this.minEndIndex  +  1);  ,this.minEndIndex =(this.minEndIndex + 5);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  +  1);  ,this.minEndIndex =(this.minEndIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 2; slated
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.maxMiddleIndex  =  maxEndIndex  -  1;  ,this.maxEndIndex =(maxEndIndex < 0? range : maxEndIndex);
compilation error,317,add,[CE] cannot find symbol maxMiddlingIndex, ,this.maxMiddlingIndex = index / 3 + 1;
compilation error,131,add,[CE] variable maxMiddleIndex might not have been initialized, ,int maxMiddleIndex = maxMiddleIndex - 1;
patch is same with buggy,130,replace,, this.range  =  domain  +  6;  , 
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex - index) { this.maxMiddleIndex = index * 7; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex -> index) { this.maxMiddleIndex = index * 7; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; slated
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  255);  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, 255);
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxMiddleIndex  *  1;  , 
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex);
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 3; slated
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 3; Possibly
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  4)  {  this.maxMiddleIndex  =  index  -  4;  }  ,this.maxMiddleIndex = index + 4; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 3;
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index + 3; Toujours
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 5; Toujours
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxEndIndex >= index - 1) { this.maxMiddleIndex = index - 2;
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.maxEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; slated
compilation error,317,add,[CE] incompatible types, ,this.minEndIndex = index + 1; if(this.minEndIndex - 1) { this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxEndIndex, 1));
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  /  4;  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  getMaxEndIndex();  ,this.maxEndIndex = getMaxEndIndex();
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex * 0;
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  this.data.size())  /  2;  ,return(this.maxMiddleIndex * this.data.size())/ 2;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  4;  if(this.maxMiddleIndex  >  index)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 4; if(this.maxMiddleIndex < index) { this.minEndIndex = index * 3;
compilation error,131,add,[CE] no suitable method found for min(String,int), ,this.minEndIndex = Math.min(this.minEndIndex, Math.min(range, -1));
compilation error,131,add,[CE] cannot find symbol length, ,this.minEndIndex = Math.min(this.minEndIndex, Math.min(length, -1));
compilation error,131,add,[CE] cannot find symbol minOdIndex, ,this.minStartIndex = Math.min(minStartIndex, minOdIndex); this.maxStartIndex = Math.max(maxStartIndex, maxEndIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] not a statement, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; Toujours
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  Math.max(maxMiddleIndex,  minStartIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, Math.max(maxMiddleIndex, minStartIndex));
compilation error,131,replace,[CE] cannot find symbol token, this.minMiddleIndex  =  Math.min(-1,  -maxEndIndex);  ,this.minStartIndex = Math.min(token.min(maxStartIndex, 0));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 5; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  1;  if(this.maxMiddleIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; & }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  1;  if(this.maxMiddleIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.maxMiddleIndex >= 0) { this.minEndIndex = index * 2; presumably
compilation error,306,add,[CE] ';' expected, ,this.maxMiddleIndex = index * 4 / 2 -- maxMiddle + s.getHeaderSize();
compilation error,306,add,[CE] ';' expected, ,this.maxMiddleIndex = index * 4 / 2 -- maxMiddle + s.getWidth();
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  *  12);  ,this.maxEndIndex =(index * 12);
compilation error,552,replace,[CE] , if(this.data!=  null)  {  this.data.add( "- ");  }  else  {  this.data.add( "- ");  return  this.data.size();  }  ,if(this.data == null) { if(this.data.contains("-"); } else if this.data.add("-"); return this.data.size(); }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 5;
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxEndIndex,  1));  ,this.minMiddleIndex = this.maxMiddleIndex + 2;
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  <  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 4) { this.minEndIndex = index * 4; >>
