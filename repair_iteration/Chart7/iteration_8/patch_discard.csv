compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 5; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 5;!=
patch is same with buggy,317,replace,, if(this.minEndIndex  ==  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex == index * 2) { this.minEndIndex = index * 3; }
compilation error,317,replace,[CE] ')' expected, if(this.minEndIndex  ==  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex == index * 4; if(this.minEndIndex == index * 2) { this.minEndIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  s  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  ,this.maxMiddleIndex = index - 1; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minStartIndex, this.maxStartIndex * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minStartIndex, this.minStartIndex * 2);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  0));  , 
compilation error,131,replace,[CE] incompatible types, this.maxStartIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.minMiddleIndex =(minEndIndex >> 0? minMiddleIndex : minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minMiddleIndex,  this.maxEndIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.minMiddleIndex, this.maxEndIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 6; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) >> this.maxMiddleIndex = index * 6; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex % 2 == index) { this.minEndIndex = index + 2; if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index / 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 3) { this.minEndIndex = index + 3; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 3) { this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex < index + 1) { this.maxMiddleIndex = index + 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 3; >>
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,if(this.maxMiddleIndex > index * 6) { this.maxMiddleIndex = index * 6; >>
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxMiddleIndex,  this.maxEndIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxMiddleIndex, this.maxEndIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex == 0)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minEndIndex == 0)? this.minEndIndex : 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2  ==  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2 == 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index * 2)) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex);  ,this.minMiddleIndex = Math.max(this.minStartIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex  -  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxMiddleIndex - 1);
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && e > 0) {
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && e >> 0) {
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(-0,  -minStartIndex);  ,this.minMiddleIndex = Math.min(-0, -minEndIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  minStartIndex;  this.maxEndIndex  =  minEndIndex;  ,this.minMiddleIndex = minStartIndex; this.maxEndIndex = minEndIndex;
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  <  0)?  this.minEndIndex  +  1  :  this.minEndIndex;  ,this.minEndIndex =(this.minEndIndex < 0)? this.minEndIndex + 1 : this.minEndIndex;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index / 2 + 1; }
patch is same with buggy,130,replace,, this.maxMiddleIndex  =  minMiddleIndex  +  1;  ,this.maxMiddleIndex = minMiddleIndex + 1;
compilation error,131,add,[CE] cannot find symbol M, ,this.maxEndIndex = M.max(maxEndIndex, maxEndIndex * 2);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  this.maxEndIndex  -  1;  ,this.maxMiddleIndex = this.maxEndIndex - 1;
compilation error,131,add,[CE] ')' expected, ,this.minMiddleIndex = Math.min(math.min(middleIndex, Math.max(minMiddleIndex, -1));
compilation error,131,add,[CE] ')' expected, ,this.minMiddleIndex = Math.min(math.min(middleIndex, Math.max(-1));
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxEndIndex,  this.maxMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxEndIndex, this.maxMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 8; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 8; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex >= 0)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minEndIndex >= 0)? this.minEndIndex : 0;
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.minMiddleIndex  *  2;  ,this.maxEndIndex = this.minMiddleIndex * 2;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3; if(this.maxEndIndex > index) { this.maxMiddleIndex = index * 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index / 2 + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  maxStartIndex  *  2;  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { index = index - 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); >>
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index / 5;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3)) { this.maxMiddleIndex = index + 1; ++middle; }
increase failing tests,131,replace, [FE] ArithmeticException, this.minStartIndex  =  this.minEndIndex  +  0;  ,this.maxMiddleIndex = this.maxMiddleIndex / 0;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  20);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, 20);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex >= index) { if(middle > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,332,replace,, this.minEndIndex  =  -index  /  4;  , 
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  %  2  ==  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex % 2 == index) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 2; if(end > end) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  this.minStartIndex);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.minStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 / 2; } else { this.maxMiddleIndex = index; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4 / 2 + 1; } else { this.maxMiddleIndex = index; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.min(this.minMiddleIndex,  -1));  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 6; }
compilation error,306,add,[CE] generics are not supported in -source 1.4, ,if(this.minMiddleIndex >= 0) < this.maxMiddleIndex = index * 6; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  Math.max(this.minStartIndex,  0));  ,this.minMiddleIndex = Math.min(this.minStartIndex, Math.max(this.minStartIndex, 0));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  Math.max(minMiddleIndex,  maxStartIndex));  ,this.minEndIndex = Math.min(maxEndIndex, Math.max(minMiddleIndex, maxStartIndex));
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex < 0? 0 : minMiddleIndex);
compilation error,130,add,[CE] incompatible types, ,this.minMiddleIndex =(this.minMiddleIndex >> 0? 0 : minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 3;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; if(this.maxEndIndex >= index + 1) } this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.minEndIndex,  this.maxStartIndex);  ,this.maxMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex);
compilation error,131,add,[CE] ')' expected, ,this.minMiddleIndex = Math.min(math.min(middleIndex, Math.max(minMiddleIndex, 0));
compilation error,131,add,[CE] cannot find symbol millisecondIndex, ,this.minMiddleIndex = Math.min(millisecondIndex, Math.max(millisecondIndex, 0));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minStartIndex,  0));  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minStartIndex, 0));
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(maxEndIndex,  1);  ,this.minEndIndex = Math.min(2, -minEndIndex);
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 6 - 1; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.maxEndIndex  %  2  ==  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  +  2;  if(this.maxEndIndex  %  2  ==  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.maxEndIndex % 2 == index) { this.minEndIndex = index + 2; Possibly
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minEndIndex, minStartIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = -(this.minMiddleIndex * 12);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = -(this.maxMiddleIndex * 12);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minStartIndex, -maxStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index + 1) } this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] generics are not supported in -source 1.4, ,if(this.maxMiddleIndex >= index + 1) < this.maxMiddleIndex = index + 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minMiddleIndex,  this.minEndIndex));  ,this.minMiddleIndex = Math.max(this.minEndIndex, this.minStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index * 3; }
compilation error,131,replace,[CE] cannot find symbol, int  maxMiddleIndex  =  getMaxMiddleIndex()  -  1;  ,int maxMiddleIndex = getMinimumMiddleIndex();
patch is same with buggy,131,replace,, int  maxMiddleIndex  =  getMaxMiddleIndex()  -  1;  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(10,  1);  ,this.maxMiddleIndex = Math.max(10, 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  +  1)/(this.minMiddleIndex  +  1);  ,return(this.maxMiddleIndex + 1)/(this.minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  >=  0)?  this.maxEndIndex  :  0;  ,this.maxEndIndex =(this.maxEndIndex >= 0)? this.maxEndIndex : 0;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3;!=
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  this.minMiddleIndex));  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minEndIndex, this.minMiddleIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  this.maxEndIndex  +  1);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.maxEndIndex + 1);
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(maxMiddleIndex,  -1);  ,this.minStartIndex = Math.min(maxMiddleIndex, -1);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minStartIndex,  maxEndIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minStartIndex, maxEndIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex * 2);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex)/ 12;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex)/ 12;
compilation error,131,add,[CE] cannot find symbol min, ,this.minEndIndex = Math.min(min, this.minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 4; >>
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) } this.minEndIndex = index * 4; }
compilation error,552,add,[CE] ';' expected, ,return this.maxMiddleIndex * 2 / 2);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  maxEndIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxStartIndex, maxEndIndex));
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.minEndIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) } this.maxMiddleIndex = index * 7 + 1; }
compilation error,317,add,[CE] not a statement, ,if(end > minEnd) { this.minEndIndex = index * 5; bodied
compilation error,317,add,[CE] not a statement, ,if(end > minEnd) { this.minEndIndex = index * 5; luckily
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  minStartIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxStartIndex, minStartIndex));
increase failing tests,131,replace, [FE] ArithmeticException, this.minMiddleIndex  =  minMiddleIndex  +  0;  ,this.minMiddleIndex = minMiddleIndex / 0;
patch is same with buggy,131,replace,, this.maxEndIndex  =(maxEndIndex  <  0?  minEndIndex  :  0);  ,this.maxEndIndex =(maxEndIndex < 0? minEndIndex : 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minEndIndex, this.maxMiddleIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.min(this.minEndIndex, this.maxMiddleIndex)- 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 2; if(this.maxEndIndex > 0) { this.minEndIndex = index * 2; }
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minStartIndex,  this.maxEndIndex));  ,this.minMiddleIndex = this.maxMiddleIndex / 2 + 1;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  +  1);  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxEndIndex + 1);
increase failing tests,310,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 6 - 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  +  1;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  4);  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  4);  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1)) { this.maxMiddleIndex = index + 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.min(this.maxEndIndex, this.minMiddleIndex)- 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex < index + 1) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex < index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(index < index) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
compilation error,306,add,[CE] illegal start of expression, ,if(index < index) } index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxStartIndex,  Math.min(minMiddleIndex,  maxMiddleIndex));  ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(minMiddleIndex, maxMiddleIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  0));  ,this.minMiddleIndex = Math.min(minEndIndex, Math.max(minEndIndex, 0));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  4;  if(this.minEndIndex  >=  index  *  5)  {  this.minEndIndex  =  index  *  5;  }  , 
compilation error,131,add,[CE] cannot find symbol minMinEndIndex, ,this.minEndIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, this.minMinEndIndex));
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(0,  -maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(0, -maxMiddleIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(minEndIndex,  Math.max(minMiddleIndex,  maxEndIndex));  ,this.minStartIndex = Math.max(this.minStartIndex, this.maxStartIndex / 2);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(-maxMiddleIndex, -minEndIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(-minMiddleIndex, -minEndIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(-minMiddleIndex, -minEndIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.minMiddleIndex)/  1;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)/ 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(minEndIndex  <  0?  0  :  minEndIndex);  ,this.maxMiddleIndex =(minEndIndex < 0? 0 : minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(minEndIndex  <  0?  0  :  minEndIndex);  ,this.maxMiddleIndex =(minEndIndex < 0? 0 : minEndIndex);
compilation error,317,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index % 3;
patch is same with buggy,131,replace,, int  maxMiddleIndex  =  this.minEndIndex  -  1;  ,int maxMiddleIndex = this.minEndIndex - 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(minMiddleIndex, minEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex > 0)? this.maxEndIndex : 0;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(1,  -maxStartIndex);  ,this.minMiddleIndex = Math.min(0, -minStartIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(1,  -maxStartIndex);  ,this.minMiddleIndex = Math.min(0, -minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  minMiddleIndex  +  1);  ,this.maxEndIndex = Math.max(maxEndIndex, minMiddleIndex + 1);
compilation error,131,add,[CE] no suitable method found for min(String,int), ,this.minStartIndex = Math.min(minStartIndex, Math.min(range, 0));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(10, Math.min(10, 0));
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =(index  %  2);  ,this.minEndIndex =(index % 2 + 1);
patch is same with buggy,332,replace,, this.minEndIndex  =(index  %  2);  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  6;  }  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxStartIndex,  Math.max(minMiddleIndex,  maxEndIndex));  ,this.minEndIndex = Math.min(maxStartIndex, Math.max(minMiddleIndex, maxEndIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, int  minEndIndex  =  this.minEndIndex  +  1;  ,int minEndIndex = this.minEndIndex + 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex == 0)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.minMiddleIndex == 0)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minEndIndex, this.maxEndIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(index >= 0) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index << 4)? 4 : index + 1;
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 4)? 4 : index + 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  >  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex > 0) { this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,131,replace,[CE] incompatible types for ?: neither is a subtype of the other, this.minEndIndex  =(this.minEndIndex  <  0)?  this.minEndIndex  :  this.minEndIndex;  ,this.minEndIndex =(this.minEndIndex < 0)? this.minEndIndex : new Integer(this.maxEndIndex);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 1; }
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 0)? 0 : index;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxEndIndex - 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  getMinStartIndex();  , 
patch is same with buggy,131,replace,, int  minMiddleIndex  =(this.minMiddleIndex  +  1);  ,int minMiddleIndex =(this.minMiddleIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minEndIndex)+ 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)+ 1;
increase failing tests,130,replace, [FE] ArithmeticException, this.minMiddleIndex  =  minMiddleIndex  +  0;  ,this.minMiddleIndex = minMiddleIndex / 0;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.minStartIndex,  this.minEndIndex);  ,this.maxMiddleIndex = Math.max(this.minStartIndex, this.minEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxEndIndex > 0)? this.maxEndIndex - 1 : 0;
patch is same with buggy,306,replace,, if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
patch is same with buggy,131,replace,, this.maxStartIndex  =  maxStartIndex  *  2  +  1;  ,this.maxStartIndex = maxStartIndex * 2 + 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxMiddleIndex,  minEndIndex);  ,this.maxEndIndex = Math.max(maxMiddleIndex, minEndIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  this.minEndIndex  +  1);  ,this.minEndIndex = Math.min(minEndIndex, this.minEndIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  *  1);  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(maxStartIndex,  -1);  ,this.minStartIndex = Math.min(maxStartIndex, -1);
patch is same with buggy,131,replace,, this.minEndIndex  =(minEndIndex  <  0)?  maxEndIndex  :  minEndIndex;  ,this.minEndIndex =(minEndIndex < 0)? maxEndIndex : minEndIndex;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) } this.maxMiddleIndex = index * 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  minEndIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, minEndIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index)  {  this.minEndIndex  =  index  *  3;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  <  index  *  5)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex < index * 5) { this.minEndIndex = index * 5; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minMiddleIndex,  this.maxEndIndex));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minMiddleIndex, this.maxEndIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  this.maxStartIndex));  ,this.minEndIndex = Math.min(this.minMiddleIndex, Math.max(this.minEndIndex, this.maxStartIndex));
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = Math.max(minMiddleIndex, maxMiddleIndex);
compilation error,131,add,[CE] cannot find symbol min, ,this.minMiddleIndex = Math.max(this.min, this.minEndIndex, this.maxMiddleIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  +  2);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex - 2);
compilation error,317,add,[CE] not a statement, ,if(this.maxEndIndex >= index) { this.minEndIndex = index * 5; bodied
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  3;  if(this.minMiddleIndex  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  maxMiddleIndex  %  2;  ,this.minMiddleIndex = maxMiddleIndex % 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  minEndIndex  +  1);  ,this.minMiddleIndex = Math.max(minEndIndex, minStartIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minEndIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minEndIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex)-  1;  ,this.maxMiddleIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)- 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex)-  1;  , 
compilation error,131,add,[CE] no suitable method found for max(int), ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(-1));
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minEndIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minEndIndex + 1);
compilation error,131,add,[CE] incompatible types for ?: neither is a subtype of the other, ,this.minEndIndex =(minEndIndex < 0)? domain : minEndIndex;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 5;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4 / 2; >>
compilation error,306,add,[CE] incompatible types, ,if(this.minMiddleIndex >> index) { this.maxMiddleIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 - 2)) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 - 2) { this.maxMiddleIndex = index * 4; >>
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  this.minEndIndex  +  0;  ,this.minEndIndex =(this.maxEndIndex + 2);
compilation error,131,add,[CE] incompatible types, ,this.minMiddleIndex =(minMiddleIndex >> 0? minMiddleIndex : 0);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxEndIndex,  -2));  ,this.minMiddleIndex =(this.minEndIndex < 0)? 0 : this.minEndIndex / 2;
patch is same with buggy,131,replace,, if(this.minMiddleIndex  >  minEndIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  }  ,if(this.minMiddleIndex > minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex); }
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index + 2) { this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxStartIndex, this.maxEndIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  this.minMiddleIndex  +  1);  ,this.minStartIndex = Math.min(this.minEndIndex, this.minMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minEndIndex)-  1;  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minEndIndex)- 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; >>
increase failing tests,321,replace, [FE]  Size, this.minEndIndex  =  index  *  6  -  1;  ,this.minEndIndex = index * 4 - 1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  7;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  7;  }  ,this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 7; }
compilation error,306,add,[CE] ')' expected, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index 1) { this.maxMiddleIndex = index * 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxEndIndex,  0));  ,this.minMiddleIndex =(this.maxMiddleIndex > 0)? this.maxMiddleIndex : 0;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; }
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index >> 1)? index : index + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(maxEndIndex,  1);  ,this.minMiddleIndex = Math.min(maxEndIndex, 1);
compilation error,130,add,[CE] illegal start of expression, ,this.minMiddleIndex = --;
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex = -2;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  maxEndIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, maxEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minEndIndex, minEndIndex + 1);
increase failing tests,310,replace, [FE]  Size, this.maxMiddleIndex  =  index  *  4  -  1;  ,this.minMiddleIndex = index * 3 - 1;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxMiddleIndex,  this.minEndIndex));  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1;!=
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2  +  1;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2  +  1;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex >= index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(minMiddleIndex, -minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(minEndIndex, -minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(-minEndIndex, -maxStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(-minStartIndex, -minEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxStartIndex,  maxStartIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxStartIndex, maxStartIndex));
increase failing tests,271,replace, [FE] AssertionFailedError, this.minStartIndex  =(index  >  1)?  index  -  1  :  index;  ,this.minStartIndex =(index < 1)? index - 1 : index;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 2)) { this.minEndIndex = index + 1; }
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex + 1;
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minMiddleIndex + 1;
patch is same with buggy,271,replace,, this.minStartIndex  =(index  <  0)?  index  +  1  :  index;  ,this.minStartIndex =(index < 0)? index + 1 : index;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4;
compilation error,306,add,[CE] incompatible types, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >> 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, int  maxEndIndex  =  minEndIndex  -  1;  ,int maxEndIndex = minEndIndex - 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, int  minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  , 
compilation error,321,add,[CE] possible loss of precision, ,this.maxEndIndex = index * 7 + getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minStartIndex, minEndIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(1, -minStartIndex);
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  2  :  0;  ,this.maxEndIndex =(index < 0)? 2 : 0;
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  <  0)?  2  :  0;  ,this.maxEndIndex =(index < 1)? 2 : 0;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  10);  ,this.minMiddleIndex = Math.min(this.minEndIndex, 10);
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  +  3  +  1;  }  ,this.minEndIndex = index + 3; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; Possibly
compilation error,317,replace,[CE] not a statement, if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index) { this.minEndIndex = index + 3; Possibly
increase failing tests,321,replace, [FE] AssertionFailedError, this.minEndIndex  =(index  <=  4)?  4  :  index;  ,this.minEndIndex =(index < 0)? 4 : index + 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.maxEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; if(this.maxEndIndex >= index - 1) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minEndIndex));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, this.minEndIndex));
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 0)? 4 : index + 1;
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index >> 0)? 4 : index + 1;
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; >>
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; figured
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.min(maxEndIndex,  minStartIndex));  ,this.minStartIndex = Math.min(minStartIndex, Math.min(maxEndIndex, minStartIndex));
patch is same with buggy,552,replace,, this.minMiddleIndex  =  getMaxMiddleIndex();  ,this.minMiddleIndex = getMaxMiddleIndex();
compilation error,552,replace,[CE] missing return statement, this.minMiddleIndex  =  getMaxMiddleIndex();  ,this.minMiddleIndex = getMinMiddleIndex();
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  minStartIndex  +  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, minStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4;!=
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  maxStartIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, maxStartIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  Math.min(maxStartIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(maxStartIndex, minEndIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(minStartIndex,  -1);  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  Math.max(this.minMiddleIndex,  0));  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.max(this.minMiddleIndex, 0));
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  ==  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= 0) { this.minEndIndex = index * 3;
patch is same with buggy,131,replace,, int  minEndIndex  =  minMiddleIndex  +  1;  ,int minEndIndex = minMiddleIndex + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 3; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.miniEndIndex >= index) { this.minEndIndex = index + 3; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index - 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index - 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index - 2; }
compilation error,332,replace,[CE] illegal start of expression, this.minEndIndex  =  -index  /  4;  ,this.maxEndIndex = % 4;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxStartIndex,  maxStartIndex);  ,this.minStartIndex = Math.min(minStartIndex, minMiddleIndex); this.maxEndIndex = Math.max(maxStartIndex, maxStartIndex);
patch is same with buggy,130,replace,, this.maxStartIndex  =  -1;  ,this.maxStartIndex = -1;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  7;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  7;  }  ,this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 7; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(minStartIndex,  minEndIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(minStartIndex, minEndIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6;!=
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  -  2;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  4;  if(this.maxEndIndex  >  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 4; if(this.maxEndIndex > 0) { this.minEndIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex % 2 == index) } this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  1);  ,this.minMiddleIndex = Math.min(minStartIndex, 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minMiddleIndex > 0)? this.minEndIndex : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.maxStartIndex * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.minEndIndex = index * 2; if(this.minMiddleIndex >= index) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.min(maxStartIndex,  minEndIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.min(maxStartIndex, minEndIndex));
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = Math.min(minMiddleIndex, minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 2) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  +  1);  ,this.maxMiddleIndex =(this.maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.minMiddleIndex,  this.maxStartIndex);  ,this.maxStartIndex = Math.max(this.minMiddleIndex, this.maxStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxEndIndex,  this.maxStartIndex);  ,this.maxMiddleIndex = Math.min(this.maxEndIndex, this.maxStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 2) { this.minEndIndex = index * 4; >>
compilation error,317,add,[CE] not a statement, ,if(this.minMiddleIndex >= index) { this.minEndIndex = index * 2; figured
compilation error,317,add,[CE] ';' expected, ,if(this.minMiddleIndex >= index) { this.minEndIndex = index * 2; luckily(this.maxMiddleIndex >= index) { this.minEndIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index; >>
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index;!=
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = -minMiddleIndex; this.maxEndIndex = -maxEndIndex;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(1,  -maxStartIndex);  ,this.maxMiddleIndex = Math.max(1, -maxStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 6 - 1; >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 5 - 2; >>
compilation error,131,replace,[CE] cannot find symbol minContiguousIndex, this.minStartIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  minEndIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, this.minContiguousIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = -(this.minEndIndex + 3);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxMiddleIndex,  this.maxStartIndex  -  1);  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  minStartIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, minStartIndex + 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.minEndIndex =(index < 0)? 2 : index + 1;
increase failing tests,321,replace, [FE] AssertionFailedError, this.minEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.minEndIndex =(index < 0)? 2 : 1;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, 1));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 5; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 4;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minEndIndex,  minMiddleIndex));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minEndIndex, minMiddleIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minStartIndex, minStartIndex - 1);
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  }  ,if(domain!= null) { this.domain = domain + 1; } else { this.range = range + 1; }
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain  +  1;  }  else  {  this.range  =  range  +  1;  }  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 3; }
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minMiddleIndex + 2);
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(this.minMiddleIndex, this.maxEndIndex + 2);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(this.maxMiddleIndex, this.maxEndIndex + 2);
compilation error,131,replace,[CE] cannot find symbol minContiguous, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minEndIndex));  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, Math.max(this.maxMiddleIndex, this.minContiguous));
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxStartIndex,  -1);  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.maxEndIndex,  this.maxStartIndex);  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(0,  0);  ,this.minMiddleIndex = Math.max(0, 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  1);  ,this.minMiddleIndex = Math.min(minStartIndex, 1);
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(2,  this.minStartIndex);  ,this.maxEndIndex = Math.max(1, this.maxMiddleIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > 0) } this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex % 2 == index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minMiddleIndex,  minStartIndex));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minMiddleIndex, minStartIndex));
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minStartIndex = Math.min(this.minEndIndex, this.maxEndIndex + 1);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,130,replace,, if(domain  ==  null)  {  this.domain  =  domain  +  1;  }  else  {  this.domain  =  domain  +  1;  this.range  =  range  +  1;  }  ,if(domain == null) { this.domain = domain + 1; } else { this.domain = domain + 1; this.range = range + 1; }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.max(0,  -maxMiddleIndex);  ,this.minMiddleIndex = Math.min(2, -minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(middle < maxMiddle)) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(10, minMiddleIndex));
compilation error,317,replace,[CE] not a statement, if(this.maxEndIndex  %  2  ==  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex >= index) { this.minEndIndex = index + 3; Possibly
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 2; if(this.minEndIndex < index) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 2; if(this.minEndIndex < index) } this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1)) { this.minEndIndex = index + 2; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(2, -1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  this.minMiddleIndex));  ,this.minMiddleIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, this.minMiddleIndex));
patch is same with buggy,131,replace,, this.maxEndIndex  =  this.maxMiddleIndex  *  2;  ,this.maxEndIndex = this.maxMiddleIndex * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 7; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 7; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 4; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 7; if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 8; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  *  1);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.minMiddleIndex - 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxEndIndex  *  1);  ,this.minStartIndex = Math.min(this.minStartIndex, this.minMiddleIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxEndIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minEndIndex, this.maxEndIndex - 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(0,  this.minMiddleIndex);  ,this.minMiddleIndex = Math.min(0, this.minMiddleIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minStartIndex, this.minEndIndex - 1);
compilation error,321,replace,[CE] incompatible types, this.minEndIndex  =(index  <=  4)?  4  :  index;  ,this.minEndIndex =(index >> 0)? 2 : index;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 7 + 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  getMinMiddleIndex();  , 
compilation error,131,add,[CE] incompatible types, ,int minEndIndex = -(this.minEndIndex + 1); this.range = new ArrayList();
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  255);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, 255);
compilation error,131,replace,[CE] cannot find symbol minContiguousIndex, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minEndIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, this.minContiguousIndex * 2);
compilation error,131,add,[CE] ')' expected, ,this.minMiddleIndex = Math.min(math.min(minMiddleIndex, Math.max(minMiddleIndex, minMiddleIndex));
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(minMiddleIndex,  Math.min(minStartIndex,  minEndIndex));  ,this.minMiddleIndex = Math.max(minMiddleIndex, Math.min(minStartIndex, minEndIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex)/ 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.min(maxMiddleIndex,  minEndIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.min(maxMiddleIndex, minEndIndex));
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(maxEndIndex,  this.minMiddleIndex);  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxMiddleIndex,  this.maxStartIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxMiddleIndex, this.maxStartIndex + 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2!=  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2!= 0) { this.minEndIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  %  2!=  0)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex % 2!= 0) { this.minEndIndex = index + 2;
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 0)? 4 : index;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > index - 1)) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <=  0)?  0  :  index  +  1;  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(minMiddleIndex,  Math.min(maxMiddleIndex,  maxStartIndex));  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(0,  0);  ,this.minEndIndex = Math.min(0, 0);
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minEndIndex));  ,this.maxEndIndex = Math.min(maxEndIndex, range * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(10, minEndIndex * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(10, minMiddleIndex * 2);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxMiddleIndex,  1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxMiddleIndex, 1));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minMiddleIndex));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, this.minMiddleIndex));
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >= index) { if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex == index) { if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex);
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex = maxMiddleIndex + 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(minStartIndex,  -minStartIndex);  ,this.minStartIndex = Math.min(-0, -minStartIndex);
compilation error,131,add,[CE] cannot find symbol, ,this.minEndIndex =(minEndIndex < 0)? domain.getMinimumDimensions() : minEndIndex;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxStartIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex)+ 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minEndIndex, this.maxStartIndex)+ 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex)+ 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxEndIndex)+ 1;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  1));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, 1));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.minEndIndex = index + 2; >>
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 2 + 1; if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4 - 2; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxMiddleIndex,  this.maxMiddleIndex  +  1);  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minStartIndex,  0));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minStartIndex, 0));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 2; >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex < index + 1) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex - 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  minEndIndex  +  1);  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, minEndIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 3;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxEndIndex,  -2));  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex - 1);
compilation error,131,add,[CE] no suitable method found for max(int,int,int), ,this.minEndIndex = Math.max(this.minEndIndex, Math.min(this.minEndIndex, this.maxEndIndex), 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  minStartIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, minStartIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(this.minStartIndex,  this.minMiddleIndex)/  1;  ,this.minStartIndex = Math.min(this.minStartIndex, this.minMiddleIndex)/ 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(this.minStartIndex,  this.minMiddleIndex)/  1;  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.minStartIndex)/ 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(1, 0);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minStartIndex);  ,this.minStartIndex = Math.min(minStartIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > index) } this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 4;
compilation error,130,replace,[CE] bad operand types for binary operator '-', this.range  =  range  +  6;  ,this.range = range - 1;
compilation error,131,add,[CE] cannot find symbol middleIndex, ,this.minMiddleIndex = Math.min(-middleIndex, 0);
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  /  2;  ,this.minMiddleIndex = index / 2;
increase failing tests,317,replace, [FE]  Size, this.minMiddleIndex  =  index  /  2;  ,this.minMiddleIndex = index * 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 3;
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 6; }
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex * 2;
compilation error,131,add,[CE] variable minEndIndex might not have been initialized, ,int minEndIndex = minEndIndex * 2 + 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex  *  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minStartIndex / 2);
compilation error,317,replace,[CE] ')' expected, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.minEndIndex > index) { if(this.maxMiddleIndex = index * 3; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.max(maxEndIndex,  -1));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.max(maxEndIndex, -1));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.maxMiddleIndex = index - 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 4) { this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] not a statement, ,if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 2; figured
compilation error,131,add,[CE] cannot find symbol maxMaxMiddleIndex, ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMaxMiddleIndex = Math.max(maxMiddleIndex, minEndIndex);
increase failing tests,306,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  index  +  1;  if(middle  >  this.maxMiddleIndex)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(middle > this.minMiddleIndex) { this.maxMiddleIndex = index + 1; }
increase failing tests,306,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  index  +  1;  if(middle  >  this.maxMiddleIndex)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(middle < this.minMiddleIndex) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minMiddleIndex)/ 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  , 
patch is same with buggy,130,replace,, this.maxEndIndex  =  -1;  ,this.maxEndIndex = -1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.maxStartIndex  +  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.maxStartIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 2; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(minStartIndex,  maxEndIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(minStartIndex, maxEndIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 2) { this.minEndIndex = index + 3; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 2) } this.minEndIndex = index + 3; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  minEndIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, minEndIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.minMiddleIndex)/  1;  , 
increase failing tests,131,replace, [FE] ArithmeticException, this.minStartIndex  =  this.minMiddleIndex  +  0;  ,this.minStartIndex = this.minMiddleIndex / 0;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index - 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  %  2;  ,this.maxMiddleIndex = index % 2;
patch is same with buggy,131,replace,, this.maxEndIndex  =  minEndIndex  *  2;  ,this.maxEndIndex = minEndIndex * 2;
compilation error,332,replace,[CE] incompatible types, this.minEndIndex  =(index  *  1);  ,this.minEndIndex =(index << 0)?(index + 1): index;
patch is same with buggy,332,replace,, this.minEndIndex  =  index;  ,this.minEndIndex = index;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 5; if(this.maxEndIndex >= index) { this.minEndIndex = index * 4; }
compilation error,306,add,[CE] ';' expected, ,if(e > maxMiddle) { long minStart = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); e = getDataItem(this.minMiddleIndex).getPeriod().getEnd()
compilation error,306,add,[CE] ';' expected, ,if(e > maxMiddle) { long minStart = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); if(middle > maxMiddle) { this.maxMiddleIndex = index - 1; e = get
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 3; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minMiddleIndex  *  2;  ,this.minEndIndex = this.minMiddleIndex * 2;
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.domain = domain + 1; if(this.range!= range) { this.range = range + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.domain = domain + 2; if(this.range!= range) { this.range = range + 1; }
compilation error,130,add,[CE] illegal start of expression, ,if(this.domain!= domain) { this.domain = domain + 1; if(this.range!= range) { this.domain = domain + 1; }
increase failing tests,131,replace, [FE]  Size, this.minMiddleIndex  =  Math.max(this.minMiddleIndex,  this.minMiddleIndex)/  1;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)+ 2;
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(2,  0);  ,this.minMiddleIndex = Math.min(1, 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, minStartIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  this.maxEndIndex  *  1;  ,this.minMiddleIndex = this.maxEndIndex * 2;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  this.minStartIndex));  ,this.minStartIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, this.minStartIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(0,  this.minStartIndex);  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1) { this.maxMiddleIndex = index + 1; >>
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  /  4;  }  ,if(this.maxMiddleIndex >= index / 4)) { this.maxMiddleIndex = index / 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(middle < maxMiddle)) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2; >>
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =(this.minEndIndex  *  1);  ,this.minMiddleIndex =(this.minMiddleIndex * 2);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(10, 2);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(maxMiddleIndex, 1);
increase failing tests,131,replace, [FE] ArithmeticException, this.minStartIndex  =  this.minStartIndex  +  0;  ,this.minStartIndex = this.minStartIndex / 0;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(minEndIndex  <  0?  maxMiddleIndex  :  minEndIndex);  ,this.maxMiddleIndex =(minEndIndex < 0? maxMiddleIndex : minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex < 0) { this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 2; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7  +  1;  }  ,this.maxMiddleIndex = index * 7 + 1; if(this.maxMiddle > maxMiddle) {
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  -(this.maxMiddleIndex  *  10);  ,this.maxMiddleIndex = -(this.maxMiddleIndex * 10);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(-3, -minStartIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minStartIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minStartIndex, minMiddleIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
compilation error,131,replace,[CE] cannot find symbol minMinStartIndex, this.minMiddleIndex  =  Math.min(minStartIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minMiddleIndex = Math.min(minMinStartIndex, minMiddleIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minEndIndex - 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minEndIndex  *  2;  ,this.minEndIndex = this.minEndIndex * 2;
increase failing tests,332,replace, [FE] AssertionFailedError, this.minEndIndex  =(index  *  12);  ,this.maxEndIndex =(index * 2)+ 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.minMiddleIndex < 0) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  6;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  *  5;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 5; >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.maxMiddleIndex - 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  %  2!=  0)?  this.minEndIndex  +  1  :  this.minEndIndex;  ,this.minEndIndex =(this.minEndIndex % 2!= 0)? this.minEndIndex + 1 : this.minEndIndex;
patch is same with buggy,131,replace,, int  minEndIndex  =  this.minMiddleIndex  +  1;  ,int minEndIndex = this.minMiddleIndex + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  this.maxStartIndex  +  1);  ,this.minEndIndex = Math.max(this.minEndIndex, this.maxStartIndex + 1);
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 2) { this.minEndIndex = index + 1; >>
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex)/ 2;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  this.minStartIndex));  ,this.minStartIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, this.minStartIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 3; if(middle > maxMiddle) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 5) { this.maxMiddleIndex = index * 5; >>
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(maxEndIndex,  minMiddleIndex));  ,this.minMiddleIndex = Math.min(minStartIndex, range * 1);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,if(this.maxMiddleIndex % 2 == index) { this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex % 2 == index) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  Math.min(maxEndIndex,  -1));  ,this.minEndIndex = Math.min(maxEndIndex, Math.min(maxEndIndex, -1));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 2) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex > index - 2) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,130,replace,, this.maxEndIndex  =  this.maxMiddleIndex  +  1;  ,this.maxEndIndex = this.maxMiddleIndex + 1;
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 3;
patch is same with buggy,131,replace,, this.minStartIndex  =  this.minStartIndex  *  1;  , 
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 4) { this.minEndIndex = index * 4; figured
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minEndIndex, minEndIndex - 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(1,  -maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(1, -maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minStartIndex,  this.maxEndIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.minStartIndex, this.maxEndIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 7; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 7; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 7; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(10,  maxStartIndex);  ,this.minStartIndex = Math.min(10, maxStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 2; if(this.minEndIndex > index) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 2; if(this.minEndIndex > index) } this.minEndIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 4) { this.minEndIndex = index * 2; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  4)  {  this.minEndIndex  =  index  *  2;  }  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.max(this.minStartIndex,  Math.max(this.maxMiddleIndex,  0));  ,this.maxStartIndex = Math.max(this.minEndIndex, Math.max(this.maxStartIndex, 0));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.maxStartIndex,  this.minMiddleIndex);  , 
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(maxEndIndex, Math.max(maxEndIndex, 10));
patch is same with buggy,131,replace,, this.minEndIndex  =  this.maxMiddleIndex  -  1;  ,this.minEndIndex = this.maxMiddleIndex - 1;
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 4 ||(index + 1)> minEnd) { this.maxMiddleIndex = index * 4;
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > maxEnd) { this.minEndIndex = index * 5; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minStartIndex,  this.minMiddleIndex);  ,this.minMiddleIndex = Math.max(this.minStartIndex, this.minMiddleIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex!=  0)?  this.maxEndIndex  :  0;  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(middle > this.maxMiddleIndex) { this.maxMiddleIndex = index + 1; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex  +  1);  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxMiddleIndex + 1);
compilation error,131,replace,[CE] cannot find symbol minReturnIndex, this.minMiddleIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  0));  ,this.maxStartIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxEndIndex, this.minReturnIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 1) { this.maxMiddleIndex = index * 2;!=
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,if(this.maxMiddleIndex >= 3)) { this.maxMiddleIndex = index + 1; ++e; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  Math.min(this.minMiddleIndex,  this.minEndIndex));  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(this.minMiddleIndex, this.minEndIndex));
compilation error,131,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = Math.min(this.minimumMiddleIndex, 100);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.maxEndIndex = Math.max(this.minEndIndex, this.maxEndIndex + 1);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(-minMiddleIndex, -maxStartIndex);
increase failing tests,131,replace, [FE]  Size, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  this.maxStartIndex));  ,this.maxEndIndex = Math.max(10, maxEndIndex * 1);
compilation error,317,replace,[CE] illegal start of expression, if(this.maxEndIndex  >  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex < index) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex < index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxEndIndex,  -minStartIndex);  ,this.maxMiddleIndex = Math.max(-maxEndIndex, -minStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex == index * 2) } this.minEndIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,if(this.maxMiddleIndex < index * 6) { this.maxMiddleIndex = index * 6; >>
compilation error,131,replace,[CE] cannot find symbol startIndex, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  Math.min(this.maxMiddleIndex,  minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.startIndex, this.maxEndIndex));
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,if(index > 0) { if(index < index) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index * 6; >>
increase failing tests,131,replace, [FE]  Size, this.minStartIndex  =  Math.min(-1,  -1);  ,this.minStartIndex = Math.min(1, 1);
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minStartIndex,  this.maxEndIndex));  ,this.minMiddleIndex = this.minMiddleIndex / 10 + 1;
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minStartIndex,  this.maxEndIndex));  ,this.minEndIndex = this.minEndIndex / 10 + 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.minMiddleIndex < index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index * 3 / 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.maxStartIndex * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.maxMiddleIndex * 2);
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  <=  2)?  2  :  index;  ,this.maxEndIndex =(index < 2)? 2 : index + 1;
patch is same with buggy,317,replace,, index  =  index  *  2  +  1;  , 
compilation error,317,replace,[CE] not a statement, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; Possibly
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >=  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= index * 4) { this.minEndIndex = index * 4; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >=  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= index * 4) { this.minEndIndex = index * 4; fiance
compilation error,305,add,[CE] illegal start of expression, ,if(e > maxMiddle && e >= 0) {
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.maxEndIndex  =  Math.min(maxEndIndex,  maxEndIndex  *  1);  ,this.maxEndIndex = Math.min(maxEndIndex, range * 1);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(0,  -1);  ,this.maxEndIndex = Math.max(0, -1);
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(0,  -1);  ,this.maxEndIndex = Math.max(1, -1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex * 10);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 2; }
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(maxEndIndex, Math.max(maxEndIndex, 1));
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2 + 1; }
compilation error,130,add,[CE] bad operand types for binary operator '!=', ,if(domain!= null) { this.domain = domain; } else if(range!= 0) { this.range = range + 1; }
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index * 5; lash
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  Math.max(maxMiddleIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, Math.max(maxMiddleIndex, minEndIndex));
compilation error,131,replace,[CE] cannot find symbol minConstants, this.minEndIndex  =  Math.min(minEndIndex,  maxEndIndex  *  2);this.maxEndIndex  =  Math.min(maxEndIndex,  minEndIndex  *  2);  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, this.minConstants));
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex > index - 1) } this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.maxMiddleIndex = index / 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > maxEnd) { this.maxMiddleIndex = index / 6; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex * 10;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex * 100;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex * 11;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < 0) { this.minEndIndex = index + 3; }
compilation error,317,add,[CE] not a statement, ,this.minEndIndex = index * 4; meanwhile
compilation error,332,add,[CE] illegal start of expression, ,this.minEndIndex = % 4;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.minStartIndex,  Math.max(this.maxMiddleIndex,  0));  ,this.maxMiddleIndex = Math.max(this.minStartIndex, Math.max(this.maxMiddleIndex, 0));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.minEndIndex = index * 2; >>
compilation error,317,add,[CE] incompatible types, ,if(this.maxMiddleIndex >> index) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= index + 2) { this.maxMiddleIndex = index + 2;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex > index) { this.minEndIndex = index + 2; if(this.maxEndIndex < index) { this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxEndIndex,  this.minMiddleIndex);  ,this.maxStartIndex = Math.max(this.maxEndIndex, this.minMiddleIndex);
patch is same with buggy,317,replace,, if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 2)) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >  index)  {  this.minEndIndex  =  index  +  1;  }  , 
patch is same with buggy,131,replace,, int  maxStartIndex  =  minEndIndex  +  1;  ,int maxStartIndex = minEndIndex + 1;
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index >> 0)? 2 : index;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  7;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  6;  }  ,this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 6; }
increase failing tests,321,replace, [FE] AssertionFailedError, this.minEndIndex  =  index  *  6  -  1;  ,this.minEndIndex = index * 7 + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,this.maxMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,this.maxMiddleIndex = index + 1; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
patch is same with buggy,317,replace,, if(this.minMiddleIndex  >=  index)  {  this.minMiddleIndex  =  index  /  2  +  1;  }  ,if(this.minMiddleIndex >= index) { this.minMiddleIndex = index / 2 + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minMiddleIndex * 2;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(maxStartIndex,  minEndIndex));  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxStartIndex,  this.maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minEndIndex  *  2;  ,this.minEndIndex = this.minEndIndex * 2;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index + 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex  -  1);  ,this.maxStartIndex = Math.max(this.minMiddleIndex, 0);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 6; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index * 5; if(this.minEndIndex >= index) { this.minEndIndex = index * 6; }
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  *  4  /  2  +  1;  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  3);  ,this.minMiddleIndex = Math.min(this.minStartIndex, 3);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >=  index)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex >= index) { this.minEndIndex = index * 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(-maxMiddleIndex,  -1);  ,this.minMiddleIndex = Math.min(-maxMiddleIndex, 0);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2 + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index / 2 + 1; }
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 0)? 4 : index;
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  index  *  6  -  1;  ,this.maxEndIndex = index * 3 + 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex <= 0) } this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 4;
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7; >>
patch is same with buggy,131,replace,, this.minMiddleIndex  =  maxMiddleIndex  *  2  +  1;  ,this.minMiddleIndex = maxMiddleIndex * 2 + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index - 2; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5  -  2;  }  ,if(this.maxMiddleIndex > index * 5 - 2)) { this.maxMiddleIndex = index * 5 - 2; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = -(this.minMiddleIndex * 10);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = -(this.maxMiddleIndex * 10);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex =(this.minMiddleIndex + 2);
compilation error,317,replace,[CE] ')' expected, if(this.minEndIndex  ==  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,if(this.minEndIndex == index * 4; if(this.minEndIndex == index * 3) { this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  2)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 3; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2  +  1;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex < index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2  +  1;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex < index) { this.maxMiddleIndex = index + 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2  -  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2 - 1; }
patch is same with buggy,131,replace,, this.maxStartIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxStartIndex =(minEndIndex < 0? maxEndIndex : minEndIndex);
patch is same with buggy,131,replace,, this.maxStartIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex >= 0)? this.minMiddleIndex : 0;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.min(maxMiddleIndex,  minEndIndex);  ,this.maxStartIndex = Math.min(maxMiddleIndex, minEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minEndIndex, this.maxStartIndex)- 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2 + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex > 0? this.minMiddleIndex : 0);
compilation error,131,add,[CE] incompatible types, ,this.minMiddleIndex =(this.minMiddleIndex >> 0? this.minMiddleIndex : 0);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 6; if(end > minEnd) { this.minEndIndex = index * 7; }
compilation error,317,replace,[CE] ')' expected, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  <  index  *  1)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index 1) { this.minEndIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 5; }
patch is same with buggy,332,replace,, this.minEndIndex  =(index  +  1)/  2  -  1;  ,this.minEndIndex =(index + 1)/ 2 - 1;
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 0)? 2 : index + 1;
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex =(index < 0)? 2 : index + 1;
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =(index  -  2)/  2  +  1;  ,this.minEndIndex =(index * 2)/ 2 + 1;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  minEndIndex  *  1;  ,this.minStartIndex = minEndIndex * 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  0);  ,this.minEndIndex = Math.min(this.minMiddleIndex, 0);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxEndIndex  <  0?  0  :  minEndIndex);  ,this.maxMiddleIndex =(maxEndIndex < 0? 0 : minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxStartIndex,  this.minEndIndex);  ,this.maxMiddleIndex = Math.max(this.maxStartIndex, this.minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(minMiddleIndex,  maxMiddleIndex  +  1);  , 
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(1, -maxMiddleIndex);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex < 0) { this.minEndIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 7; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  7;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == 0) } this.maxMiddleIndex = index + 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxEndIndex)- 1;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  <=  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,if(this.maxMiddleIndex > 0) { if(this.minMiddleIndex <= 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5 + 1) { this.maxMiddleIndex = index * 5 + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5 + 1) { this.maxMiddleIndex = index * 5 + 1;!=
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxEndIndex,  -2));  ,this.minMiddleIndex = Math.min(minEndIndex, minStartIndex * 2);
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  %  2  ==  0)?  this.minEndIndex  +  1  :  this.minEndIndex;  ,this.minEndIndex =(this.minEndIndex % 2 == 0)? this.minEndIndex + 1 : this.minEndIndex;
increase failing tests,332,replace, [FE]  Size, this.minEndIndex  =  index  /  5;  ,this.maxEndIndex = index / 7 + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.minEndIndex = index + 2; if(this.minEndIndex > 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; if(this.minEndIndex > 0) } this.minEndIndex = index + 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(maxMiddleIndex,  -1));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(maxMiddleIndex, -1));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4 - 3)) { this.maxMiddleIndex = index * 4 - 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 6; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index; if(middle > maxMiddle) { this.maxMiddleIndex = index; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.maxMiddleIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 5; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 5; if(this.maxEndIndex > index) { this.maxMiddleIndex = index * 6; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 4 + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index / 4 + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2 + 1; >>
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  7;  }  , 
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e < -e) }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle && e < -e) >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index - 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3)) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3) } this.maxMiddleIndex = index - 1; }
patch is same with buggy,130,replace,, this.domain  =  domain;  if(this.range!=  range)  {  this.domain  =  domain;  }  ,this.domain = domain; if(this.range!= range) { this.domain = domain; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(0,  0);  ,this.maxEndIndex = Math.min(0, 0);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2 + 1; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minMiddleIndex)/  2;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxEndIndex)/ 10;
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  7;  }  ,if(end > minEnd) { this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 7; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  Math.min(this.maxEndIndex,  this.maxStartIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.min(this.maxEndIndex, this.maxStartIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 2)) { this.minEndIndex = index * 4; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(this.minStartIndex, this.minEndIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(-0, -minStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(minEndIndex, this.maxMiddleIndex * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minEndIndex, this.maxMiddleIndex * 2);
patch is same with buggy,317,replace,, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  4;  }  , 
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.minEndIndex >= index * 2) { this.maxMiddleIndex = index * 4;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex  -  1);  ,this.maxEndIndex = Math.min(this.maxEndIndex, this.minMiddleIndex - 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  Math.max(maxStartIndex,  maxEndIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, Math.max(maxStartIndex, maxEndIndex));
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxStartIndex,  this.minEndIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxStartIndex, this.minEndIndex));
patch is same with buggy,131,replace,, int  minMiddleIndex  =  getMinMiddleIndex();  ,int minMiddleIndex = getMinMiddleIndex();
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7; }
patch is same with buggy,131,replace,, if(this.minMiddleIndex  <  minMiddleIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  minStartIndex);  }  ,if(this.minMiddleIndex < minMiddleIndex) { this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, minStartIndex); }
compilation error,131,replace,[CE] ';' expected, if(this.minMiddleIndex  <  minMiddleIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  minStartIndex);  }  ,if(range < DEFAULT_DOMAIN_DESCRIPTION) { if(this.minMiddleIndex < minMiddleIndex) { this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 2 + 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
increase failing tests,131,replace, [FE] ArithmeticException, this.minStartIndex  =  this.minEndIndex  +  0;  ,this.minStartIndex = this.minEndIndex / 0;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(maxStartIndex,  minMiddleIndex);  , 
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && domain.length() > 0) { this.domain = domain; if(range!= null && range.length() > 0) { this.data.add(name); }
compilation error,130,add,[CE] illegal start of expression, ,if(domain!= null && domain.length() > 0) { this.domain = domain; if(range!= null) { this.data.add(name); }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(minMiddleIndex,  Math.max(maxMiddleIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.max(minMiddleIndex, Math.max(maxMiddleIndex, minEndIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 4; if(this.minEndIndex >= 0) } this.maxMiddleIndex = index * 3; }
patch is same with buggy,131,replace,, if(this.minMiddleIndex  <  minEndIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  }  ,if(this.minMiddleIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex); }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4)) { this.maxMiddleIndex = index * 4 - 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  -1);  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex > 0) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) } this.minEndIndex = index + 3 + 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.maxMiddleIndex > 0) { if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= index * 2) { this.maxMiddleIndex = index * 3; >>
patch is same with buggy,552,replace,, return(this.maxMiddleIndex  *  2  /  2);  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 1)) { this.minEndIndex = index + 3; }
compilation error,317,add,[CE] incompatible types, ,if(this.minEndIndex >> index + 1) { this.minEndIndex = index + 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 1) } this.minEndIndex = index + 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  this.minStartIndex));  ,this.minMiddleIndex =(this.minMiddleIndex % 2 == 0)? this.minMiddleIndex : 0;
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  Math.min(maxEndIndex,  1);  ,this.minMiddleIndex = Math.min(2, -minStartIndex);
compilation error,131,add,[CE] no suitable method found for min(int,int,int), ,this.minMiddleIndex = Math.min(1, this.minMiddleIndex, this.maxMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minStartIndex,  this.maxStartIndex));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minStartIndex, this.maxStartIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 5; }
increase failing tests,310,add, [FE]  Size, ,this.minMiddleIndex = index * 4 / 2 + 1;
compilation error,305,replace,[CE] illegal start of type, if(s  >  maxMiddle  ||  s  >  1)  {  this.maxMiddleIndex  =  index;  e  =  getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();  }  ,if(s > maxMiddle && s > 1) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  index  *  6  -  1;  ,this.maxEndIndex = index * 4 - 1;
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 7; >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index;  if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,this.maxMiddleIndex = index; if(middle > maxMiddle) { this.maxMiddleIndex = index; }
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.max(this.minEndIndex, 12);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 1; if(this.maxEndIndex < 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  12);  , 
compilation error,131,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > minMiddleIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex, maxStartIndex); >>
compilation error,317,add,[CE] incompatible types, ,if(this.maxMiddleIndex >> index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index / 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index / 2; }
compilation error,306,add,[CE] not a statement, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 + 1; figured
increase failing tests,332,replace, [FE] AssertionFailedError, this.minEndIndex  =  index  /  5;  ,this.maxEndIndex = index % 5 + 1;
compilation error,321,add,[CE] possible loss of precision, ,this.minEndIndex = index * 7 + getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
compilation error,306,replace,[CE] illegal start of expression, if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(middle < minMiddle) { if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; }
compilation error,306,replace,[CE] ')' expected, if(middle  <  maxMiddle)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(middle < maxMiddle) { if(this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; }
compilation error,332,add,[CE] cannot find symbol endIndex, ,this.endIndex = index * 12;
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(minEndIndex < 0? 0 : minEndIndex);this.maxEndIndex =(maxEndIndex >> 0? 0 : maxEndIndex);
compilation error,306,add,[CE] generics are not supported in -source 1.4, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) < this.maxMiddleIndex = index * 2 + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 2) } this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index - 1)) { this.maxMiddleIndex = index - 2; }
compilation error,131,add,[CE] incompatible types, ,this.minMiddleIndex =(minMiddleIndex >> 0? minMiddleIndex : maxMiddleIndex);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  minStartIndex));  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minEndIndex, minStartIndex));
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 2;
compilation error,332,add,[CE] cannot find symbol index, ,this.index = -index * 5 + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 5; if(this.minEndIndex >= 0) } this.maxMiddleIndex = index * 6; }
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  3  *  3  +  1;  ,this.maxEndIndex = 3 + 1;
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  3  *  3  +  1;  ,this.maxEndIndex = 3;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex == 0)? this.minEndIndex - 1 : 0;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minEndIndex == 0)? this.minEndIndex - 1 : 0;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(1, -1);
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index * 6 + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.minEndIndex = index * 4; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  7;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 7; if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  -  1;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 2 - 1;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 2; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,if(this.maxMiddleIndex < index * 4 ||(index + 1)> end) { this.maxMiddleIndex = index * 4; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex <= 0) } this.maxMiddleIndex = index * 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 5;
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 6; }
compilation error,305,add,[CE] illegal start of expression, ,if(s > maxMiddle || s > 1)) { this.maxMiddleIndex = index; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
patch is same with buggy,131,replace,, int  minMiddleIndex  =  this.minMiddleIndex  -  1;  ,int minMiddleIndex = this.minMiddleIndex - 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex < 0)? this.minEndIndex + 1 : this.minEndIndex;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minEndIndex < 0)? this.minEndIndex + 1 : this.minEndIndex;
compilation error,131,replace,[CE] ')' expected, if(this.minMiddleIndex  <  minEndIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  }  ,if(range < DEFAULT_DOMAIN_DESCRIPTION) { if(minEndIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxStartIndex = Math.max(maxStartIndex,
patch is same with buggy,131,replace,, if(this.minMiddleIndex  <  minEndIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxStartIndex);  }  , 
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.maxMiddleIndex,  this.minMiddleIndex));  ,this.maxEndIndex = Math.max(this.maxEndIndex, Math.min(this.maxMiddleIndex, this.minMiddleIndex));
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.domain  =  domain  +  1;  }  ,if(domain!= null) { this.domain = domain; } else if(this.range!= range) { this.domain = domain + 1; }
patch is same with buggy,130,replace,, if(domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.domain  =  domain  +  1;  }  , 
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(0,  this.maxMiddleIndex);  , 
patch is same with buggy,130,replace,, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 1;
increase failing tests,130,replace, [FE]  Size, this.maxEndIndex  =  this.maxEndIndex  +  1;  ,this.maxEndIndex = this.maxEndIndex + 2;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  3;  if(this.maxEndIndex  >=  0)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 3; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minEndIndex  +  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(-3, -3);
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 5;
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  >=  0?  0  :  minEndIndex);  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 6; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(10, 0);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.minMiddleIndex  -  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minMiddleIndex - 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.minMiddleIndex  -  1);  ,this.maxStartIndex = Math.min(this.maxStartIndex, this.minMiddleIndex - 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  Math.max(this.minStartIndex,  1));  ,this.minStartIndex = Math.min(this.minStartIndex, Math.max(this.minStartIndex, 1));
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxMiddleIndex  >  0)?  this.maxEndIndex  :  0;  ,this.maxEndIndex =(this.maxMiddleIndex > 0)? this.maxEndIndex : 0;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minStartIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxMiddleIndex  <  0?  0  :  minStartIndex);  ,this.maxMiddleIndex =(this.maxMiddleIndex < 0? 0 : minStartIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.maxStartIndex  +  1);  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.maxStartIndex + 1);
patch is same with buggy,130,replace,, this.minEndIndex  =(this.minEndIndex  ==  0?  0  :  minEndIndex);  this.maxEndIndex  =  0;  , 
compilation error,131,replace,[CE] bad operand types for binary operator '-', this.minEndIndex  =  Math.min(minEndIndex,  maxEndIndex  *  2);this.maxEndIndex  =  Math.min(maxEndIndex,  minEndIndex  *  2);  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, range - 1);
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.min(-1,  -1);  ,this.maxEndIndex = Math.max(1, 0);
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.min(-1,  -1);  ,this.maxEndIndex = Math.max(1, 1);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 2;
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.max(maxEndIndex,  minMiddleIndex  +  1);  ,this.minMiddleIndex = Math.max(minMiddleIndex, minStartIndex + 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minEndIndex,  maxStartIndex));  , 
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; bodied
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; fiance
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex < index * 2) { this.minEndIndex = index * 2; luckily if(this.minEndIndex < index * 1) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex  -  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxEndIndex - 1);
compilation error,131,replace,[CE] bad operand types for binary operator '-', this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex  -  1);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.range - 1);
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex =(index + 2)/ 2 + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 5; }
compilation error,332,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex =(index % 2);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; >>
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) } this.minEndIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(middle  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 2; if(middle > 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,replace,[CE] no suitable method found for min(int,int,int), this.minEndIndex  =  Math.min(1,  this.minStartIndex);  ,this.minEndIndex = Math.min(1, this.minEndIndex, this.maxMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 6; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(0, 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 1; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 2) { this.maxMiddleIndex = index + 3; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  -(this.minEndIndex  +  3);  ,this.minEndIndex = -(this.minEndIndex * 3);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  1);  ,this.minEndIndex = Math.min(maxEndIndex, 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 2 - 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = maxMiddleIndex % 2 + 1;
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index >> 2)? 2 : index;
compilation error,306,add,[CE] not a statement, ,if(this.maxMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2; figured
compilation error,552,add,[CE] cannot find symbol, ,return getDataItemCount() /(this.maxMiddleIndex * 2)+(this.minMiddleIndex * 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; }
compilation error,131,add,[CE] bad operand types for binary operator '*', ,this.maxStartIndex = Math.max(maxStartIndex, Math.min(maxStartIndex, range * 1));
compilation error,131,add,[CE] bad operand types for binary operator '*', ,this.maxStartIndex = Math.max(maxStartIndex, Math.max(maxEndIndex, range * 1));
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.maxMiddleIndex = index * 4; if(this.minEndIndex >= index * 2) { this.maxMiddleIndex = index * 4;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.maxEndIndex * 2);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(0,  this.minMiddleIndex);  , 
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(this.minEndIndex > index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,130,replace,, if(domain!=  null  &&  domain.length()  >  0)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.data.add(name);  }  ,if(domain!= null && domain.length() > 0) { this.domain = domain; this.range = range; } else { this.data.add(name); }
compilation error,130,replace,[CE] illegal start of expression, if(domain!=  null  &&  domain.length()  >  0)  {  this.domain  =  domain;  this.range  =  range;  }  else  {  this.data.add(name);  }  ,if(domain!= null && domain.length() > 0) { this.domain = domain; this.range = range; } else >> this.data.add(name); }
compilation error,130,add,[CE] illegal start of expression, ,if(this.range!= domain) { this.domain = domain; if(this.range!= range) { this.range = range; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
patch is same with buggy,305,replace,, if(e  >  maxMiddle  &&  e  <=  0)  {  ,if(e > maxMiddle && e <= 0) {
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.maxEndIndex,  this.minMiddleIndex);  , 
compilation error,130,add,[CE] bad operand types for binary operator '<=', ,if(this.domain!= null) { this.domain = domain; } else if(this.range <= range) { this.range = range + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 3; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minEndIndex  <  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 3; if(this.minEndIndex % 2 == index) { this.maxMiddleIndex = index * 2; }
compilation error,552,replace,[CE] cannot find symbol, int  count  =  getMinMiddleIndex();  ,int count = getMiddleIndex();
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex < index + 2) { this.maxMiddleIndex = index + 2; if(this.minEndIndex < index + 1) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex < 0? 0 : maxMiddleIndex);
patch is same with buggy,131,replace,, int  minMiddleIndex  =  Math.min(minEndIndex,  minStartIndex);  ,int minMiddleIndex = Math.min(minEndIndex, minStartIndex);
compilation error,131,replace,[CE] cannot find symbol minContiguousIndex, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.maxMiddleIndex  -  1);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minContiguousIndex - 1);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  6;  }  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =(this.minEndIndex  >  0)?  this.minEndIndex  +  1  :  this.maxEndIndex;  ,this.minMiddleIndex =(this.minEndIndex < 0)? this.minEndIndex + 1 : 0;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex % 2!= 0) } this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  minEndIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minEndIndex, minEndIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxEndIndex,  0));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.maxEndIndex, 0));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) } this.minMiddleIndex = index / 2 + 1; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex + 1);
increase failing tests,317,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,this.minMiddleIndex = index - 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 2; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; >>
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = -(this.maxMiddleIndex * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  minMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, minMiddleIndex + 1);
patch is same with buggy,317,replace,, if(end  >  minEnd)  {  this.minEndIndex  =  index  *  5;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) } this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 1; if(this.maxEndIndex < 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 4;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 4) { this.minEndIndex = index * 2; if(this.minEndIndex > index * 4) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index * 4) { this.minEndIndex = index * 2; if(this.minEndIndex > index * 4)) { this.minEndIndex = index * 2; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(2,  this.minEndIndex);  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index * 2;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  0));  ,this.minMiddleIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, 0));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 3; if(this.maxEndIndex > 0) { this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 3; if(this.maxEndIndex > 0) } this.minEndIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index * 3; if(this.maxEndIndex > 0) { this.minEndIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex < index) { this.maxMiddleIndex = index * 4;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(maxMiddleIndex, this.minEndIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.maxStartIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(maxMiddleIndex, this.minStartIndex - 1);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  6;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 6; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  6;  }  , 
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index << 4)? 1 : index;
compilation error,321,add,[CE] incompatible types, ,this.minEndIndex =(index >> 4)? 1 : index;
compilation error,317,replace,[CE] incompatible types, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex >> index + 2) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,131,replace,, this.maxStartIndex  =  getMaxEndIndex();  , 
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(-minEndIndex, -minStartIndex);
increase failing tests,131,add, [FE]  Size, ,this.minStartIndex = Math.min(-minEndIndex, -minStartIndex);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 5; }
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =  -4  *  3  +  1;  ,this.maxEndIndex = 2 * 3 + 1;
patch is same with buggy,332,replace,, this.maxEndIndex  =  -4  *  3  +  1;  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.maxEndIndex  >=  index)  {  this.minEndIndex  =  index  +  2;  }  ,this.minEndIndex = index + 2; if(this.maxEndIndex >= index) { this.minEndIndex = index + 2; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minStartIndex,  this.maxEndIndex));  ,this.minMiddleIndex = this.minMiddleIndex / 12;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(maxStartIndex, Math.max(minMiddleIndex, 0));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == index) } this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) } this.maxMiddleIndex = index + 2; }
compilation error,131,add,[CE] cannot find symbol MIN_MiddleIndex, ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minMiddleIndex, MIN_MiddleIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  maxMiddleIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, 1);
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex  +  1);  ,this.minStartIndex = Math.min(this.minMiddleIndex, this.minEndIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
increase failing tests,321,add, [FE]  Size, ,this.maxEndIndex = index / 7 + 1;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(0,  -maxStartIndex);  ,this.maxMiddleIndex = Math.max(0, -maxStartIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  Math.min(this.maxMiddleIndex,  this.maxMiddleIndex));  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7; }
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(1, 0);
increase failing tests,131,add, [FE]  Size, ,this.maxStartIndex = Math.max(1, 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(maxMiddleIndex, minMiddleIndex * 2);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex);  ,this.maxMiddleIndex = Math.min(this.minEndIndex, this.maxEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, maxMiddleIndex - 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(maxMiddleIndex, minMiddleIndex - 1);
compilation error,310,add,[CE] cannot find symbol minimMiddleIndex, ,this.minimMiddleIndex = index * 4 / 2;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minEndIndex = Math.max(this.minEndIndex, this.maxEndIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end < minEnd) { this.minEndIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 5; if(end > end) { this.minEndIndex = index * 5; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 6; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 6;
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(this.minEndIndex - 1)? this.minEndIndex + 1 : this.maxEndIndex;
patch is same with buggy,552,replace,, this.data.add( "- ");  ,this.data.add("-");
patch is same with buggy,552,replace,, this.data.add( "- ");  ,this.data.add(" -");
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { index = index + 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); >>
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 2)? 2 : index + 1;
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index >> 2)? 2 : index + 1;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(middle  <  this.maxMiddleIndex)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(middle < this.maxMiddleIndex) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(minEndIndex,  Math.max(maxStartIndex,  minEndIndex));  ,this.maxMiddleIndex = Math.max(minEndIndex, Math.max(maxStartIndex, minEndIndex));
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >=  3)  {  this.maxMiddleIndex  =  index  +  1;  ++e;  }  ,if(this.maxMiddleIndex > 0) { if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; ++e; }
patch is same with buggy,317,replace,, if(this.minEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  , 
increase failing tests,332,add, [FE] AssertionFailedError, ,this.minEndIndex =(index * 12)+ 1;
compilation error,332,add,[CE] cannot find symbol minimumEndIndex, ,this.minimumEndIndex =(index * 12)+ 1;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(maxEndIndex,  minMiddleIndex);  ,this.maxStartIndex = Math.max(maxEndIndex, minMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(10, maxMiddleIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(minEndIndex  <  0?  maxEndIndex  :  minEndIndex);  ,this.maxMiddleIndex =(minEndIndex < 0? maxEndIndex : minEndIndex);
compilation error,306,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; if(middle > this.minMiddleIndex) { this.maxMiddleIndex = index; figured
increase failing tests,332,add, [FE]  Size, ,this.minEndIndex = index / 5 + 1;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = this.minEndIndex / 2 + 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) } this.maxMiddleIndex = index * 2; }
compilation error,131,add,[CE] incompatible types, ,this.minEndIndex =(this.minEndIndex - 1)? this.minEndIndex - 1 : 0;
compilation error,131,add,[CE] incompatible types, ,this.minMiddleIndex =(this.minEndIndex - 1)? this.minEndIndex - 1 : 0;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  5;  }  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, Math.max(this.maxMiddleIndex, 0));
increase failing tests,317,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.minMiddleIndex = index + 1; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex < index) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  6;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  8;  }  ,if(index > 0) { if(index >= 0) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  6;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  8;  }  ,if(this.maxMiddleIndex >= index) { if(index >= 0) { index = index + 1; e = getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); }
compilation error,131,add,[CE] cannot find symbol minMinEndIndex, ,this.minEndIndex = Math.max(this.minStartIndex, Math.min(this.minEndIndex, this.minMinEndIndex));
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxEndIndex  =(this.maxEndIndex  *  2);  ,this.minMiddleIndex =(this.minMiddleIndex * 10);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 4; if(this.minEndIndex > index) { this.maxMiddleIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  3;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 4; if(this.minEndIndex > index) } this.maxMiddleIndex = index * 3; }
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex)+ 3;
increase failing tests,131,replace, [FE]  Size, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex)/  2;  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.minMiddleIndex)+ 3;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minMiddleIndex,  this.minEndIndex));  ,this.minEndIndex = Math.min(this.minEndIndex, Math.max(this.minMiddleIndex, this.minEndIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 2; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 2; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(10,  minEndIndex  *  1);  ,this.minMiddleIndex = Math.min(10, minMiddleIndex - 1);
compilation error,131,replace,[CE] no suitable method found for max(int,String), this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minEndIndex,  minMiddleIndex));  ,this.minStartIndex = Math.min(maxEndIndex, Math.max(minStartIndex, range));
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4  /  2;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 4 - 3; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  ,this.maxMiddleIndex = Math.min(this.maxMiddleIndex, this.minMiddleIndex * 2);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxStartIndex  =  this.maxMiddleIndex  /  1;  ,this.maxStartIndex = this.maxEndIndex * 2;
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  %  2  ==  0)?  this.minEndIndex  +  1  :  this.minEndIndex;  ,this.minEndIndex =(this.minEndIndex % 2 == 0)? this.minEndIndex + 1 : this.minEndIndex;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 20);
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 19);
patch is same with buggy,131,replace,, this.minStartIndex  =(minStartIndex  <  0?  minStartIndex  :  minStartIndex);  ,this.minStartIndex =(minStartIndex < 0? minStartIndex : minStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index + 2) { this.minEndIndex = index + 3; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex)+  1;  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)+ 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex)+  1;  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex) + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex)+  1;  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  <  index  *  5)  {  this.maxMiddleIndex  =  index  *  5;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 5) { this.maxMiddleIndex = index * 5; }
compilation error,321,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index / 6;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,131,add,[CE] cannot find symbol minimumMiddleIndex, ,this.maxMiddleIndex = Math.max(this.minimumMiddleIndex, Math.max(this.maxMiddleIndex, this.minMiddleIndex));
increase failing tests,131,replace, [FE] ArithmeticException, this.minStartIndex  =  this.minMiddleIndex  +  0;  ,this.maxStartIndex = this.maxStartIndex / 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  1;  if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 1; if(this.minEndIndex >= 0) { this.minEndIndex = index * 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, minEndIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minMiddleIndex,  this.maxEndIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, maxStartIndex * 2);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3; }
patch is same with buggy,306,replace,, if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = this.minEndIndex / 10;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minStartIndex,  this.maxStartIndex  *  1);  ,this.minMiddleIndex = Math.max(this.minStartIndex, this.maxStartIndex * 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minStartIndex,  minStartIndex));  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.minEndIndex / 2);
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxMiddleIndex  -  1);  , 
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = this.maxEndIndex / 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = this.maxEndIndex - 2;
compilation error,131,add,[CE] no suitable method found for max(int,int,int), ,this.maxEndIndex = Math.max(0, this.maxEndIndex, this.minMiddleIndex);
increase failing tests,131,add, [FE]  Size, ,this.maxEndIndex = Math.max(10, this.maxStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  -(this.maxMiddleIndex  *  2);  ,this.maxMiddleIndex = -(this.maxMiddleIndex * 2);
increase failing tests,306,replace, [FE]  Size, if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2  +  1;  }  ,this.minMiddleIndex = index * 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minMiddleIndex * 10 + 1;
patch is same with buggy,317,replace,, if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, if(this.minEndIndex  >=  0)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 3; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  this.minStartIndex));  ,this.minStartIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, this.minStartIndex));
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  7;  }  ,if(end < minEnd) { this.minEndIndex = index * 7; luckily if(end > minEnd) { this.minEndIndex = index * 7; }
increase failing tests,130,add, [FE]  Size, ,this.minMiddleIndex = minMiddleIndex + 3;
patch is same with buggy,131,replace,, int  minMiddleIndex  =  this.minMiddleIndex  -  1;  , 
compilation error,131,replace,[CE] incompatible types, this.minEndIndex  =(minEndIndex  <=  0?  0  :  minEndIndex);  ,this.maxEndIndex =(maxEndIndex >> 0? 0 : maxEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  0);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? maxMiddleIndex : 0);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  0);  ,this.maxMiddleIndex =(maxMiddleIndex < 0? maxMiddleIndex : 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  255);  ,this.minMiddleIndex = Math.min(minMiddleIndex, 255);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  -(this.maxMiddleIndex  *  10);  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxEndIndex)+ 1;
compilation error,310,add,[CE] cannot find symbol minimumMiddleIndex, ,this.minimumMiddleIndex = index * 5 / 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2; >>
compilation error,306,add,[CE] ')' expected, ,if(this.minMiddleIndex > 0) { this.minMiddleIndex = index / 2; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 4; if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 4; if(this.minEndIndex < 0) } this.maxMiddleIndex = index * 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(10, minEndIndex - 1);
compilation error,130,replace,[CE] illegal start of expression, if(this.domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.range  =  range  +  1;  }  ,if(domain!= null) { this.domain = domain; if(this.range!= range) { this.range = range + 1; }
patch is same with buggy,130,replace,, if(this.domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.range  =  range  +  1;  }  ,if(this.domain!= null) { this.domain = domain; } else if(this.range!= range) { this.range = range + 1; }
compilation error,332,replace,[CE] possible loss of precision, this.maxEndIndex  =  index  *  6  -  1;  ,this.maxEndIndex = index * 7 + getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
patch is same with buggy,305,replace,, if(s  >  maxMiddle  &&  e  <  -e)  {  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 2; if(this.maxEndIndex >= index) { this.minEndIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index - 2; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minMiddleIndex));  , 
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { if(end > minEnd) { this.minEndIndex = index * 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { if(end > maxEnd) { this.minEndIndex = index * 7; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 2) { this.minEndIndex = index + 1; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  ,this.minStartIndex = Math.max(this.minMiddleIndex, this.minEndIndex)+ 1;
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.maxMiddleIndex  >  index  *  4);  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  3;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 4); if(this.maxMiddleIndex > index * 2) { this.maxMiddleIndex = index * 3;
increase failing tests,131,replace, [FE]  Size, this.minEndIndex  =  this.minEndIndex  *  2;  ,this.minEndIndex = Math.max(this.minEndIndex, Math.max(this.minEndIndex, 1));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.maxMiddleIndex,  this.minEndIndex));  ,this.minMiddleIndex = Math.min(this.minEndIndex, Math.max(this.maxMiddleIndex, this.minEndIndex));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex < 0? 0 : minStartIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex =(this.minMiddleIndex < 0? 0 : minStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =(this.maxEndIndex  >  this.maxStartIndex  -  1)?  this.maxMiddleIndex  :  0;  ,this.maxMiddleIndex =(this.maxEndIndex > this.maxStartIndex - 1)? this.maxMiddleIndex : 0;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxStartIndex,  maxEndIndex  +  1);  ,this.maxMiddleIndex = Math.max(maxStartIndex, maxEndIndex + 1);
compilation error,306,add,[CE] incompatible types, ,if(this.minMiddleIndex >> index) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(maxEndIndex,  minStartIndex));  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  2;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 7; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 7;!=
patch is same with buggy,131,replace,, this.minEndIndex  =  this.minEndIndex  %  2;  ,this.minEndIndex = this.minEndIndex % 2;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minStartIndex,  Math.max(this.minEndIndex,  minStartIndex));  ,this.minMiddleIndex = Math.min(this.minStartIndex, Math.max(this.minEndIndex, minStartIndex));
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  3;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  4;  }  ,if(this.minEndIndex < index) { this.maxMiddleIndex = index * 4; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 3; }
compilation error,332,add,[CE] cannot find symbol index, ,this.index = -index / 3;
compilation error,552,add,[CE] unreachable statement, ,return(this.maxMiddleIndex * 2)+(this.minMiddleIndex * 2);
patch is same with buggy,321,replace,, this.minEndIndex  =(index  <  0)?  2  :  index  +  1;  ,this.minEndIndex =(index < 0)? 2 : index + 1;
patch is same with buggy,131,replace,, this.minStartIndex  =(minStartIndex  <  0?  minStartIndex  :  minStartIndex);  ,this.minStartIndex =(minStartIndex < 0? minStartIndex : minStartIndex);
patch is same with buggy,131,replace,, this.minStartIndex  =(minStartIndex  <  0?  minStartIndex  :  minStartIndex);  , 
patch is same with buggy,131,replace,, int  maxEndIndex  =  this.maxEndIndex  +  1;  ,int maxEndIndex = this.maxEndIndex + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex)+  1;  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxMiddleIndex)+ 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex)+  1;  ,this.minEndIndex = Math.min(this.minEndIndex, this.maxMiddleIndex) + 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minEndIndex,  this.maxMiddleIndex)+  1;  , 
compilation error,306,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex > 0) { if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 4; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minMiddleIndex,  minStartIndex));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minMiddleIndex, minStartIndex));
compilation error,131,replace,[CE] cannot find symbol maxMaxMiddleIndex, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.max(maxStartIndex,  maxMiddleIndex));  ,this.minEndIndex = Math.max(this.minEndIndex, this.maxMaxMiddleIndex);
compilation error,306,add,[CE] incompatible types, ,if(this.maxMiddleIndex < index * 4); if(this.maxMiddleIndex >> index * 2) { this.maxMiddleIndex = index * 3; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index * 4); if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 2; >>
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  8;  }  , 
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index * 4; if(this.maxMiddleIndex > index * 5 + 1) { this.maxMiddleIndex = index * 5; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5  -  2;  }  ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5 - 1; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5 - 1; }
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  5  -  2;  }  ,if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 5 - 1; if(this.maxMiddleIndex > index * 5) } this.maxMiddleIndex = index * 5 - 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  <  index)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index * 4 ||(index + 1)> end) { this.maxMiddleIndex = index * 4;
compilation error,306,replace,[CE] illegal start of expression, if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  *  7  +  1;  }  ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 4;
compilation error,317,replace,[CE] incompatible types, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex >> index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) } this.maxMiddleIndex = index * 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(minEndIndex,  minMiddleIndex  +  1);  ,this.minEndIndex = Math.max(minEndIndex, minMiddleIndex + 1);
patch is same with buggy,131,replace,, if(this.minMiddleIndex  <  minEndIndex)  {  this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxStartIndex  =  Math.max(maxStartIndex,  minMiddleIndex);  }  ,if(this.minMiddleIndex < minEndIndex) { this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxStartIndex = Math.max(maxStartIndex, minMiddleIndex); }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 4; if(this.maxEndIndex > 0) { this.minEndIndex = index * 4; >>
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) { this.minEndIndex = index + 3; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > 0) } this.minEndIndex = index + 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.minStartIndex * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.min(minStartIndex, this.minStartIndex * 2);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  -maxStartIndex);  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, -maxStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex < 0? this.minMiddleIndex + 1 : 0);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minMiddleIndex > 0? this.minMiddleIndex + 1 : 0);
compilation error,131,add,[CE] incompatible types, ,this.minMiddleIndex =(this.minMiddleIndex >> 0? this.minMiddleIndex + 1 : 0);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { index = index - 1; s = getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime(); >>
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, this.minEndIndex)- 1;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex)- 1;
compilation error,130,replace,[CE] bad operand types for binary operator '<', if(domain!=  null)  {  this.domain  =  domain;  }  else  if(this.range!=  range)  {  this.domain  =  domain  +  1;  }  ,this.domain = domain; if(this.range < range) { this.domain = domain + 1; }
patch is same with buggy,131,replace,, int  minMiddleIndex  =  Math.min(10,  1);  ,int minMiddleIndex = Math.min(10, 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 1; >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minEndIndex + 1;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minMiddleIndex,  Math.min(this.minEndIndex,  minEndIndex));  ,this.minStartIndex = Math.max(this.minMiddleIndex, Math.min(this.minEndIndex, minEndIndex));
compilation error,131,replace,[CE] no suitable method found for min(int,int,int), this.minEndIndex  =  Math.min(2,  this.maxEndIndex);  ,this.minEndIndex = Math.min(2, this.minEndIndex, this.maxEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.maxMiddleIndex = index * 3 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > maxEnd) { this.maxMiddleIndex = index * 3 + 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-0,  -1);  ,this.maxMiddleIndex = Math.max(-0, -1);
compilation error,131,add,[CE] no suitable method found for min(int,String), ,this.minStartIndex = Math.min(minEndIndex, Math.min(minStartIndex, range));
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= 0) } this.maxMiddleIndex = index * 4; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex > index + 2) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, int  minMiddleIndex  =  -(this.minMiddleIndex  +  2);  , 
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minStartIndex = Math.min(this.minStartIndex, this.maxEndIndex * 2);
compilation error,317,add,[CE] incompatible types, ,if(this.maxEndIndex >> index + 1) { this.minEndIndex = index + 2; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.minEndIndex)-  1;  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.minEndIndex)- 1;
compilation error,130,add,[CE] unexpected type, ,this.minEndIndex = ----(this.maxEndIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(this.maxStartIndex,  this.minEndIndex);  ,this.maxMiddleIndex = Math.min(this.maxStartIndex, this.minEndIndex);
patch is same with buggy,317,replace,, if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  , 
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  6;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxMiddleIndex)+  1;  ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxMiddleIndex)+ 1;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,332,add,[CE] cannot find symbol endIndex, ,this.endIndex = index * 6 - 1;
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex + 2;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 2) { this.maxMiddleIndex = index + 2; if(this.minEndIndex > index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index + 2)) { this.maxMiddleIndex = index + 2; if(this.minEndIndex > index + 1) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.min(maxEndIndex,  0));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.min(maxEndIndex, 0));
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  Math.min(maxMiddleIndex,  maxStartIndex));  ,this.maxMiddleIndex = Math.max(maxMiddleIndex, Math.min(maxMiddleIndex, maxStartIndex));
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  *  4  -  1;  ,this.maxMiddleIndex = index * 4 - 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 3; >>
patch is same with buggy,332,replace,, this.minEndIndex  =  -index;  ,this.minEndIndex = -index;
patch is same with buggy,131,replace,, this.maxStartIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex);  ,this.maxStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxStartIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex);  ,this.maxStartIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.max(this.minEndIndex,  this.minMiddleIndex);  ,this.minMiddleIndex = Math.max(this.minEndIndex, this.minMiddleIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) { this.maxMiddleIndex = index + 2; >>
compilation error,306,add,[CE] illegal start of expression, ,if(middle > maxMiddle) } this.maxMiddleIndex = index + 2; }
increase failing tests,317,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index + 1; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  1;  if(this.minEndIndex  >  index  +  1)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 3; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  maxStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minStartIndex);  ,this.minStartIndex = Math.min(minStartIndex, maxStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minStartIndex);
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,if(this.maxMiddleIndex == index) { if(middle > maxMiddle) { this.maxMiddleIndex = index; }
compilation error,306,replace,[CE] illegal start of expression, if(middle  >  maxMiddle)  {  this.maxMiddleIndex  =  index;  }  ,if(this.maxMiddleIndex >= index) { if(middle > maxMiddle) { this.maxMiddleIndex = index; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 4; if(this.minMiddleIndex >= index) { this.maxMiddleIndex = index * 3; }
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  -minEndIndex));  ,this.minStartIndex = Math.max(this.minStartIndex, Math.min(this.minStartIndex, range));
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = this.minEndIndex * 2;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(1, this.minMiddleIndex);
compilation error,131,add,[CE] cannot find symbol length, ,this.minStartIndex = Math.min(minStartIndex, range.length * 1);
increase failing tests,131,replace, [FE] ArithmeticException, int  maxEndIndex  =  this.maxMiddleIndex  +  0;  ,int maxEndIndex = this.maxMiddleIndex / 0;
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index) { this.maxMiddleIndex = index + 2;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 7; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 5) } this.maxMiddleIndex = index * 4; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex > index * 5) { this.maxMiddleIndex = index * 4;
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  Math.max(this.minMiddleIndex,  this.minEndIndex));  ,this.minStartIndex = Math.min(this.minStartIndex, Math.max(this.minMiddleIndex, this.minEndIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; if(this.minEndIndex > 0) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; if(this.minEndIndex > 0) } this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.minEndIndex = index + 2; if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index + 3;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  /  2;  if(this.minMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  /  2;  }  ,this.maxMiddleIndex = index / 2; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(this.minEndIndex,  this.maxStartIndex);  ,this.minStartIndex = Math.max(this.minEndIndex, this.maxStartIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =(this.minMiddleIndex  *  1);  ,this.minMiddleIndex =(this.minMiddleIndex < 0)? this.minMiddleIndex + 1 : this.maxEndIndex;
compilation error,131,add,[CE] cannot find symbol maxMaxMiddleIndex, ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMaxMiddleIndex = Math.max(maxStartIndex, maxMiddleIndex);
compilation error,317,add,[CE] ')' expected, ,if(this.minEndIndex >= index * 4; if(this.minEndIndex >= index * 2) { this.minEndIndex = index * 3; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  7;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 7; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  7;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 7; FIELD_NAME
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 3; meanwhile
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  6;  }  ,this.maxMiddleIndex = index * 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 6; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minMiddleIndex)/  10;  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minMiddleIndex)/ 10;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minMiddleIndex)/  10;  , 
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  this.maxStartIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxStartIndex + 1);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(-maxMiddleIndex,  0);  ,this.maxMiddleIndex = Math.max(-maxMiddleIndex, 0);
compilation error,332,replace,[CE] ';' expected, this.maxEndIndex  =  -4  *  3  +  1;  ,this.maxEndIndex = 3) * 3 + 1;
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minStartIndex,  maxMiddleIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minStartIndex, maxMiddleIndex));
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 3 - 2; >>
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.maxEndIndex  +  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.maxEndIndex + 1);
patch is same with buggy,130,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  0  :  minEndIndex);  this.maxEndIndex  =  0;  ,this.minEndIndex =(this.minEndIndex < 0? 0 : minEndIndex); this.maxEndIndex = 0;
patch is same with buggy,130,replace,, this.minEndIndex  =(this.minEndIndex  <  0?  0  :  minEndIndex);  this.maxEndIndex  =  0;  ,this.minEndIndex =(this.minEndIndex < 0? 0 : minEndIndex); this.maxEndIndex = 0;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(maxMiddleIndex,  Math.max(minStartIndex,  maxEndIndex));  ,this.maxMiddleIndex = Math.min(maxMiddleIndex, Math.max(minStartIndex, maxEndIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3;!=
compilation error,271,add,[CE] incompatible types, ,this.minStartIndex =(index >> 0)? index + 1 : index;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 2 + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex!= -1)? this.maxEndIndex : 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.maxEndIndex < index) { this.maxMiddleIndex = index + 1; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minEndIndex,  this.minStartIndex);  ,this.minStartIndex = Math.min(this.minEndIndex, this.minStartIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  maxMiddleIndex  +  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(maxMiddleIndex,  minStartIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(maxMiddleIndex, minStartIndex));
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minMiddleIndex, this.minMiddleIndex * 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(minStartIndex, this.minMiddleIndex * 2);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.min(this.maxMiddleIndex,  0);  ,this.maxEndIndex = Math.min(this.maxMiddleIndex, 0);
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex < 0? 0 : minEndIndex); this.maxEndIndex = 0;
increase failing tests,130,add, [FE] AssertionFailedError, ,this.minMiddleIndex =(this.minEndIndex < 0? 0 : minEndIndex);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxEndIndex)+ 1;
compilation error,317,add,[CE] not a statement, ,this.maxMiddleIndex = index + 1; meanwhile
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= 3) { this.maxMiddleIndex = index - 3; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index - 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index * 6; >>
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index - 1) { this.maxMiddleIndex = index - 3;
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  2;  if(this.maxMiddleIndex  >=  0)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index * 2 + 1; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxEndIndex  <  0)  {  this.minEndIndex  =  index  *  5;  }  ,this.minEndIndex = index * 2; if(this.maxEndIndex < 0) { this.minEndIndex = index * 5; }
patch is same with buggy,552,replace,, this.data.add(new  Integer(this.maxMiddleIndex));  ,this.data.add(new Integer(this.maxMiddleIndex));
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > end) { this.minEndIndex = index * 3 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.minEndIndex = index * 3 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index * 2) } this.minEndIndex = index * 4; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  <  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
increase failing tests,131,replace, [FE]  Size, this.maxEndIndex  =  Math.max(0,  this.maxEndIndex);  ,this.maxEndIndex = Math.max(2, this.maxEndIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(0,  this.maxEndIndex);  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  getMinMiddleIndex();  , 
compilation error,317,replace,[CE] illegal start of expression, if(this.maxEndIndex  >  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < 0) { this.maxMiddleIndex = index + 1; }
compilation error,131,add,[CE] no suitable method found for max(int,String), ,this.minEndIndex = Math.max(this.minEndIndex, range + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxMiddleIndex  =  Math.min(this.maxMiddleIndex,  this.minMiddleIndex  *  2);  ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minMiddleIndex / 2);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxMiddleIndex!= -1)? this.maxEndIndex : 0;
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex < index - 1)) { this.maxMiddleIndex = index + 1; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)+ 3;
increase failing tests,131,add, [FE]  Size, ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)+ 3;
compilation error,131,add,[CE] ';' expected, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, this.maxMiddleIndex)+ 3);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > 0) { this.maxMiddleIndex = index * 3; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 3; if(this.minEndIndex >= index) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minMiddleIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index + 1; if(this.minMiddleIndex > index - 1) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(10,  0);  ,this.maxMiddleIndex = Math.min(10, 0);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  this.minMiddleIndex)-  1;  ,this.minEndIndex = Math.max(this.minEndIndex, this.minMiddleIndex)- 1;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  this.minMiddleIndex)-  1;  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minStartIndex,  minStartIndex  +  1);  ,this.minStartIndex = Math.min(this.minStartIndex, minStartIndex + 1);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.minEndIndex < index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 1) { this.minEndIndex = index * 3; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index * 1) } this.minEndIndex = index * 3; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minStartIndex,  this.minMiddleIndex));  ,this.minMiddleIndex = Math.min(this.minEndIndex, Math.max(this.minStartIndex, this.minMiddleIndex));
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minMiddleIndex);  this.maxEndIndex  =  Math.max(maxEndIndex,  maxStartIndex);  ,this.minEndIndex = Math.min(minEndIndex, minMiddleIndex); this.maxEndIndex = Math.max(maxEndIndex, maxStartIndex);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minMiddleIndex)/  2;  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minMiddleIndex)/ 2;
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(this.maxEndIndex,  this.minMiddleIndex)/  2;  ,this.maxEndIndex = Math.max(this.maxEndIndex, this.minMiddleIndex) / 2;
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,if(this.minEndIndex > index + 2) { this.minEndIndex = index + 3; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >  index  +  2)  {  this.minEndIndex  =  index  +  1;  }  ,if(this.minEndIndex > index + 1) { this.minEndIndex = index + 3; if(this.minEndIndex > index + 1) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index + 1) { this.maxMiddleIndex = index + 2; >>
patch is same with buggy,131,replace,, this.minEndIndex  =(this.minEndIndex  *  2);  ,this.minEndIndex =(this.minEndIndex * 2);
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  *  3;  if(this.minMiddleIndex  >  0)  {  this.maxMiddleIndex  =  index  *  6;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index - 1; if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.maxMiddleIndex = index / 4 + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > maxEnd) { this.maxMiddleIndex = index / 4 + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minMiddleIndex  %  2  ==  0)  {  this.maxMiddleIndex  =  index  -  1;  }  ,this.maxMiddleIndex = index - 1; if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index - 1; }
compilation error,131,add,[CE] bad operand types for binary operator '-', ,this.maxStartIndex = Math.max(maxStartIndex, range - 1);
compilation error,131,add,[CE] bad operand types for binary operator '-', ,this.maxStartIndex = Math.max(maxStartIndex, domain - 1);
compilation error,332,add,[CE] possible loss of precision, ,this.minEndIndex = index * 7 + getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
patch is same with buggy,246,replace,, this.data.add(item);  if(item.getValue()  ==  null)  {  this.data.add(item);  }  ,this.data.add(item); if(item.getValue() == null) { this.data.add(item); }
increase failing tests,246,replace, [FE] AssertionFailedError, this.data.add(item);  if(item.getValue()  ==  null)  {  this.data.add(item);  }  ,this.data.add(item); if(item.getValue()!= null) { this.data.add(item); }
compilation error,306,add,[CE] illegal start of expression, ,if(middle > 0) { this.maxMiddleIndex = index + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(middle > 0) { this.maxMiddleIndex = index + 1;!=
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  1));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minEndIndex, 1));
compilation error,131,add,[CE] cannot find symbol minimMiddleIndex, ,this.minMiddleIndex = Math.min(this.minMiddleIndex, Math.max(this.minimMiddleIndex, minMiddleIndex));
compilation error,552,replace,[CE] missing return statement, int  index  =  getItemCount();  ,int index = getItemCount() - 1;
compilation error,552,replace,[CE] missing return statement, int  index  =  getItemCount();  ,int index = getItemCount() / 2;
patch is same with buggy,332,replace,, this.maxEndIndex  =(index  <  0)?  1  :  0;  ,this.maxEndIndex =(index < 0)? 1 : 0;
increase failing tests,332,replace, [FE]  Size, this.maxEndIndex  =(index  <  0)?  1  :  0;  ,this.maxEndIndex =(index < 1)? 1 : 0;
patch is same with buggy,131,replace,, this.minEndIndex  =(maxMiddleIndex  <  0?  maxMiddleIndex  :  minEndIndex);  ,this.minEndIndex =(maxMiddleIndex < 0? maxMiddleIndex : minEndIndex);
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  this.minStartIndex  *  1);  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, this.minStartIndex * 1);
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.maxMiddleIndex  =  Math.max(this.maxMiddleIndex,  Math.min(this.maxMiddleIndex,  minMiddleIndex));  ,this.maxMiddleIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, range));
compilation error,332,add,[CE] method updateBounds in class TimePeriodValues cannot be applied to given types;, ,this.maxEndIndex = -7 * 3 + 1; updateBounds(period, getDataItem(this.maxEndIndex));
compilation error,332,add,[CE] method updateBounds in class TimePeriodValues cannot be applied to given types;, ,this.maxEndIndex = -7 * 3 + 1; updateBounds(period, getDataItem(this.maxEndIndex), index);
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.minMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(middle >= -1) { this.maxMiddleIndex = index * 5; if(middle >= -1) { this.maxMiddleIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 7;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.maxEndIndex % 2 == index) { this.maxMiddleIndex = index + 2; if(this.maxEndIndex % 2 == index) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 3 + 2; } else { this.minEndIndex = index; if(this.minEndIndex > 0) { this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex >= index) { this.maxMiddleIndex = index / 3 + 2; } else { this.maxMiddleIndex = index; if(this.minEndIndex > 0) { this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 1; if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minStartIndex,  Math.max(minEndIndex,  0));  ,this.minStartIndex = Math.min(minStartIndex, Math.max(minEndIndex, 0));
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index / 4 + 3; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  2;  if(this.minEndIndex  >  index)  {  this.maxMiddleIndex  =  index  *  2  +  1;  }  ,if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  0)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 1; if(this.maxEndIndex >= index + 2) } this.minEndIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.maxMiddleIndex  >=  index)  {  this.maxMiddleIndex  =  index  -  3;  }  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(-0,  -minEndIndex);  , 
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 4) { this.minEndIndex = index * 4; }
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.minEndIndex  >  index  *  4)  {  this.minEndIndex  =  index  *  4;  }  ,this.minEndIndex = index * 2; if(this.minEndIndex > index * 4) { this.minEndIndex = index * 4; }
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  *  3  -  1;  ,this.maxMiddleIndex = index * 3 - 1;
compilation error,131,add,[CE] variable minMiddleIndex might not have been initialized, ,int minMiddleIndex = minMiddleIndex / 1;
patch is same with buggy,131,replace,, this.maxEndIndex  =(this.maxEndIndex  *  2);  ,this.maxEndIndex =(this.maxEndIndex * 2);
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 2; }
compilation error,317,replace,[CE] not a statement, this.minEndIndex  =  index  *  2;  if(end  >  minEnd)  {  this.minEndIndex  =  index  *  2;  }  ,this.minEndIndex = index * 2; if(end > minEnd) { this.minEndIndex = index * 2; FIELD_NAME
compilation error,306,replace,[CE] illegal start of expression, if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  *  7;  }  ,if(this.maxMiddleIndex > index * 7) { this.maxMiddleIndex = index * 7; >>
compilation error,131,replace,[CE] cannot find symbol minMethodIndex, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  this.minEndIndex));  ,this.minMethodIndex = Math.min(this.minMiddleIndex, Math.max(this.minMiddleIndex, this.maxMiddleIndex));
compilation error,317,replace,[CE] ')' expected, if(this.minEndIndex  >=  index  *  2)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 4; if(this.minEndIndex > index 2) { this.minEndIndex = index * 4; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  this.maxMiddleIndex  /  10  +  1;  ,this.maxMiddleIndex = this.maxMiddleIndex / 10 + 1;
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex % 2 == index) } this.maxMiddleIndex = index - 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,306,add,[CE] not a statement, ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; figured
compilation error,306,add,[CE] ';' expected, ,if(this.minMiddleIndex % 2 == 0) { this.maxMiddleIndex = index + 3; luckily(this.maxMiddleIndex >= 0) { this.maxMiddleIndex = index + 3; }
compilation error,131,add,[CE] no suitable method found for max(int,int,int), ,this.minMiddleIndex = Math.max(this.minMiddleIndex, Math.min(this.minMiddleIndex, this.maxMiddleIndex), 0);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  Math.max(this.minEndIndex,  0));  ,this.minMiddleIndex = Math.min(this.minEndIndex, Math.max(this.minEndIndex, 0));
compilation error,306,replace,[CE] illegal start of expression, if(this.maxEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  +  1;  }  ,if(this.maxMiddleIndex > 0) { if(this.maxEndIndex >= 0) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 2; >>
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.max(minStartIndex,  Math.min(maxStartIndex,  minEndIndex));  ,this.minStartIndex = Math.max(minStartIndex, Math.min(maxStartIndex, minEndIndex));
patch is same with buggy,317,replace,, if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  3;  }  ,if(this.minEndIndex > 0) { this.minEndIndex = index + 3; }
patch is same with buggy,317,replace,, if(this.minEndIndex  >  0)  {  this.minEndIndex  =  index  +  3;  }  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  this.maxEndIndex)-  1;  ,this.minEndIndex = Math.max(this.minEndIndex, this.maxEndIndex)- 1;
compilation error,131,replace,[CE] cannot find symbol min, this.minEndIndex  =  Math.min(-1,  -maxEndIndex);  ,this.minMiddleIndex = Math.min(-min, -1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex > 0) { this.minEndIndex = index * 3; >>
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  >=  index)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex < index + 1) { this.maxMiddleIndex = index + 2; }
compilation error,332,add,[CE] method updateBounds in class TimePeriodValues cannot be applied to given types;, ,this.maxEndIndex = -4 * 3 + 1; updateBounds(period, getDataItem(this.maxEndIndex));
compilation error,332,add,[CE] method updateBounds in class TimePeriodValues cannot be applied to given types;, ,this.maxEndIndex = -4 * 3 + 1; updateBounds(period, getDataItem(this.maxEndIndex), index);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.maxMiddleIndex < index * 2)) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(this.minMiddleIndex,  this.maxStartIndex  +  1);  ,this.minEndIndex = Math.min(this.minMiddleIndex, this.maxStartIndex + 1);
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex >= 0) { this.maxMiddleIndex = index + 2; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex = Math.max(this.maxStartIndex, this.maxEndIndex)/ 2;
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.maxEndIndex!= -1)? this.maxEndIndex : 0;
compilation error,131,replace,[CE] no suitable method found for min(int,String), this.minStartIndex  =  Math.min(minStartIndex,  minStartIndex  +  1);  ,this.minStartIndex = Math.min(minStartIndex, range + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minStartIndex  =  Math.min(minStartIndex,  minStartIndex  +  1);  ,this.minStartIndex = Math.min(10, minStartIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxEndIndex + 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minEndIndex,  this.maxEndIndex  +  1);  ,this.minMiddleIndex = Math.max(this.minEndIndex, this.maxEndIndex + 1);
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxStartIndex * 2);
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(minEndIndex,  Math.max(maxEndIndex,  minStartIndex));  ,this.maxEndIndex = Math.max(minEndIndex, Math.max(maxEndIndex, minStartIndex));
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index << 3)? 3 : index;
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex > index + 1) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxEndIndex >= index + 1) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,131,replace,, this.maxEndIndex  =  Math.max(maxEndIndex,  Math.max(maxStartIndex,  maxMiddleIndex));  ,this.maxEndIndex = Math.max(maxEndIndex, Math.max(maxStartIndex, maxMiddleIndex));
compilation error,332,add,[CE] incompatible types, ,this.maxEndIndex =(index >> 0)? 1 : 0;
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxStartIndex,  minMiddleIndex);  ,this.minEndIndex = Math.min(minEndIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxStartIndex, minMiddleIndex);
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex  +  1);  ,this.minEndIndex = Math.max(this.minMiddleIndex, this.maxMiddleIndex + 1);
compilation error,317,replace,[CE] illegal start of expression, if(this.maxEndIndex  <  index  +  1)  {  this.minEndIndex  =  index  +  2;  }  ,if(this.minEndIndex < index + 2) { this.minEndIndex = index + 2; if(this.maxEndIndex < index + 1) { this.minEndIndex = index + 2; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 3; if(this.minMiddleIndex % 2 == index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 7; if(end > maxEnd) { this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index + 1)) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 4; if(this.minMiddleIndex > index) { this.maxMiddleIndex = index * 7 + 1;
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  +  2;  if(this.maxEndIndex  >=  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 3; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.maxStartIndex =(this.minMiddleIndex!= -1)? this.minEndIndex : 0;
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  this.minStartIndex));  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxEndIndex * 2);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) } this.maxMiddleIndex = index + 1; }
increase failing tests,310,add, [FE] AssertionFailedError, ,this.minMiddleIndex = index * 4 - 1;
compilation error,131,add,[CE] cannot find symbol minReturnIndex, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, this.minReturnIndex));
compilation error,131,add,[CE] cannot find symbol minContiguousIndex, ,this.maxStartIndex = Math.max(this.maxMiddleIndex, Math.min(this.maxMiddleIndex, this.minContiguousIndex));
compilation error,552,add,[CE] cannot find symbol, ,return getDataItemCount() - this.maxMiddleIndex;
compilation error,317,add,[CE] not a statement, ,if(end > minEnd) { this.minEndIndex = index * 6; figured
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.minEndIndex = index + 3; >>
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(maxEndIndex,  maxStartIndex  +  1);  ,this.minEndIndex = Math.min(maxEndIndex, maxStartIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minStartIndex,  0));  ,this.minMiddleIndex = Math.min(minMiddleIndex, Math.max(minStartIndex, 0));
patch is same with buggy,310,replace,, this.maxMiddleIndex  =  index  *  4  -  1;  ,this.maxMiddleIndex = index * 4 - 1;
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, 1000);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= index * 2) } this.minEndIndex = index * 3; }
compilation error,317,replace,[CE] ')' expected, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 1; if(this.maxMiddleIndex > index 2) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,332,replace,, this.minEndIndex  =  0;  ,this.minEndIndex = 0;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  *  2;  if(this.maxMiddleIndex  <  0)  {  this.minEndIndex  =  index  *  3;  }  ,this.minEndIndex = index * 2; if(this.maxMiddleIndex < 0) { this.minEndIndex = index * 3; }
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.min(-maxMiddleIndex,  -minMiddleIndex);  ,this.maxMiddleIndex = Math.min(-maxMiddleIndex, -minMiddleIndex);
compilation error,332,add,[CE] incompatible types, ,this.minEndIndex = getDataItem(this.minEndIndex);
compilation error,332,add,[CE] possible loss of precision, ,this.minEndIndex = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(minMiddleIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  ,this.minStartIndex = Math.min(minMiddleIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxEndIndex, maxMiddleIndex);
compilation error,131,replace,[CE] cannot find symbol RANGE_DESCRIPTION, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex  -  1);  ,this.maxEndIndex =(this.maxEndIndex * this.RANGE_DESCRIPTION - 1);
compilation error,131,replace,[CE] cannot find symbol length, this.maxStartIndex  =  Math.max(this.maxStartIndex,  this.maxEndIndex  -  1);  ,this.maxEndIndex =(this.maxEndIndex * this.data.length - 1);
increase failing tests,131,replace, [FE] AssertionFailedError, this.maxStartIndex  =  Math.max(this.minMiddleIndex,  this.maxMiddleIndex);  ,this.minMiddleIndex = Math.min(this.minEndIndex, this.maxMiddleIndex - 1);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4) { this.maxMiddleIndex = index * 5; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 4) { this.maxMiddleIndex = index * 5;!=
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(this.minMiddleIndex,  Math.min(this.minEndIndex,  this.maxStartIndex));  ,this.minMiddleIndex = Math.min(minMiddleIndex, minStartIndex - 1);
compilation error,306,add,[CE] illegal start of expression, ,this.maxMiddleIndex = index * 5; if(this.maxMiddleIndex >= 0) } this.maxMiddleIndex = index * 5; }
patch is same with buggy,131,replace,, this.minStartIndex  =  Math.min(this.minMiddleIndex,  Math.max(this.minEndIndex,  minStartIndex));  ,this.minStartIndex = Math.min(this.minMiddleIndex, Math.max(this.minEndIndex, minStartIndex));
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  -minStartIndex);  ,this.minMiddleIndex = Math.min(minMiddleIndex, -minStartIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2; }
increase failing tests,317,add, [FE]  Size, ,this.minMiddleIndex = index * 2; if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2; }
patch is same with buggy,306,replace,, if(this.minEndIndex  >  0)  {  this.maxMiddleIndex  =  index  +  2;  }  ,if(this.minEndIndex > 0) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.minEndIndex  <  index  +  1)  {  this.maxMiddleIndex  =  index  +  2;  }  , 
compilation error,317,add,[CE] illegal start of expression, ,if(end < minEnd) { this.minEndIndex = index * 5; >>
compilation error,131,replace,[CE] cannot find symbol endIndex, this.minEndIndex  =  Math.min(minEndIndex,  2);  ,this.minEndIndex = Math.min(endIndex, 2);
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index) } this.minEndIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= index) >> this.minEndIndex = index * 6; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index * 4; }
increase failing tests,131,add, [FE]  Size, ,this.minMiddleIndex = Math.max(this.minStartIndex, 3);
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > minEnd) { this.minMiddleIndex = index / 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minMiddleIndex >= index) { long minEnd = getDataItem(this.minEndIndex).getPeriod().getEnd().getTime(); if(end > end) { this.minMiddleIndex = index / 2; }
compilation error,317,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex < index * 2) { this.maxMiddleIndex = index * 3;
compilation error,131,replace,[CE] bad operand types for binary operator '*', this.maxEndIndex  =  Math.max(this.maxEndIndex,  Math.min(this.minMiddleIndex,  this.maxEndIndex));  ,this.minStartIndex = Math.max(minStartIndex, this.range * 2);
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index) { this.maxMiddleIndex = index / 2 + 1; >>
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex < 0) } this.maxMiddleIndex = index - 3; }
compilation error,306,add,[CE] incompatible types, ,if(this.maxMiddleIndex >> 0) { this.maxMiddleIndex = index - 3; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex < index) { this.maxMiddleIndex = index * 5; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 6; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index * 5; if(this.minEndIndex < index) { this.maxMiddleIndex = index * 6; }
compilation error,317,replace,[CE] ')' expected, this.maxMiddleIndex  =  index  *  1;  if(this.maxMiddleIndex  <  index  *  2)  {  this.maxMiddleIndex  =  index  *  2;  }  ,this.maxMiddleIndex = index * 2; if(this.maxMiddleIndex > index 1) { this.maxMiddleIndex = index * 4; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  1;  if(this.maxMiddleIndex  >  index  +  2)  {  this.maxMiddleIndex  =  index  +  2;  }  ,this.maxMiddleIndex = index + 1; if(this.maxMiddleIndex > index + 2) { this.maxMiddleIndex = index + 2; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.maxEndIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; if(this.minEndIndex > index) { this.maxMiddleIndex = index + 1; }
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index - 2)) { this.maxMiddleIndex = index - 3; }
increase failing tests,131,add, [FE] AssertionFailedError, ,this.minMiddleIndex = Math.max(this.minMiddleIndex, this.minEndIndex + 1);
patch is same with buggy,131,replace,, int  minMiddleIndex  =  getMinMiddleIndex();  ,int minMiddleIndex = getMinMiddleIndex();
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  Math.max(minEndIndex,  1));  ,this.minEndIndex = Math.min(minEndIndex, Math.max(minEndIndex, 1));
compilation error,317,add,[CE] not a statement, ,if(this.minEndIndex >= index) { this.minEndIndex = index + 3; bodied
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { if(end > minEnd) { this.minEndIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { if(end > maxEnd) { this.minEndIndex = index * 5; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =(minMiddleIndex  <  0?  minMiddleIndex  :  minStartIndex);  ,this.minMiddleIndex =(minMiddleIndex < 0? minMiddleIndex : minStartIndex);
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =(minMiddleIndex  <  0?  minMiddleIndex  :  minStartIndex);  ,this.minMiddleIndex =(minMiddleIndex < 0? minMiddleIndex - 1 : minStartIndex);
compilation error,306,add,[CE] illegal start of expression, ,if(this.maxMiddleIndex > index * 5 - 1)) { this.maxMiddleIndex = index * 5; }
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.min(minEndIndex,  minStartIndex);  this.maxMiddleIndex  =  Math.max(maxMiddleIndex,  minEndIndex);  ,this.minEndIndex = Math.min(minEndIndex, minStartIndex); this.maxMiddleIndex = Math.max(maxMiddleIndex, minEndIndex);
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 8; if(end < minEnd) { this.minEndIndex = index * 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(end > minEnd) { this.minEndIndex = index * 8; if(end < minEnd) { this.minEndIndex = index * 9; }
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(this.maxMiddleIndex,  1);  , 
patch is same with buggy,131,replace,, this.minEndIndex  =  Math.max(this.minEndIndex,  this.maxMiddleIndex  +  1);  ,this.minEndIndex = Math.max(this.minEndIndex, this.maxMiddleIndex + 1);
patch is same with buggy,131,replace,, this.minMiddleIndex  =  Math.min(minMiddleIndex,  minEndIndex);  this.maxMiddleIndex  =  Math.max(maxEndIndex,  maxMiddleIndex);  ,this.minMiddleIndex = Math.min(minMiddleIndex, minEndIndex); this.maxMiddleIndex = Math.max(maxEndIndex, maxMiddleIndex);
compilation error,321,add,[CE] cannot find symbol miniEndIndex, ,this.miniEndIndex = index - 3;
patch is same with buggy,317,replace,, this.minEndIndex  =  index  +  2;  if(this.minEndIndex  <  index  +  2)  {  this.minEndIndex  =  index  +  3;  }  ,this.minEndIndex = index + 2; if(this.minEndIndex < index + 2) { this.minEndIndex = index + 3; }
increase failing tests,131,replace, [FE] AssertionFailedError, this.minMiddleIndex  =  Math.min(minMiddleIndex,  Math.max(minMiddleIndex,  1));  ,this.maxStartIndex = maxEndIndex - 2;
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(this.minEndIndex < 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex <= 0) { this.maxMiddleIndex = index * 3; }
compilation error,317,replace,[CE] illegal start of expression, if(this.minEndIndex  >=  0)  {  this.maxMiddleIndex  =  index  -  2;  }  ,if(this.minEndIndex <= 0) { this.maxMiddleIndex = index * 2; if(this.minEndIndex <= 0) { this.maxMiddleIndex = index * 3; }
compilation error,306,replace,[CE] illegal start of expression, this.maxMiddleIndex  =  index  -  2;  if(this.maxMiddleIndex  >  index  -  2)  {  this.maxMiddleIndex  =  index  -  3;  }  ,if(this.maxMiddleIndex > index - 2) { this.maxMiddleIndex = index - 3; >>
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 6; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 5; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index * 6; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 7; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.maxEndIndex >= 0) { this.minEndIndex = index * 6; if(this.maxEndIndex >= 0) { this.minEndIndex = index * 5; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex > index - 1) { this.maxMiddleIndex = index - 2; }
compilation error,317,replace,[CE] generics are not supported in -source 1.4, this.maxMiddleIndex  =  index  -  1;  if(this.minEndIndex  >  index  -  1)  {  this.maxMiddleIndex  =  index  -  2;  }  ,this.maxMiddleIndex = index - 1; if(this.minEndIndex > index - 1) < this.maxMiddleIndex = index - 2; }
compilation error,306,add,[CE] ')' expected, ,if(this.maxMiddleIndex > index) { this.maxMiddleIndex = index * 2 - 3; } else { getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime(); e = s +(e -
increase failing tests,131,replace, [FE] AssertionFailedError, this.minEndIndex  =  Math.min(this.minEndIndex,  Math.max(this.minMiddleIndex,  this.maxEndIndex));  ,this.minMiddleIndex = Math.min(minStartIndex, minStartIndex * 2);
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) { this.maxMiddleIndex = index + 3; }
compilation error,317,replace,[CE] generics are not supported in -source 1.4, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  ,this.maxMiddleIndex = index + 2; if(this.maxMiddleIndex > index + 1) < this.maxMiddleIndex = index + 3; }
patch is same with buggy,317,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.maxMiddleIndex  >  index  +  1)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,306,add,[CE] illegal start of expression, ,if(this.minMiddleIndex > index - 1) } this.maxMiddleIndex = index - 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; if(this.maxEndIndex >= 0) { this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; if(this.maxEndIndex >= 0) } this.minEndIndex = index + 1; }
compilation error,317,add,[CE] illegal start of expression, ,if(this.minEndIndex >= 0) { this.minEndIndex = index + 2; if(this.maxEndIndex >= 0)!= this.minEndIndex = index + 1; }
patch is same with buggy,306,replace,, this.maxMiddleIndex  =  index  +  2;  if(this.minMiddleIndex  <  0)  {  this.maxMiddleIndex  =  index  +  3;  }  , 
compilation error,131,add,[CE] cannot find symbol defaultInteger, ,this.maxEndIndex =(this.maxEndIndex < 0)? this.maxEndIndex : this.defaultInteger;
patch is same with buggy,131,replace,, this.maxMiddleIndex  =  Math.max(2,  -maxMiddleIndex);  ,this.maxMiddleIndex = Math.max(2, -maxMiddleIndex);
