bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	      Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);	      Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);	      Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  EntityCollection  entities  =  input!=  null?  null  :  input.getEntityCollection();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entities  =  input!=  null?  null  :  input.getEntityCollection();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input!=  null?  null  :  input.getEntityCollection();	      EntityCollection    entities    =    input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
5	[BUG]  [BUGGY]  EntityCollection  entities  =  input  ==  null?  null  :  input.getEntityCollection();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entities  =  input  ==  null?  null  :  input.getEntityCollection();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input  ==  null?  null  :  input.getEntityCollection();	      EntityCollection    entities    =    input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
6	[BUG]  [BUGGY]  EntityCollection  entities  =  this.input.getEntityCollection();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entities  =  this.input.getEntityCollection();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  this.input.getEntityCollection();	      EntityCollection    entities    =    input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  12);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  12);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  12);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  10);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  10);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  10);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
9	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  18);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  18);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  18);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    17);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingException( " ");	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  EntityCollection  entities  =  state.getEntityCollection();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entities  =  state.getEntityCollection();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  state.getEntityCollection();	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(input);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMissingName(input);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingName(input);	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  1);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  1);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  pendSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  pendSequence(start,  end).toString(),  16);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	pendSequence(start,  end).toString(),  16);	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMalformedException( " ");	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
16	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImplicitReturn();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entities  =  input.getImplicitReturn();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImplicitReturn();	      EntityCollection    entities    =    input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	      Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16  -  1);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16  -  1);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16  -  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  index).toString(),  16);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  index).toString(),  16);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  index).toString(),  16);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length());  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length());  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length());	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  16);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  16);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  16);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  1);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  1);  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end));  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end));  [BUGGY]    }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end));	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  input.getAnnotationIntrospector();  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  AnnotationIntrospector  input  =  input.getAnnotationIntrospector();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  input.getAnnotationIntrospector();	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  input.getAnchor();	      if(isHex)    {    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    }    else    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImmediateParentPointer();  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {    [BUGGY]  EntityCollection  entities  =  input.getImmediateParentPointer();  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImmediateParentPointer();	      EntityCollection    entities    =    input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
