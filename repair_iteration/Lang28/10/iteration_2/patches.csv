bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);	  Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    12);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  index),  end.toString(),  16);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  index),  end.toString(),  16);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  index),  end.toString(),  16);	  entityValue    =    Integer.parseInt(input.subSequence(start,    index).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
3	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  this.input.getAnnotationIntrospector();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  this.input.getAnnotationIntrospector();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  this.input.getAnnotationIntrospector();	  AnnotationIntrospector    input    =    input.getAnnotationIntrospector();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
4	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  this.entityIntrospector.getAnnotationIntrospector();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  this.entityIntrospector.getAnnotationIntrospector();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  this.entityIntrospector.getAnnotationIntrospector();	  AnnotationIntrospector    input    =    input.getAnnotationIntrospector();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
5	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  this.nfe.getAnnotationIntrospector();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  this.nfe.getAnnotationIntrospector();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  this.nfe.getAnnotationIntrospector();	  AnnotationIntrospector    input    =    input.getAnnotationIntrospector();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
6	[BUG]  [BUGGY]  int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);	  int    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
7	[BUG]  [BUGGY]  char  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  char  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	char  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	  int    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
8	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  12);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  12);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  12);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    input.toString(),    16);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
10	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
11	[BUG]  [BUGGY]  pendSequence(start,  end).toString(),  10);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  pendSequence(start,  end).toString(),  10);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	pendSequence(start,  end).toString(),  10);	  pendSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  PendSequence(start,  end).toString(),  10);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  PendSequence(start,  end).toString(),  10);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	PendSequence(start,  end).toString(),  10);	  pendSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  pendSequence(start,  end).toString(),  8);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  pendSequence(start,  end).toString(),  8);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	pendSequence(start,  end).toString(),  8);	  pendSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
14	[BUG]  [BUGGY]  pendSequence(start,  end).toString(),  12);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  pendSequence(start,  end).toString(),  12);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	pendSequence(start,  end).toString(),  12);	  pendSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
15	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  16  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  16  -  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  16  -  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16    -    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
16	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  index));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  index));  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  index));	  entityValue    =    Integer.parseInt(input.subSequence(start,    end));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
17	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString());  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString());	  entityValue    =    Integer.parseInt(input.subSequence(start,    end));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
18	[BUG]  [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  if(!isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(!isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(!isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  EntityCollection  entities  =  this.state.getEntityCollection();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  this.state.getEntityCollection();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  this.state.getEntityCollection();	  EntityCollection    entities    =    state.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  EntityCollection  entities  =  getEntityCollection();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  getEntityCollection();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  getEntityCollection();	  EntityCollection    entities    =    state.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
22	[BUG]  [BUGGY]  EntityCollection  entities  =  this.entityCollection.getEntityCollection();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  this.entityCollection.getEntityCollection();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  this.entityCollection.getEntityCollection();	  EntityCollection    entities    =    state.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
23	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
24	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  100);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  100);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  100);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  *  input.length());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  *  input.length());  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  *  input.length());	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16    +    input.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
26	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length()  -  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length()  -  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length()  -  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16    +    input.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
27	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17  +  input.length());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17  +  input.length());  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17  +  input.length());	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16    +    input.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
28	[BUG]  [BUGGY]  EntityCollection  entities  =(entityValue  ==  null)?  this.input.getEntityCollection()  :  null;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =(entityValue  ==  null)?  this.input.getEntityCollection()  :  null;  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =(entityValue  ==  null)?  this.input.getEntityCollection()  :  null;	  EntityCollection    entities    =    this.input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  EntityCollection  entities  =(entityValue  ==  null)?  this.input.getEntityCollection()  :  entityValue;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =(entityValue  ==  null)?  this.input.getEntityCollection()  :  entityValue;  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =(entityValue  ==  null)?  this.input.getEntityCollection()  :  entityValue;	  EntityCollection    entities    =    this.input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  *  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  *  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  *  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16    +    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
31	[BUG]  [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  100);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  100);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  100);	  Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(isHex)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  if(!isHex)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(!isHex)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(!isHex)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  this.input.getAnchor();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  this.input.getAnchor();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  this.input.getAnchor();	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
35	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  this.entityInput.getAnchor();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  this.entityInput.getAnchor();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  this.entityInput.getAnchor();	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
36	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  getAnchor();  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  getAnchor();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  getAnchor();	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
37	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImplicitEntity();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImplicitEntity();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImplicitEntity();	  EntityCollection    entities    =    input.getImplicitReturn();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImplicitReturn(index);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImplicitReturn(index);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImplicitReturn(index);	  EntityCollection    entities    =    input.getImplicitReturn();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  16);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  16);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  16);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end)+    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
40	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)/  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)/  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)/  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end)+    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
41	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  6);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  6);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  6);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end)+    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
42	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(entityValue);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingName(entityValue);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingName(entityValue);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMissingName(input);  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMissingName(input);  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(isHex)  {  aughtExceptionHandler.handleMissingName(input);  }	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(start);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingName(start);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingName(start);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(input,  firstChar);  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingName(input,  firstChar);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingName(input,  firstChar);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImmediateEntityCollection();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImmediateEntityCollection();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImmediateEntityCollection();	  EntityCollection    entities    =    input.getImmediateParentPointer();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
47	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImmediatePosition();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImmediatePosition();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImmediatePosition();	  EntityCollection    entities    =    input.getImmediateParentPointer();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
48	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(out);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingName(out);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingName(out);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
49	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(start,  input);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingName(start,  input);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingName(start,  input);	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
50	[BUG]  [BUGGY]  EntityValue  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityValue  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityValue  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	  entityValue    =    Integer.parseInt(input.subSequence(start,    index).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
51	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16  *  16  -  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16  *  16  -  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16  *  16  -  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    16    -    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
52	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImplicitEntityCollection();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImplicitEntityCollection();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImplicitEntityCollection();	  EntityCollection    entities    =    input.getImplicitReturn();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImplicitInt();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImplicitInt();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImplicitInt();	  EntityCollection    entities    =    input.getImplicitReturn();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  16  +  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  16  +  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  input.toString(),  16  +  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end),    input.toString(),    16);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
55	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  16;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  16;  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  input.getAnchor(),  16;	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
56	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  16);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  16);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  input.getAnchor(),  16);	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
57	[BUG]  [BUGGY]  EntityCollection  entities  =  input.getImmediateParentPointer(0);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  input.getImmediateParentPointer(0);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  input.getImmediateParentPointer(0);	  EntityCollection    entities    =    input.getImmediateParentPointer();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
58	[BUG]  [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);	  Integer    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    17);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16)+  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16)+  1;  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16)+  1;	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16    +    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
60	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  nfe);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  nfe);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMalformedException( " ",  nfe);	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  EntityCollection  entities  =  state.getEntityCollection(0);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  state.getEntityCollection(0);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  state.getEntityCollection(0);	  EntityCollection    entities    =    state.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  nfe);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  nfe);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	aughtExceptionHandler.handleMissingException( " ",  nfe);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  EntityValue  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityValue  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length());  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityValue  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16  +  input.length());	  entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16    +    input.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
64	[BUG]  [BUGGY]  EntityCollection  entities  =(this.input!=  null)?  null  :  this.input.getEntityCollection();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =(this.input!=  null)?  null  :  this.input.getEntityCollection();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =(this.input!=  null)?  null  :  this.input.getEntityCollection();	  EntityCollection    entities    =    this.input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  EntityCollection  entities  =  this.input.getEntityCollection(index);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  this.input.getEntityCollection(index);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  this.input.getEntityCollection(index);	  EntityCollection    entities    =    this.input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  18);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  18);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  18);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end)+    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  8);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  8);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)+  8);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end)+    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
69	[BUG]  [BUGGY]  EntityCollection  entities  =  this.input.getImmediateParentPointer();  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  this.input.getImmediateParentPointer();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  this.input.getImmediateParentPointer();	  EntityCollection    entities    =    input.getImmediateParentPointer();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
70	[BUG]  [BUGGY]  EntityCollection  entities  =  state.getOwner();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  state.getOwner();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  state.getOwner();	  EntityCollection    entities    =    state.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	int  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);	  int    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    16);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
72	[BUG]  [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(isHex)  {  aughtExceptionHandler.handleMalformedException( " ");  }  else  {  throw  new  NumberFormatException( " ");  }	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
73	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16).toString(),  10);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16).toString(),  10);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16).toString(),  10);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
74	[BUG]  [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  18);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  18);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  18);	  EntityCollection    entityValue    =    Integer.parseInt(input.subSequence(start,    end).toString(),    10);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
75	[BUG]  [BUGGY]  if(input!=  null)  {  aughtExceptionHandler.handleMissingName(input);  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  if(input!=  null)  {  aughtExceptionHandler.handleMissingName(input);  }  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	if(input!=  null)  {  aughtExceptionHandler.handleMissingName(input);  }	  aughtExceptionHandler.handleMissingName(input);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
76	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)-  1);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end)-  1);  [BUGGY]      }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end)-  1);	  entityValue    =    Integer.parseInt(input.subSequence(start,    end)+    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
77	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  end;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  end;  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  input.getAnchor(),  end;	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
78	[BUG]  [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  end);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  AnnotationIntrospector  input  =  input.getAnchor(),  end);  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	AnnotationIntrospector  input  =  input.getAnchor(),  end);	  AnnotationIntrospector    input    =    input.getAnchor();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
79	[BUG]  [BUGGY]  EntityCollection  entities  =  this.input.getImplicitReturn();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {      [BUGGY]  EntityCollection  entities  =  this.input.getImplicitReturn();  [BUGGY]      entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	EntityCollection  entities  =  this.input.getImplicitReturn();	  EntityCollection    entities    =    this.input.getEntityCollection();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
