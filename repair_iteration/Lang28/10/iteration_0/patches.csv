bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);		non-compiled	[CE]  <identifier>  expected	21	None	add
2	[BUG]  [BUGGY]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }		non-compiled	[CE]  <identifier>  expected	21	None	add
3	[BUG]  [BUGGY]    Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    Integer  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);		non-compiled	[CE]  <identifier>  expected	21	None	add
4	[BUG]  [BUGGY]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  else  {  throw  new  NumberFormatException( " ");  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  else  {  throw  new  NumberFormatException( " ");  }  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  else  {  throw  new  NumberFormatException( " ");  }		non-compiled	[CE]  <identifier>  expected	21	None	add
5	[BUG]  [BUGGY]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  else  {  [CE]  <identifier>  expected  [FE]            ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  else  {  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  else  {		non-compiled	[CE]  <identifier>  expected	21	None	add
6	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  [BUGGY]  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  	non-compiled	[CE]  <identifier>  expected	20	None	replace
7	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);  [BUGGY]  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  17);	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  	non-compiled	[CE]  <identifier>  expected	20	None	replace
8	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);  [CE]  <identifier>  expected  [FE]        ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);  [BUGGY]  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  12);	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  	non-compiled	[CE]  <identifier>  expected	20	None	replace
9	[BUG]  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16);  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16);  [BUGGY]  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	entityValue  =  Integer.parseInt(input.subSequence(start,  end),  16);	entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  	non-compiled	[CE]  <identifier>  expected	20	None	replace
10	[BUG]  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  8);		non-compiled	[CE]  <identifier>  expected	21	None	add
11	[BUG]  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);  [CE]  <identifier>  expected  [FE]      ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  15);		non-compiled	[CE]  <identifier>  expected	21	None	add
12	[BUG]  [BUGGY]    EntityCollection  entities  =  input.getEntityCollection();  [CE]  <identifier>  expected  [FE]    ComparisonFailure  [CONTEXT]  if(isHex)  {  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  16);  }  else  {  [BUGGY]    EntityCollection  entities  =  input.getEntityCollection();  [BUGGY]  entityValue  =  Integer.parseInt(input.subSequence(start,  end).toString(),  10);  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	57	57	1	replace	    EntityCollection  entities  =  input.getEntityCollection();		non-compiled	[CE]  <identifier>  expected	21	None	add
