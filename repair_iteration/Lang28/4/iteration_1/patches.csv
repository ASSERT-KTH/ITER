bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  end  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  end  =  input.length()  -  1;  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  input.length()  -  1;	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
2	[BUG]  [BUGGY]  int  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  end  =  input.length()  +  1;  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  input.length()  +  1;	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
3	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  end  =  input.length();  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  end  =  input.length();	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
4	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start  +  2);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  2);	  char    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  Integer  input  =  input.getIntValue();  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getIntValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
6	[BUG]  [BUGGY]  Integer  input  =  input.getEntityValue();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  Integer  input  =  input.getEntityValue();  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getEntityValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
7	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  +  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  Integer  input  =  input.getValue()  +  1;  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getValue()  +  1;	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(index);  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(index);	      boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start  +  1);  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  1);	      boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  ';';  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  ';';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)  ==  ';';	      boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index)+  1;  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(index)+  1;  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index)+  1;	  char    firstChar    =    input.charAt(start)+    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
12	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)+  2;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start)+  2;  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)+  2;	  char    firstChar    =    input.charAt(start)+    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
13	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)/  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start)/  1;  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)/  1;	  char    firstChar    =    input.charAt(start)+    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
14	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  String  firstChar  =  input.charAt(index);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	String  firstChar  =  input.charAt(index);	  char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
19	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
20	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
21	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
23	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  '#';  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  1)  ==  '#';	      boolean    isHex    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	14	None	replace
25	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)  ==  '#';  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(index  +  1)  ==  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index  +  1)  ==  '#';	      boolean    isHex    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)  ==  '#';  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start  +  1)  ==  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  1)  ==  '#';	      boolean    isHex    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
28	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
29	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(isHex)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
31	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
32	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
33	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
34	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
36	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  char  isHex  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  isHex  =  input.charAt(start);  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(start);	      int    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
42	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  isHex  =  input.charAt(index);  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(index);	      int    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  int  isHex  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  isHex  =  input.charAt(index);  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.charAt(index);	      int    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  int  isHex  =  input.length();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  isHex  =  input.length();  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.length();	      int    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  2);  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(index  +  2);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index  +  2);	  char    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  '#';  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  1)!=  '#';	      boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(index  +  1);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index  +  1);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(index);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(start);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
51	[BUG]  [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)+  3;  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start)+  3;  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)+  3;	  char    firstChar    =    input.charAt(start)+    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
54	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)+  4;  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start)+  4;  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)+  4;	  char    firstChar    =    input.charAt(start)+    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
55	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
57	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
58	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
59	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)!=  '#';  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start)!=  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)!=  '#';	      boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  <identifier>  expected	13	None	replace
68	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
70	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
71	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
72	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start!=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
73	[BUG]  [BUGGY]  int  end  =  input.length()  -  start;  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  end  =  input.length()  -  start;  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  input.length()  -  start;	      int    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
74	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
77	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(1);  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(1);	  char    firstChar    =    input.charAt(0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  int  isHex  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  int  isHex  =  input.charAt(start  +  1);  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.charAt(start  +  1);	      int    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
80	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  1)!=  ';';	      boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
81	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  '#';  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)  ==  '#';	      boolean    isHex    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	14	None	replace
82	[BUG]  [BUGGY]  char  isHex  =  input.charAt(start  +  1)  ==  '#';  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  isHex  =  input.charAt(start  +  1)  ==  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(start  +  1)  ==  '#';	      boolean    isHex    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	14	None	replace
83	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
84	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
85	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
86	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
87	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
88	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
90	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
91	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
92	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
93	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue();  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  Integer  input  =  input.getAscentValue();  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getAscentValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
94	[BUG]  [BUGGY]  Integer  input  =  input.getKey();  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  Integer  input  =  input.getKey();  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getKey();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
95	[BUG]  [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  while(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  while(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
99	[BUG]  [BUGGY]  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
100	[BUG]  [BUGGY]  while(input.charAt(start)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  while(input.charAt(start)!=  ';')  {  start++;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)!=  ';')  {  start++;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
101	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
102	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
103	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
104	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)-  1;  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  firstChar  =  input.charAt(start)-  1;  [BUGGY]    if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)-  1;	  char    firstChar    =    input.charAt(start)+    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
105	[BUG]  [BUGGY]  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
106	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
107	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
108	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
109	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  '#';  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)  ==  '#';	      boolean    isHex    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	14	None	replace
110	[BUG]  [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
111	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
112	[BUG]  [BUGGY]  char  isHex  =  input.charAt(start  +  1)!=  '#';  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  char  isHex  =  input.charAt(start  +  1)!=  '#';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(start  +  1)!=  '#';	      boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  <identifier>  expected	13	None	replace
113	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)!=  ';';  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  boolean  isHex  =  input.charAt(start)!=  ';';  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)!=  ';';	      boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
114	[BUG]  [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
115	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
116	[BUG]  [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
117	[BUG]  [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;    [BUGGY]  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]    char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	      if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
