bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
2	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(out!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
3	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(out!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
4	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
5	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
6	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
7	[BUG]  [BUGGY]  while(input.charAt(start)  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  ==  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  ==  ';')  {  start++;  }	  while(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
8	[BUG]  [BUGGY]  while(input.charAt(index)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(index)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(index)!=  ';')  {  start++;  }	  while(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
9	[BUG]  [BUGGY]  while(input.charAt(start  +  1)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start  +  1)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start  +  1)!=  ';')  {  start++;  }	  while(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
10	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
11	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
12	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
13	[BUG]  [BUGGY]  int  start  =  input.length();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  start  =  input.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
15	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
16	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
17	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  /  1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getValue()  /  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getValue()  /  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  -  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getValue()  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getValue()  -  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  2)!=  '#';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  2)!=  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  2)!=  '#';	  boolean    isHex    =    input.charAt(start    +    1)!=    '#';    	non-compiled	[CE]  <identifier>  expected	46	None	replace
20	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)  ==  ';')  {  start++;  }	  if(isHex)    {    if(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
21	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  start++;  }	  if(isHex)    {    if(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
22	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)!=  '#';  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start  +  1)!=  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  1)!=  '#';	  char    firstChar    =    input.charAt(start    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	26	None	replace
23	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start  +  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start  +  1);	  int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
24	[BUG]  [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
25	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  2);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start,  index  +  2);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start,  index  +  2);	  char    firstChar    =    input.charAt(index    +    2);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
26	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
27	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
28	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
29	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
30	[BUG]  [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
31	[BUG]  [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
32	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
33	[BUG]  [BUGGY]  Integer  input  =  input.getAscentInt();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getAscentInt();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getAscentInt();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
34	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getAscentIndex();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getAscentIndex();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
35	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  ';';  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  1)  ==  ';';	  boolean    isHex    =    input.charAt(start    +    1)!=    ';';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
36	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)!=  ';';  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start  +  1)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  1)!=  ';';	  boolean    isHex    =    input.charAt(start    +    1)!=    ';';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
37	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)!=  ';';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(index  +  1)!=  ';';	  boolean    isHex    =    input.charAt(start    +    1)!=    ';';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
38	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
39	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
40	[BUG]  [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
41	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  false;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
42	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index)  ==  '#';  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index)  ==  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(index)  ==  '#';	  boolean    isHex    =    input.charAt(start)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	81	None	replace
43	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(start);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  String  firstChar  =  input.charAt(start);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	String  firstChar  =  input.charAt(start);	  String    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
44	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
45	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getAssignedValue();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getAssignedValue();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
46	[BUG]  [BUGGY]  Integer  input  =  input.getIndex();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getIndex();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getIndex();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
47	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
48	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
49	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
50	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0);	  boolean    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  boolean  isHex  =  input.isHex();  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.isHex();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.isHex();	  boolean    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
53	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
54	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
55	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
56	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index)!=  '#';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index)!=  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(index)!=  '#';	  boolean    isHex    =    input.charAt(start)!=    '#';    	non-compiled	[CE]  <identifier>  expected	67	None	replace
57	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index)-  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index)-  1;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index)-  1;	  char    firstChar    =    input.charAt(start)-    1;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
58	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)-  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start  +  1)-  1;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  1)-  1;	  char    firstChar    =    input.charAt(start)-    1;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
59	[BUG]  [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
60	[BUG]  [BUGGY]  if(start!=  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
61	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
62	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)/  2;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start)/  2;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)/  2;	  char    firstChar    =    input.charAt(start)/    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
63	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index)/  1;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index)/  1;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index)/  1;	  char    firstChar    =    input.charAt(start)/    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
64	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)/  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start  +  1)/  1;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  1)/  1;	  char    firstChar    =    input.charAt(start)/    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)/  3;  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start)/  3;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)/  3;	  char    firstChar    =    input.charAt(start)/    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
67	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index  +  1)  ==  '#';  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  String  firstChar  =  input.charAt(index  +  1)  ==  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	String  firstChar  =  input.charAt(index  +  1)  ==  '#';	  char    firstChar    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
68	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(0)  ==  '#';  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(0)  ==  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(0)  ==  '#';	  char    firstChar    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
69	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  false;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
70	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
71	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
72	[BUG]  [BUGGY]  int  end  =  input.length()  -  start  +  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  -  start  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  input.length()  -  start  +  1;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
73	[BUG]  [BUGGY]  int  end  =  input.length()  +  start;  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  +  start;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  input.length()  +  start;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
74	[BUG]  [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
75	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
76	[BUG]  [BUGGY]  char  isHex  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(0);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(0);	  char    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
77	[BUG]  [BUGGY]  char  isHex  =  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(start  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(start  +  1);	  char    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
78	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(index  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(index  +  1);	  char    isHex    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
79	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
80	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
81	[BUG]  [BUGGY]  if(input!=  null)  {  if(start  ==  'x')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start  ==  'x')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start  ==  'x')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
82	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
83	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
84	[BUG]  [BUGGY]  if(input.charAt(start)!=  ':')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ':')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ':')  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
85	[BUG]  [BUGGY]  while(input.charAt(start)  >=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  >=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  >=  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
86	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
87	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
88	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
89	[BUG]  [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
90	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
91	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
92	[BUG]  [BUGGY]  if(!isHex)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(isHex)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
93	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  'x'  ||  start  ==  'X')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(start!=  'x'  ||  start  ==  'X')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  'x'  ||  start  ==  'X')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(isHex)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
94	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  'x'  ||  end  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(start!=  'x'  ||  end  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  'x'  ||  end  ==  'X')  {  start++;  isHex  =  true;  }	  if(isHex)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
95	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
96	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
99	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
100	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
101	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
102	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
103	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
104	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
105	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  false;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
106	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
107	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
108	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
109	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index)+  2;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index)+  2;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index)+  2;	  char    firstChar    =    input.charAt(start)+    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
111	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
112	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(index)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(index)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(index)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
113	[BUG]  [BUGGY]  if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
114	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
115	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
116	[BUG]  [BUGGY]  String  end  =  input.length();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  String  end  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	String  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
117	[BUG]  [BUGGY]  Char  end  =  input.length();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Char  end  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Char  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
118	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
119	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
120	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
121	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(index  +  1);	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
122	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  2);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  2);	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
123	[BUG]  [BUGGY]  if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(index!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
124	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
125	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  -1)  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  -1)  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  -1)  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
126	[BUG]  [BUGGY]  Integer  input  =  input.getEntity();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getEntity();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getEntity();	  Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
127	[BUG]  [BUGGY]  Integer  input  =  input.getEntryValue();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getEntryValue();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getEntryValue();	  Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
128	[BUG]  [BUGGY]  Integer  input  =  input.getEntryCount();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getEntryCount();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getEntryCount();	  Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
129	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
130	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  '#'  ||  input.charAt(1)  ==  '-';  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  '#'  ||  input.charAt(1)  ==  '-';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)  ==  '#'  ||  input.charAt(1)  ==  '-';	  boolean    isHex    =    input.charAt(0)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	109	None	replace
131	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  '#'  ||  input.charAt(1)  ==  '+';  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)  ==  '#'  ||  input.charAt(1)  ==  '+';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)  ==  '#'  ||  input.charAt(1)  ==  '+';	  boolean    isHex    =    input.charAt(0)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	109	None	replace
132	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
133	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
134	[BUG]  [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
135	[BUG]  [BUGGY]  if(start!=  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
136	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
137	[BUG]  [BUGGY]  int  isHex  =  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  isHex  =  input.charAt(index  +  1);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.charAt(index  +  1);	  int    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
138	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
139	[BUG]  [BUGGY]  if(index!=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(index!=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(index!=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input!=    null)    {    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
140	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input!=    null)    {    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
141	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  -1)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  -1)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  -1)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input!=    null)    {    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
142	[BUG]  [BUGGY]  int  isHex  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  isHex  =  input.length()  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.length()  +  1;	  int    isHex    =    input.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
143	[BUG]  [BUGGY]  int  isHex  =  input.length()  -  1;  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  isHex  =  input.length()  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.length()  -  1;	  int    isHex    =    input.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
144	[BUG]  [BUGGY]  char  isHex  =  input.length();  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.length();	  int    isHex    =    input.length();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
145	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
146	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
147	[BUG]  [BUGGY]  if(input.charAt(start)  ==  'x'  ||  input.charAt(end)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  'x'  ||  input.charAt(end)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  'x'  ||  input.charAt(end)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
148	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
149	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
150	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
151	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getIntValue()  +  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
152	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getIntValue()  -  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
153	[BUG]  [BUGGY]  Integer  input  =  input.getLongValue();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getLongValue();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getLongValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
154	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  ';';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)  ==  ';';	  boolean    isHex    =    input.charAt(0)    ==    ';';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
155	[BUG]  [BUGGY]  char  isHex  =  input.charAt(0)  ==  ';';  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(0)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(0)  ==  ';';	  boolean    isHex    =    input.charAt(0)    ==    ';';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
156	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(1)  ==  ';';  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(1)  ==  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(1)  ==  ';';	  boolean    isHex    =    input.charAt(0)    ==    ';';    	non-compiled	[CE]  <identifier>  expected	10	None	replace
157	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
158	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
159	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
160	[BUG]  [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
161	[BUG]  [BUGGY]  char  isHex  =  input.charAt(end);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(end);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(end);	  char    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
162	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
163	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
164	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)  ==  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
165	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1)  ==  '#';  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(index  +  1)  ==  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(index  +  1)  ==  '#';	  char    isHex    =    input.charAt(start    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	82	None	replace
166	[BUG]  [BUGGY]  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)!=  ':')  {  start++;  isHex  =  false;  }	  while(input.charAt(start)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
167	[BUG]  [BUGGY]  while(input.charAt(start)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  ==  ':')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
168	[BUG]  [BUGGY]  if(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
169	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  input.charAt(start);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  input.charAt(start);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index  +  1)+  input.charAt(start);	  int    firstChar    =    input.charAt(index    +    1)+    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
170	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start  +  1);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start  +  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start  +  1);	  int    firstChar    =    input.charAt(index    +    1)+    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
171	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1)+  input.charAt(index);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start  +  1)+  input.charAt(index);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start  +  1)+  input.charAt(index);	  int    firstChar    =    input.charAt(index    +    1)+    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
172	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(index  +  1);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(index  +  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index  +  1)+  input.charAt(index  +  1);	  int    firstChar    =    input.charAt(index    +    1)+    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
173	[BUG]  [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
174	[BUG]  [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
175	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
176	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
177	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
178	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)/  4;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start)/  4;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)/  4;	  char    firstChar    =    input.charAt(start)+    4;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
179	[BUG]  [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(index)!=  ';')  {  int  firstChar  =  input.charAt(index);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
180	[BUG]  [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
181	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1)!=  '#';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(index  +  1)!=  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(index  +  1)!=  '#';	  char    isHex    =    input.charAt(start    +    1)!=    '#';    	non-compiled	[CE]  <identifier>  expected	112	None	replace
182	[BUG]  [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
183	[BUG]  [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
184	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
185	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
186	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
187	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)  ==  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
188	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
189	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
190	[BUG]  [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
191	[BUG]  [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
192	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index)!=  ';';  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(index)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(index)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	113	None	replace
193	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)!=  ';';  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)!=  ';';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	113	None	replace
194	[BUG]  [BUGGY]  while(input.charAt(start)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  ==  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
195	[BUG]  [BUGGY]  while(input.charAt(index)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(index)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(index)!=  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
196	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  1;  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  1;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(index  +  1)+  1;	  char    firstChar    =    input.charAt(index)+    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
197	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
198	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
199	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
200	[BUG]  [BUGGY]  if(isHex)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(isHex)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
201	[BUG]  [BUGGY]  if(!isHex)  {  if(start!=  '.')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(start!=  '.')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(start!=  '.')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(isHex)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
202	[BUG]  [BUGGY]  if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
203	[BUG]  [BUGGY]  if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
204	[BUG]  [BUGGY]  nfe  =  input.getNumberInput();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  nfe  =  input.getNumberInput();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	nfe  =  input.getNumberInput();	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
205	[BUG]  [BUGGY]  nfe  =  input.getNumberInt();  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  nfe  =  input.getNumberInt();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	nfe  =  input.getNumberInt();	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
206	[BUG]  [BUGGY]  Integer  input  =  input.getInput();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getInput();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getInput();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
207	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
208	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start  +  1)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start  +  1)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start  +  1)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
209	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
210	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
211	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  '.')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  '.')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  '.')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
212	[BUG]  [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
213	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
214	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
215	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
216	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
217	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
218	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
219	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start  >=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start  >=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start  >=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
220	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
221	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
222	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getAscentValue()  +  1;	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
223	[BUG]  [BUGGY]  Integer  input  =  input.getAscent();  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Integer  input  =  input.getAscent();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Integer  input  =  input.getAscent();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
224	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(index  +  1)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
225	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(index  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(index  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(index  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
226	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  >=  -1)  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input!=    null)    {    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
227	[BUG]  [BUGGY]  if(start!=  -1)  {  if(isHex)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(isHex)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(isHex)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input!=    null)    {    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
228	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
229	[BUG]  [BUGGY]  while(input.charAt(start  +  1)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start  +  1)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start  +  1)!=  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
230	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
231	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
232	[BUG]  [BUGGY]  if(input!=  null)  {  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
233	[BUG]  [BUGGY]  if(start  <  =  0)  {  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0)  {  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0)  {  if(start  ==  'x'  ||  start  ==  'X')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
234	[BUG]  [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  'n')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  'n')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'n'  ||  start  ==  'r')  {  if(input.charAt(start)!=  'n')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
235	[BUG]  [BUGGY]  if(start  ==  '.')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  '.')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  '.')  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
236	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
237	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
238	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
239	[BUG]  [BUGGY]  if(input!=  null)  {  if(isHex)  {  start++;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(isHex)  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(isHex)  {  start++;  }	  if(isHex)    {    if(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
240	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
241	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
242	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
243	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
244	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
245	[BUG]  [BUGGY]  if(start!=  '.')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
246	[BUG]  [BUGGY]  if(start!=  '.')  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
247	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)-  2;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start)-  2;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)-  2;	  char    firstChar    =    input.charAt(start)+    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
248	[BUG]  [BUGGY]  if(!isHex)  {  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
249	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(0);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(0);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(0);	  int    firstChar    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
250	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  >=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
251	[BUG]  [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
252	[BUG]  [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  >=  -1)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
253	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
254	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
255	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
256	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
257	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
258	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
259	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start)  ==  '#';  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start)  ==  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start)  ==  '#';	  char    firstChar    =    input.charAt(index    +    1)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	25	None	replace
260	[BUG]  [BUGGY]  while(input!=  null  &&  input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input!=  null  &&  input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input!=  null  &&  input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
261	[BUG]  [BUGGY]  while(input!=  null  &&  input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input!=  null  &&  input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input!=  null  &&  input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
262	[BUG]  [BUGGY]  while(input!=  null)  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input!=  null)  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input!=  null)  {  start++;  isHex  =  true;  }	  while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
263	[BUG]  [BUGGY]  if(!isHex)  {  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
264	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
265	[BUG]  [BUGGY]  int  end  =  input.length()  *  start;  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  input.length()  *  start;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  input.length()  *  start;	  int    end    =    input.length()    -    start;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
266	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
267	[BUG]  [BUGGY]  if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(out!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
268	[BUG]  [BUGGY]  if(!isHex)  {  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(out  ==  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out    ==    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
269	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
270	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  }  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  }  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start  =  start;  }  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
271	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
272	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
273	[BUG]  [BUGGY]  while(input.charAt(start)  >=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  >=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  >=  ';')  {  start++;  }	  while(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
274	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
275	[BUG]  [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  -1)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
276	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
277	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
278	[BUG]  [BUGGY]  char  isHex  =  input.charAt(input.length());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(input.length());  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(input.length());	  char    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
279	[BUG]  [BUGGY]  while(input.charAt(start)  >=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  >=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  >=  ':')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
280	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
281	[BUG]  [BUGGY]  char  isHex  =  input.charAt(start  +  1)  >>  '#';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(start  +  1)  >>  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(start  +  1)  >>  '#';	  char    isHex    =    input.charAt(start    +    1)!=    '#';    	non-compiled	[CE]  <identifier>  expected	112	None	replace
282	[BUG]  [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
283	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
284	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
285	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
286	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
287	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
288	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
289	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
290	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
291	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
292	[BUG]  [BUGGY]  if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
293	[BUG]  [BUGGY]  if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
294	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
295	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(end!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(end!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(end!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
296	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(input!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
297	[BUG]  [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
298	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
299	[BUG]  [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
300	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)!=  ';';  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)!=  ';';	  boolean    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
301	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)!=  '-';  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)!=  '-';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)!=  '-';	  boolean    isHex    =    input.charAt(index);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
302	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
303	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
304	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  ':')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  ':')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  ':')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
305	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  '.')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  '.')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  '.')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
306	[BUG]  [BUGGY]  if(input!=  null)  {  if(start!=  '.')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start!=  '.')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start!=  '.')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
307	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
308	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
309	[BUG]  [BUGGY]  if(out  ==  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
310	[BUG]  [BUGGY]  if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
311	[BUG]  [BUGGY]  if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
312	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
313	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
314	[BUG]  [BUGGY]  if(out  ==  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
315	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0)!=  '#';  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(0)!=  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(0)!=  '#';	  boolean    isHex    =    input.charAt(0)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	109	None	replace
316	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(1)  ==  '#';  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(1)  ==  '#';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(1)  ==  '#';	  boolean    isHex    =    input.charAt(0)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	109	None	replace
317	[BUG]  [BUGGY]  char  end  =  input.length()  +  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  end  =  input.length()  +  1;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  end  =  input.length()  +  1;	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
318	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
319	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start  +  1)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
320	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
321	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
322	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start++;  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start++;  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input!=  null)  {  if(start!=  ';')  {  start++;  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
323	[BUG]  [BUGGY]  if(start!=  '.')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
324	[BUG]  [BUGGY]  if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
325	[BUG]  [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
326	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
327	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  2)!=  ';';  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  2)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  2)!=  ';';	  boolean    isHex    =    input.charAt(start    +    1)!=    ';';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
328	[BUG]  [BUGGY]  if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(out!=  null)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(out!=    null)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
329	[BUG]  [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(end!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
330	[BUG]  [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(out  ==  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
331	[BUG]  [BUGGY]  if(input!=  null)  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(start  ==  'x'  ||  start  ==  'X')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
332	[BUG]  [BUGGY]  nfe  =  input.getNumberFormat();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  nfe  =  input.getNumberFormat();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	nfe  =  input.getNumberFormat();	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
333	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(start  -  1);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(start  -  1);	  int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
334	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start  +  2);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index  +  1)+  input.charAt(start  +  2);	  int    firstChar    =    input.charAt(index    +    1)+    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
335	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
336	[BUG]  [BUGGY]  while(input.charAt(start)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
337	[BUG]  [BUGGY]  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(end)  ==  '-')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
338	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
339	[BUG]  [BUGGY]  if(start  >=  'x'  &&  end  <  =  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  'x'  &&  end  <  =  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  >=  'x'  &&  end  <  =  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
340	[BUG]  [BUGGY]  if(start!=  '.')  {  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  while(input.charAt(start)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
341	[BUG]  [BUGGY]  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
342	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ';')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
343	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
344	[BUG]  [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  end  ==  'X')  {  if(start!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
345	[BUG]  [BUGGY]  if(start!=  '.')  {  while(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  while(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  while(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
346	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  '#'  ||  input.charAt(start  +  1)  ==  ':';  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start)  ==  '#'  ||  input.charAt(start  +  1)  ==  ':';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)  ==  '#'  ||  input.charAt(start  +  1)  ==  ':';	  boolean    isHex    =    input.charAt(start)    ==    '#';    	non-compiled	[CE]  <identifier>  expected	81	None	replace
347	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';'  ||  input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';'  ||  input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)!=  ';'  ||  input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
348	[BUG]  [BUGGY]  if(input  ==  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input  ==  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input  ==  null)  {  if(index  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
349	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(end!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(end!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(end!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
350	[BUG]  [BUGGY]  if(start!=  '.')  {  while(input.charAt(start)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  while(input.charAt(start)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  while(input.charAt(start)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
351	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  end  =  output.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  end  =  output.length();	  int    end    =    input.length()    +    1;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
352	[BUG]  [BUGGY]  if(start  >=  'x'  &&  end  <  =  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  >=  'x'  &&  end  <  =  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  >=  'x'  &&  end  <  =  'X')  {  if(start!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
353	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
354	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
355	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
356	[BUG]  [BUGGY]  Character  end  =  input.length();  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Character  end  =  input.length();  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Character  end  =  input.length();	  char    end    =    input.length();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
357	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
358	[BUG]  [BUGGY]  if(start!=  '.')  {  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
359	[BUG]  [BUGGY]  while(input.charAt(start)!=  ':'  ||  input.charAt(start)!=  '#')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(start)!=  ':'  ||  input.charAt(start)!=  '#')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(start)!=  ':'  ||  input.charAt(start)!=  '#')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
360	[BUG]  [BUGGY]  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  while(input.charAt(start)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
361	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)!=  ';'  ||  input.charAt(start  +  1)  ==  ':';  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start)!=  ';'  ||  input.charAt(start  +  1)  ==  ':';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)!=  ';'  ||  input.charAt(start  +  1)  ==  ':';	  boolean    isHex    =    input.charAt(start)!=    ';';    	non-compiled	[CE]  <identifier>  expected	113	None	replace
362	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start)!=  '#'  ||  input.charAt(start  +  1)  ==  '-';  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start)!=  '#'  ||  input.charAt(start  +  1)  ==  '-';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start)!=  '#'  ||  input.charAt(start  +  1)  ==  '-';	  boolean    isHex    =    input.charAt(start)!=    '#';    	non-compiled	[CE]  <identifier>  expected	67	None	replace
363	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
364	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
365	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
366	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
367	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
368	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(end);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  input.charAt(end);  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  firstChar  =  input.charAt(index  +  1)+  input.charAt(end);	  int    firstChar    =    input.charAt(index    +    1)+    input.charAt(start);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
369	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
370	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
371	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
372	[BUG]  [BUGGY]  Char  firstChar  =  input.charAt(start)+  1;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  Char  firstChar  =  input.charAt(start)+  1;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	Char  firstChar  =  input.charAt(start)+  1;	  char    firstChar    =    input.charAt(start)+    4;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
373	[BUG]  [BUGGY]  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	while(input.charAt(end)!=  ';')  {  start++;  }	  while(input.charAt(start)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
374	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
375	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
376	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start  +  1);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  false;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index    +    1);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
377	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)+  2;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  firstChar  =  input.charAt(start  +  1)+  2;  [BUGGY]      if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  firstChar  =  input.charAt(start  +  1)+  2;	  char    firstChar    =    input.charAt(start)+    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
378	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(end)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(end)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
379	[BUG]  [BUGGY]  int  isHex  =  input.charAt(start  +  2);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  isHex  =  input.charAt(start  +  2);  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  isHex  =  input.charAt(start  +  2);	  int    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
380	[BUG]  [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  end  ==  'X')  {  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  end  ==  'X')  {  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
381	[BUG]  [BUGGY]  char  isHex  =  input.charAt(start  +  1)!=  ';';  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  char  isHex  =  input.charAt(start  +  1)!=  ';';  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	char  isHex  =  input.charAt(start  +  1)!=  ';';	  boolean    isHex    =    input.charAt(start    +    1)!=    ';';    	non-compiled	[CE]  <identifier>  expected	80	None	replace
382	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
383	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  false;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  false;  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	boolean  isHex  =  input.charAt(start  +  1)!=  false;	  boolean    isHex    =    input.charAt(start    +    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
384	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
385	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(index)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar!=  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(index);    if(firstChar    ==    'x'    ||    firstChar!=    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
386	[BUG]  [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(isHex)  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(isHex)  {  if(input.charAt(start)!=  ';')  {  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  }	  if(!isHex)    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ';')    {    start++;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
387	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
388	[BUG]  [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)  ==  ':')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)    ==    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
389	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
390	[BUG]  [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input.charAt(start)!=  ';')  {  int  end  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
391	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    int    end    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
392	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  '-')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    '-')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
393	[BUG]  [BUGGY]  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	int  start  =  start;  while(input.charAt(end)!=  ';')  {  start++;  isHex  =  true;  }	  if(start!=    -1)    {    if(input.charAt(start)!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
394	[BUG]  [BUGGY]  if(input!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(input.charAt(start)!=  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(start)!=    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
395	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  start++;  isHex  =  true;  }	  if(start    ==    'x'    ||    start    ==    'X')    {    if(input.charAt(start)!=    ';')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
396	[BUG]  [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  <  =  0x7F)  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
397	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'x')  {  if(input.charAt(start)!=  ';')  {  end  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(start    ==    'x')    {    if(input.charAt(start)!=    ';')    {    end    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
398	[BUG]  [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start  ==  'x'  ||  start  ==  'X')  {  if(start!=  ';')  {  int  start  =  start;  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
399	[BUG]  [BUGGY]  if(start!=  '.')  {  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(start!=  '.')  {  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(start!=  '.')  {  while(input.charAt(end)!=  ':')  {  start++;  isHex  =  true;  }	  if(input!=    null)    {    if(start!=    ';')    {    int    start    =    start;    while(input.charAt(end)!=    ':')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
400	[BUG]  [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(!isHex)  {  if(input.charAt(start)  ==  ';')  {  int  firstChar  =  input.charAt(start);  if(firstChar!=  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(input.charAt(index)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar!=    'x'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
401	[BUG]  [BUGGY]  if(input!=  null)  {  if(!isHex)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;      [BUGGY]  if(input!=  null)  {  if(!isHex)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  [BUGGY]      char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  end++;  }  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	41	41	1	replace	if(input!=  null)  {  if(!isHex)  {  int  firstChar  =  input.charAt(start);  if(firstChar  ==  'X'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }	  if(!isHex)    {    if(input.charAt(start)    ==    ';')    {    int    firstChar    =    input.charAt(start);    if(firstChar    ==    'X'    ||    firstChar    ==    'X')    {    start++;    isHex    =    true;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
