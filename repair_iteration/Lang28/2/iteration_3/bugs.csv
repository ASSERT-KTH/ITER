bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  2;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  1)+  2;	  char    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(index  +  1)+  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	String  firstChar  =  input.charAt(index  +  1)+  1;	  char    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
3	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)/  1;  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  +  1)/  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  1)/  1;	  char    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
4	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  /  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getFirstChild()  /  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  /  1;	  Integer    firstChar    =    input.getFirstChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  Integer  firstChar  =  input.getLastChild()  -  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getLastChild()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getLastChild()  -  1;	  Integer    firstChar    =    input.getFirstChild()    -    1;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
6	[BUG]  [BUGGY]  String  nfe  =  input.getEntityValue(index);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  nfe  =  input.getEntityValue(index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	String  nfe  =  input.getEntityValue(index);	  char    nfe    =    input.getEntityValue(index);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  Char  nfe  =  input.getEntityValue(index);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  nfe  =  input.getEntityValue(index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Char  nfe  =  input.getEntityValue(index);	  char    nfe    =    input.getEntityValue(index);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  char  nfe  =  input.getEntityValue(index  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  nfe  =  input.getEntityValue(index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  nfe  =  input.getEntityValue(index  +  1);	  char    nfe    =    input.getEntityValue(index);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  char  start  =  -1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  -1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  -1;	  int    start    =    -1;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
10	[BUG]  [BUGGY]  int  firstChar  =  input.getLastChild();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.getLastChild();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.getLastChild();	  int    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
11	[BUG]  [BUGGY]  int  firstChar  =  input.getFirstChild()  &  0xff;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.getFirstChild()  &  0xff;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.getFirstChild()  &  0xff;	  int    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
12	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1)!=  ';';  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  isHex  =  input.charAt(index  +  1)!=  ';';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  isHex  =  input.charAt(index  +  1)!=  ';';	  boolean    isHex    =    input.charAt(index    +    1)!=    ';';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
13	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)  ==  ';';  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)  ==  ';';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(index  +  1)  ==  ';';	  boolean    isHex    =    input.charAt(index    +    1)!=    ';';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
14	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1)  ==  ';';  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  isHex  =  input.charAt(index  +  1)  ==  ';';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  isHex  =  input.charAt(index  +  1)  ==  ';';	  boolean    isHex    =    input.charAt(index    +    1)!=    ';';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
15	[BUG]  [BUGGY]  char  start  =  input.length();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.length();	  int    start    =    input.length()    -    2;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
16	[BUG]  [BUGGY]  char  start  =  0L;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  0L;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
17	[BUG]  [BUGGY]  char  start  =  0;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  0;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  0;	  int    start    =    0L;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
18	[BUG]  [BUGGY]  double  start  =  0L;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  double  start  =  0L;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	double  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
19	[BUG]  [BUGGY]  String  firstChar  =  input.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.getFirstChild();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	String  firstChar  =  input.getFirstChild();	  char    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
20	[BUG]  [BUGGY]  Char  firstChar  =  input.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  firstChar  =  input.getFirstChild();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Char  firstChar  =  input.getFirstChild();	  char    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
21	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	String  firstChar  =  input.charAt(index);	  char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
22	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  2);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  2);	  char    firstChar    =    input.charAt(index);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
23	[BUG]  [BUGGY]  String  firstChar  =  input.charAt(index  +  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  firstChar  =  input.charAt(index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	String  firstChar  =  input.charAt(index  +  1);	  char    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
24	[BUG]  [BUGGY]  Char  firstChar  =  input.charAt(index  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  firstChar  =  input.charAt(index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Char  firstChar  =  input.charAt(index  +  1);	  char    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
25	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  3);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  +  3);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  3);	  int    firstChar    =    input.charAt(index    +    3);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
26	[BUG]  [BUGGY]  int  start  =  input.length  /  2  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length  /  2  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  /  2  +  1;	  int    start    =    input.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
27	[BUG]  [BUGGY]  int  start  =  input.length  /  2  +  index;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length  /  2  +  index;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  /  2  +  index;	  int    start    =    input.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
28	[BUG]  [BUGGY]  int  start  =  input.length  /  2  *  index;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length  /  2  *  index;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  /  2  *  index;	  int    start    =    input.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
29	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(start  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(start  +  1);	  int    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
30	[BUG]  [BUGGY]  double  firstChar  =  input.charAt(start  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  double  firstChar  =  input.charAt(start  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	double  firstChar  =  input.charAt(start  +  1);	  int    firstChar    =    input.charAt(start    +    1);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
31	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1)!=  '#';  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  isHex  =  input.charAt(index  +  1)!=  '#';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  isHex  =  input.charAt(index  +  1)!=  '#';	  boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
32	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)  ==  '#';  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)  ==  '#';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(index  +  1)  ==  '#';	  boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
33	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  '#';  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  '#';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(start  +  1)!=  '#';	  boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  int  start  =  input.indexOf('#')+  2;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('#')+  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#')+  2;	  int    start    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
35	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('#')+  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.lastIndexOf('#')+  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.lastIndexOf('#')+  1;	  int    start    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
36	[BUG]  [BUGGY]  char  start  =  input.indexOf('#')+  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.indexOf('#')+  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.indexOf('#')+  1;	  int    start    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
37	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(start);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(start);	  int    firstChar    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)/  2;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(index  +  1)/  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  +  1)/  2;	  int    firstChar    =    input.charAt(index    +    1)/    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
39	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)/  2;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  +  1)/  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  1)/  2;	  int    firstChar    =    input.charAt(index    +    1)/    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1)/  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(start  +  1)/  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(start  +  1)/  1;	  int    firstChar    =    input.charAt(index    +    1)/    1;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
41	[BUG]  [BUGGY]  char  start  =  input.indexOf('n',  index  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.indexOf('n',  index  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.indexOf('n',  index  +  1);	  int    start    =    input.indexOf('n',    index    +    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
42	[BUG]  [BUGGY]  int  start  =  input.indexOf('n',  index  +  1,  out);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('n',  index  +  1,  out);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('n',  index  +  1,  out);	  int    start    =    input.indexOf('n',    index    +    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
43	[BUG]  [BUGGY]  int  start  =  input.indexOf('n',  index  +  2);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('n',  index  +  2);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('n',  index  +  2);	  int    start    =    input.indexOf('n',    index    +    1);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
44	[BUG]  [BUGGY]  int  start  =  input.length  -  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  -  1;	  int    start    =    input.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
45	[BUG]  [BUGGY]  char  start  =  input.length  -  2;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.length  -  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.length  -  2;	  int    start    =    input.length    -    2;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
46	[BUG]  [BUGGY]  char  nfe  =  input.getEntityValue()  +  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  nfe  =  input.getEntityValue()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  nfe  =  input.getEntityValue()  +  1;	  int    nfe    =    input.getEntityValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue()  *  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue()  *  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue()  *  1;	  int    nfe    =    input.getEntityValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  char  start  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.length()  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.length()  -  1;	  int    start    =    input.length()    -    1;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(start  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(start  +  1)+  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(start  +  1)+  1;	  int    firstChar    =    input.charAt(start    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
50	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1)+  2;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(start  +  1)+  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(start  +  1)+  2;	  int    firstChar    =    input.charAt(start    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
51	[BUG]  [BUGGY]  char  nfe  =  input.getNumberValue();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  nfe  =  input.getNumberValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  nfe  =  input.getNumberValue();	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
52	[BUG]  [BUGGY]  int  nfe  =  input.getNumberValue()  +  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getNumberValue()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getNumberValue()  +  1;	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
53	[BUG]  [BUGGY]  int  nfe  =  input.getNumberValue()  *  2;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getNumberValue()  *  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getNumberValue()  *  2;	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
54	[BUG]  [BUGGY]  int  start  =  input.length  /  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length  /  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  /  1;	  int    start    =    input.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('#',  index);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.lastIndexOf('#',  index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.lastIndexOf('#',  index);	  int    start    =    input.lastIndexOf('#');    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
56	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('#',  index  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.lastIndexOf('#',  index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.lastIndexOf('#',  index  +  1);	  int    start    =    input.lastIndexOf('#');    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
57	[BUG]  [BUGGY]  char  start  =  input.lastIndexOf('#');  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.lastIndexOf('#');  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.lastIndexOf('#');	  int    start    =    input.lastIndexOf('#');    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  int  start  =  index  -  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  index  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  index  -  1;	  int    start    =    index;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
59	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  -  1);	  int    firstChar    =    input.charAt(index    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
60	[BUG]  [BUGGY]  String  nfe  =  input.getEntityValue();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  String  nfe  =  input.getEntityValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	String  nfe  =  input.getEntityValue();	  char    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
61	[BUG]  [BUGGY]  Char  nfe  =  input.getEntityValue();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Char  nfe  =  input.getEntityValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Char  nfe  =  input.getEntityValue();	  char    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
62	[BUG]  [BUGGY]  Character  nfe  =  input.getEntityValue();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Character  nfe  =  input.getEntityValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Character  nfe  =  input.getEntityValue();	  char    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
63	[BUG]  [BUGGY]  char  nfe  =  input.getEntityValue(index,  out);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  nfe  =  input.getEntityValue(index,  out);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  nfe  =  input.getEntityValue(index,  out);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
64	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  index  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index,  index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  index  +  1);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index,  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  1);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  out,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index,  out,  false);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  out,  false);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
67	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index  +  2);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index  +  2);	  int    nfe    =    input.getEntityValue(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
68	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index  +  1,  out);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index  +  1,  out);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index  +  1,  out);	  int    nfe    =    input.getEntityValue(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
69	[BUG]  [BUGGY]  char  start  =  output.length();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  output.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  output.length();	  int    start    =    output.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  int  start  =  output.length()  -  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  output.length()  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  output.length()  -  1;	  int    start    =    output.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  int  start  =  input.indexOf('#',  index  +  2);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('#',  index  +  2);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#',  index  +  2);	  int    start    =    input.indexOf('#',    index    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  int  start  =  input.indexOf('#',  index  +  3);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('#',  index  +  3);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#',  index  +  3);	  int    start    =    input.indexOf('#',    index    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
73	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  +  0xFFFF;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getFirstChild()  +  0xFFFF;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  +  0xFFFF;	  Integer    firstChar    =    input.getFirstChild()    &    0xFFFF;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
74	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  *  0xFFFF;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getFirstChild()  *  0xFFFF;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  *  0xFFFF;	  Integer    firstChar    =    input.getFirstChild()    &    0xFFFF;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
75	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  |  0xFFFF;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getFirstChild()  |  0xFFFF;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  |  0xFFFF;	  Integer    firstChar    =    input.getFirstChild()    &    0xFFFF;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
76	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index.length());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index.length());  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index.length());	  int    firstChar    =    input.charAt(input.length());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
77	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(input.length());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(input.length());  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(input.length());	  int    firstChar    =    input.charAt(input.length());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
78	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1,  out.length);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(index  +  1,  out.length);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  +  1,  out.length);	  int    firstChar    =    input.charAt(index    +    2);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
79	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  index  +  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('  ',  index  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('  ',  index  +  1);	  int    start    =    input.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
80	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  index);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('  ',  index);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('  ',  index);	  int    start    =    input.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
81	[BUG]  [BUGGY]  char  start  =  input.indexOf('  ');  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.indexOf('  ');  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.indexOf('  ');	  int    start    =    input.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
82	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('  ');  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.lastIndexOf('  ');  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.lastIndexOf('  ');	  int    start    =    input.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
83	[BUG]  [BUGGY]  char  start  =  input.indexOf('#',  out);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.indexOf('#',  out);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.indexOf('#',  out);	  int    start    =    input.indexOf('#',    out);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
84	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('#',  out);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.lastIndexOf('#',  out);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.lastIndexOf('#',  out);	  int    start    =    input.indexOf('#',    out);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
85	[BUG]  [BUGGY]  char  firstChar  =  input.length();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.length();  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.length();	  int    firstChar    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
86	[BUG]  [BUGGY]  int  firstChar  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.length()  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.length()  -  1;	  int    firstChar    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
87	[BUG]  [BUGGY]  int  firstChar  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.length()  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.length()  +  1;	  int    firstChar    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
88	[BUG]  [BUGGY]  Integer  start  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  start  =  input.length()  -  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  start  =  input.length()  -  1;	  Integer    start    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
89	[BUG]  [BUGGY]  Integer  start  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  start  =  input.length()  +  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  start  =  input.length()  +  1;	  Integer    start    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  Integer  start  =  input.length()  -  2;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  start  =  input.length()  -  2;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  start  =  input.length()  -  2;	  Integer    start    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(index);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(index);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
92	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(0);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(0);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(0);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
93	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(index  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(index  +  1);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
94	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(start  +  1);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
95	[BUG]  [BUGGY]  char  firstChar  =  input.getLastChild();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.getLastChild();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.getLastChild();	  Integer    firstChar    =    input.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
96	[BUG]  [BUGGY]  char  start  =  input.indexOf('#',  index);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.indexOf('#',  index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.indexOf('#',  index);	  int    start    =    input.indexOf('#',    index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
97	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(input.length()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(input.length()  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(input.length()  -  1);	  int    firstChar    =    input.charAt(input.length());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
98	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ',  out);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('  ',  out);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('  ',  out);	  int    start    =    input.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
99	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ')+  1;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('  ')+  1;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('  ')+  1;	  int    start    =    input.indexOf('    ');    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
100	[BUG]  [BUGGY]  int  start  =  input.length;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length;	  int    start    =    index;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
101	[BUG]  [BUGGY]  int  start  =  input.indexOf('#')/  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('#')/  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#')/  1;	  int    start    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
102	[BUG]  [BUGGY]  int  start  =  input.length  /  2  +  out.charAt(0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.length  /  2  +  out.charAt(0);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  /  2  +  out.charAt(0);	  int    start    =    input.length    /    2;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
103	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  out,  0);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index,  out,  0);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  out,  0);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
104	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  start);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index,  start);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  start);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
105	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(start  +  1)!=  ';';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(start  +  1)!=  ';';	  boolean    isHex    =    input.charAt(index    +    1)!=    ';';    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
106	[BUG]  [BUGGY]  char  start  =  input.indexOf('#',  index  +  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  start  =  input.indexOf('#',  index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  start  =  input.indexOf('#',  index  +  1);	  int    start    =    input.indexOf('#',    index    +    1);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  4;  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  4;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  1)+  4;	  char    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
108	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  -  1  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(index  -  1  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  -  1  +  1);	  int    firstChar    =    input.charAt(index    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
109	[BUG]  [BUGGY]  int  start  =  input.indexOf('#',  0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  input.indexOf('#',  0);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#',  0);	  int    start    =    input.indexOf('#',    index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
110	[BUG]  [BUGGY]  int  firstChar  =  input.getFirstChild()  +  1;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.getFirstChild()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.getFirstChild()  +  1;	  int    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
111	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  <  0xFFFF;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getFirstChild()  <  0xFFFF;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  <  0xFFFF;	  Integer    firstChar    =    input.getFirstChild()    &    0xFFFF;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
112	[BUG]  [BUGGY]  Integer  firstChar  =  input.getLastChild()  +  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Integer  firstChar  =  input.getLastChild()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getLastChild()  +  1;	  Integer    firstChar    =    input.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
113	[BUG]  [BUGGY]  NumberFormatException  nfe  =  input.getEntityValue();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  NumberFormatException  nfe  =  input.getEntityValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	NumberFormatException  nfe  =  input.getEntityValue();	  char    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
114	[BUG]  [BUGGY]  Character  firstChar  =  input.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  Character  firstChar  =  input.getFirstChild();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Character  firstChar  =  input.getFirstChild();	  char    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
115	[BUG]  [BUGGY]  char  isHex  =  input.charAt(index  +  1)  ==  '#';  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  char  isHex  =  input.charAt(index  +  1)  ==  '#';  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  isHex  =  input.charAt(index  +  1)  ==  '#';	  boolean    isHex    =    input.charAt(index    +    1)!=    '#';    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
116	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(input.length  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.charAt(input.length  -  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(input.length  -  1);	  int    firstChar    =    input.charAt(index    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
117	[BUG]  [BUGGY]  int  start  =  this.entityValue;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  start  =  this.entityValue;  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  this.entityValue;	  int    start    =    index;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
118	[BUG]  [BUGGY]  int  nfe  =  input.getCharIndex();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getCharIndex();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getCharIndex();	  int    nfe    =    input.getNumberValue();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
119	[BUG]  [BUGGY]  int  firstChar  =  input.getFirstChild()  &  0xFFFF;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  firstChar  =  input.getFirstChild()  &  0xFFFF;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.getFirstChild()  &  0xFFFF;	  int    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
120	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  out  +  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  int  nfe  =  input.getEntityValue(index,  out  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  out  +  1);	  int    nfe    =    input.getEntityValue(index,    out);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
121	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start++);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {      [BUGGY]  boolean  isHex  =  input.charAt(start++);  [BUGGY]      boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(start++);	  boolean    isHex    =    input.charAt(start);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
