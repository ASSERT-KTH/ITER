bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(start);  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(start);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  int  firstChar  =  input.length();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.length();  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.length();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index  +  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  nfe  =  input.getEntityValue(index  +  1);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index  +  1);	      int    nfe    =    input.getEntityValue(index);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  char  nfe  =  input.getEntityValue(index);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  char  nfe  =  input.getEntityValue(index);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  nfe  =  input.getEntityValue(index);	      int    nfe    =    input.getEntityValue(index);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue(index,  out);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  nfe  =  input.getEntityValue(index,  out);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue(index,  out);	      int    nfe    =    input.getEntityValue(index);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  int  start  =  input.indexOf('#',  index  +  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.indexOf('#',  index  +  1);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#',  index  +  1);	      int    start    =    input.indexOf('#');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  int  start  =  input.indexOf('#',  index);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.indexOf('#',  index);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#',  index);	      int    start    =    input.indexOf('#');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  int  start  =  input.lastIndexOf('#');  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.lastIndexOf('#');  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.lastIndexOf('#');	      int    start    =    input.indexOf('#');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  int  start  =  input.indexOf('#',  out);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.indexOf('#',  out);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#',  out);	      int    start    =    input.indexOf('#');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
10	[BUG]  [BUGGY]  char  nfe  =  input.getEntityValue();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  char  nfe  =  input.getEntityValue();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  nfe  =  input.getEntityValue();	      int    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  int  nfe  =  input.getEntityValue()  +  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  nfe  =  input.getEntityValue()  +  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getEntityValue()  +  1;	      int    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  int  nfe  =  input.getNumberValue();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  nfe  =  input.getNumberValue();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  nfe  =  input.getNumberValue();	      int    nfe    =    input.getEntityValue();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  int  start  =  output.length();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  output.length();  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  output.length();	  int    start    =    input.length()    +    2;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
14	[BUG]  [BUGGY]  int  start  =  input.length()  -  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.length()  -  1;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length()  -  1;	  int    start    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  int  start  =  input.length()  +  1;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.length()  +  1;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length()  +  1;	  int    start    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  int  start  =  input.length()  -  2;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.length()  -  2;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length()  -  2;	  int    start    =    input.length();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)/  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(index  +  1)/  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  +  1)/  1;	      int    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  char  firstChar  =  input.charAt(index  +  1)+  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  1)+  1;	      int    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  2;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(index  +  1)+  2;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  +  1)+  2;	      int    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
20	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index  +  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  char  firstChar  =  input.charAt(index  +  1);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index  +  1);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  2);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(index  +  2);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  +  2);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  +  3);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(index  +  3);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  +  3);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  int  start  =  input.length  +  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.length  +  1;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  +  1;	  int    start    =    input.length    +    2;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
24	[BUG]  [BUGGY]  int  start  =  input.length  /  2;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.length  /  2;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  /  2;	  int    start    =    input.length    +    2;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  int  start  =  input.length  -  2;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.length  -  2;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.length  -  2;	  int    start    =    input.length    +    2;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  Integer  firstChar  =  input.getLastChild();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  Integer  firstChar  =  input.getLastChild();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getLastChild();	      Integer    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  int  firstChar  =  input.getFirstChild();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.getFirstChild();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.getFirstChild();	      Integer    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  char  firstChar  =  input.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  char  firstChar  =  input.getFirstChild();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.getFirstChild();	      Integer    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  char  firstChar  =  input.charAt(index);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  char  firstChar  =  input.charAt(index);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	char  firstChar  =  input.charAt(index);	      int    firstChar    =    input.charAt(index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
30	[BUG]  [BUGGY]  int  start  =  0L;  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  0L;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  0L;	  int    start    =    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  int  start  =  index;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  index;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  index;	  int    start    =    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
32	[BUG]  [BUGGY]  int  start  =  -1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  -1;  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  -1;	  int    start    =    0;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  int  start  =  input.indexOf('#')+  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.indexOf('#')+  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('#')+  1;	      int    start    =    input.indexOf('#');    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  Integer  start  =  input.length();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  Integer  start  =  input.length();  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  start  =  input.length();	  int    start    =    input.length()    +    2;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(index  -  1);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(index  -  1);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(index  -  1);	      int    firstChar    =    input.charAt(index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(start  +  1);  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(start  +  1);	      int    firstChar    =    input.charAt(index    +    1);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
37	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  +  1;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  Integer  firstChar  =  input.getFirstChild()  +  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  +  1;	      Integer    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
38	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  -  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  Integer  firstChar  =  input.getFirstChild()  -  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  -  1;	      Integer    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
39	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)!=  '#';  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)!=  '#';  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(index  +  1)!=  '#';	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(start);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  boolean  isHex  =  input.charAt(start);  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(start);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)!=  ';';  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  boolean  isHex  =  input.charAt(index  +  1)!=  ';';  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	boolean  isHex  =  input.charAt(index  +  1)!=  ';';	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Integer  firstChar  =  input.getFirstChild()  &  0xFFFF;  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  Integer  firstChar  =  input.getFirstChild()  &  0xFFFF;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	Integer  firstChar  =  input.getFirstChild()  &  0xFFFF;	      Integer    firstChar    =    input.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(start  +  1)+  1;  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(start  +  1)+  1;  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(start  +  1)+  1;	      int    firstChar    =    input.charAt(index    +    1)+    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
44	[BUG]  [BUGGY]  int  start  =  input.indexOf('n',  index  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.indexOf('n',  index  +  1);  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('n',  index  +  1);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  int  start  =  input.indexOf('  ');  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  start  =  input.indexOf('  ');  [BUGGY]    boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  start  =  input.indexOf('  ');	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  int  firstChar  =  input.charAt(input.length());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {    [BUGGY]  int  firstChar  =  input.charAt(input.length());  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  while(input.charAt(end)  !=  ';')  {  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	38	38	1	replace	int  firstChar  =  input.charAt(input.length());	      int    firstChar    =    input.charAt(index);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
