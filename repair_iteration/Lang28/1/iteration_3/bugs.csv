bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()!=  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()!=  0)  {	  if(input!=    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
2	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  >=  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  >=  0)  {	  if(input!=    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
3	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  /  1;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getValue()  /  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getValue()  /  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
4	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getValue()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getValue()  -  1;	  Integer    input    =    input.getValue()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
5	[BUG]  [BUGGY]  int  index  =  input.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.length()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.length()  -  1;	  int    index    =    output.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
6	[BUG]  [BUGGY]  Integer  input  =  input.getEntryImpl()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryImpl()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryImpl()  -  1;	  Integer    input    =    input.getEntryImpl();    	non-compiled	[CE]  reached  end  of  file  while  parsing	53	None	replace
7	[BUG]  [BUGGY]  int  input  =  input.getEntryImpl();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getEntryImpl();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getEntryImpl();	  Integer    input    =    input.getEntryImpl();    	non-compiled	[CE]  reached  end  of  file  while  parsing	53	None	replace
8	[BUG]  [BUGGY]  int  isHex  =  input.length()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  isHex  =  input.length()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  isHex  =  input.length()  +  1;	  int    isHex    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
9	[BUG]  [BUGGY]  int  isHex  =  input.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  isHex  =  input.length()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  isHex  =  input.length()  -  1;	  int    isHex    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
10	[BUG]  [BUGGY]  int  isHex  =  input.length()  -  2;  [CE]  reached  end  of  file  while  parsing  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  isHex  =  input.length()  -  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  isHex  =  input.length()  -  2;	  int    isHex    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	47	None	replace
11	[BUG]  [BUGGY]  Integer  input  =  input.getEntryLength();  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryLength();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryLength();	  Integer    input    =    input.getEntryKey();    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
12	[BUG]  [BUGGY]  Integer  input  =  input.getEntryRaw();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryRaw();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryRaw();	  Integer    input    =    input.getEntryKey();    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
13	[BUG]  [BUGGY]  Integer  input  =  input.intValue()  /  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.intValue()  /  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.intValue()  /  1;	  Integer    input    =    input.intValue()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	38	None	replace
14	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)!=  '&')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)!=  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  2)!=  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    1)!=    '&')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)!=  '&')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)!=  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  1)!=  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    1)!=    '&')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  2)!=  '&')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.charAt(index  +  2)!=  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  2)!=  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    1)!=    '&')    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)!=  '#')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
18	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
19	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)!=  '#')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
20	[BUG]  [BUGGY]  Integer  input  =  input.getEntryCount()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryCount()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryCount()  +  1;	  Integer    input    =    input.getEntryCount();    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
21	[BUG]  [BUGGY]  Integer  input  =  input.getEntryCount()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryCount()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryCount()  -  1;	  Integer    input    =    input.getEntryCount();    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
22	[BUG]  [BUGGY]  Integer  input  =  input.getEntryCount()  *  2;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryCount()  *  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryCount()  *  2;	  Integer    input    =    input.getEntryCount();    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
23	[BUG]  [BUGGY]  Integer  end  =  input.intValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.intValue()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.intValue()  +  1;	  Integer    end    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
24	[BUG]  [BUGGY]  Integer  end  =  input.intValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.intValue()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.intValue()  -  1;	  Integer    end    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
25	[BUG]  [BUGGY]  int  end  =  input.intValue();  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.intValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.intValue();	  Integer    end    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
26	[BUG]  [BUGGY]  Integer  end  =  input.getEntityValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.getEntityValue()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.getEntityValue()  +  1;	  Integer    end    =    input.getEntityValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
27	[BUG]  [BUGGY]  Integer  end  =  input.getEntityValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.getEntityValue()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.getEntityValue()  -  1;	  Integer    end    =    input.getEntityValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
28	[BUG]  [BUGGY]  Integer  end  =  input.getEndValue();  [CE]  reached  end  of  file  while  parsing  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.getEndValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.getEndValue();	  Integer    end    =    input.getEntityValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
29	[BUG]  [BUGGY]  Integer  input  =  input.getEntry(index  +  1);  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntry(index  +  1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntry(index  +  1);	  Integer    input    =    input.getEntry(index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	replace
30	[BUG]  [BUGGY]  Integer  input  =  input.getEntry(index,  out);  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntry(index,  out);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntry(index,  out);	  Integer    input    =    input.getEntry(index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	replace
31	[BUG]  [BUGGY]  Integer  input  =  input.getEntry(index  -  1);  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntry(index  -  1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntry(index  -  1);	  Integer    input    =    input.getEntry(index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	replace
32	[BUG]  [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(Input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(Input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  index  ==  input.length())  {  if(Input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(Input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
33	[BUG]  [BUGGY]  int  end  =  out.getEnd();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  out.getEnd();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  out.getEnd();	  int    end    =    input.getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
34	[BUG]  [BUGGY]  int  end  =  output.getEnd();  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  output.getEnd();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  output.getEnd();	  int    end    =    input.getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
35	[BUG]  [BUGGY]  int  end  =  index.getEnd();  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  index.getEnd();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  index.getEnd();	  int    end    =    input.getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
36	[BUG]  [BUGGY]  int  start  =  end  +  3;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  end  +  3;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  end  +  3;	  int    start    =    index    +    3;    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
37	[BUG]  [BUGGY]  int  start  =  input.length  +  3;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length  +  3;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length  +  3;	  int    start    =    index    +    3;    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
38	[BUG]  [BUGGY]  int  start  =  input.length  +  4;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length  +  4;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length  +  4;	  int    start    =    index    +    4;    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
39	[BUG]  [BUGGY]  int  start  =  end  +  4;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  end  +  4;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  end  +  4;	  int    start    =    index    +    4;    	non-compiled	[CE]  reached  end  of  file  while  parsing	21	None	replace
40	[BUG]  [BUGGY]  Integer  input  =  input.doubleValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.doubleValue()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.doubleValue()  +  1;	  Integer    input    =    input.doubleValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	63	None	replace
41	[BUG]  [BUGGY]  Integer  input  =  input.doubleValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.doubleValue()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.doubleValue()  -  1;	  Integer    input    =    input.doubleValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	63	None	replace
42	[BUG]  [BUGGY]  int  input  =  input.doubleValue();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.doubleValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.doubleValue();	  Integer    input    =    input.doubleValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	63	None	replace
43	[BUG]  [BUGGY]  int  end  =  out.getLength()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  out.getLength()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  out.getLength()  -  1;	  int    end    =    input.getLength()    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
44	[BUG]  [BUGGY]  int  end  =  output.getLength()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  output.getLength()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  output.getLength()  -  1;	  int    end    =    input.getLength()    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	17	None	replace
45	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
46	[BUG]  [BUGGY]  if(index  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
47	[BUG]  [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  char  input  =  input.intValue();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  char  input  =  input.intValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	char  input  =  input.intValue();	  int    input    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
49	[BUG]  [BUGGY]  int  input  =  input.intValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.intValue()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.intValue()  -  1;	  int    input    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
50	[BUG]  [BUGGY]  int  input  =  input.intValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.intValue()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.intValue()  +  1;	  int    input    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
51	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.length()  >  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.length()  >  0)  {	  if(input!=    null    &&    input.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
52	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  >  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  >  0)  {	  if(input!=    null    &&    input.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
53	[BUG]  [BUGGY]  if(input  ==  null  &&  input.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  &&  input.length()  >  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  &&  input.length()  >  0)  {	  if(input!=    null    &&    input.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
54	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  index  +  1);  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#',  index  +  1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  index  +  1);	  int    index    =    input.indexOf('#',    index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
55	[BUG]  [BUGGY]  int  index  =  input.lastIndexOf('#',  index);  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.lastIndexOf('#',  index);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.lastIndexOf('#',  index);	  int    index    =    input.indexOf('#',    index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
56	[BUG]  [BUGGY]  int  start  =  input.length  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length  +  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length  +  2;	  int    start    =    index    +    2;    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
57	[BUG]  [BUGGY]  int  start  =  end  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  end  +  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  end  +  2;	  int    start    =    index    +    2;    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
58	[BUG]  [BUGGY]  int  start  =  input.length()  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length()  +  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length()  +  2;	  int    start    =    index    +    2;    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
59	[BUG]  [BUGGY]  out.write(input.charAt(index  +  1));  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  out.write(input.charAt(index  +  1));  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	out.write(input.charAt(index  +  1));	  out.write(input.charAt(index));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
60	[BUG]  [BUGGY]  out.write(input.charAt(index  +  2));  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  out.write(input.charAt(index  +  2));  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	out.write(input.charAt(index  +  2));	  out.write(input.charAt(index));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
61	[BUG]  [BUGGY]  out.write(input.charAt(0));  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  out.write(input.charAt(0));  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	out.write(input.charAt(0));	  out.write(input.charAt(index));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
62	[BUG]  [BUGGY]  out.write(Integer.toHexString(index));  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  out.write(Integer.toHexString(index));  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	out.write(Integer.toHexString(index));	  out.write(input.charAt(index));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
63	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index    +    2)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
64	[BUG]  [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
65	[BUG]  [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  >=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
66	[BUG]  [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
67	[BUG]  [BUGGY]  if(input!=  null  &&  input.charAt(index  +  2)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  &&  input.charAt(index  +  2)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.charAt(index  +  2)  ==  '&')  {	  if(input!=    null    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
68	[BUG]  [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(index.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
69	[BUG]  [BUGGY]  if(index!=  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index!=  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index!=  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(index.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
70	[BUG]  [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  >=  0  ||  index  ==  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(index.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
71	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  index  +  1  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  index  >=  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  index  +  1  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  >=  input.length())  {  if(index.charAt(index  +  1)  ==  '&'  ||  index  +  1  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(index.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
72	[BUG]  [BUGGY]  if(index  ==  0  ||  input.charAt(index  +  2)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  input.charAt(index  +  2)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  input.charAt(index  +  2)  ==  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    2)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
73	[BUG]  [BUGGY]  int  input  =  input.getEntityValue();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getEntityValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getEntityValue();	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
74	[BUG]  [BUGGY]  int  input  =  input.getValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getValue()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getValue()  -  1;	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
75	[BUG]  [BUGGY]  int  input  =  input.getValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getValue()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getValue()  +  1;	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
76	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.charAt(index)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index)  ==  '&')  {	  if(input    ==    null    ||    input.charAt(0)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
77	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)!=  '&')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)!=  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)!=  '&')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
78	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '&')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
79	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)!=  '&')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)!=  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)!=  '&')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
80	[BUG]  [BUGGY]  Integer  input  =  input.getInput();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getInput();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getInput();	  Integer    input    =    input.getEntry();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
81	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ',  out);  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.indexOf('  ',  out);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.indexOf('  ',  out);	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
82	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ',  index);  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.indexOf('  ',  index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.indexOf('  ',  index);	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
83	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ',  index  +  1);  [CE]  reached  end  of  file  while  parsing  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.indexOf('  ',  index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.indexOf('  ',  index  +  1);	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
84	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.lastIndexOf('  ');  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.lastIndexOf('  ');	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
85	[BUG]  [BUGGY]  int  end  =  out.getLength()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  out.getLength()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  out.getLength()  +  1;	  int    end    =    input.getLength()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
86	[BUG]  [BUGGY]  int  end  =  output.getLength()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  output.getLength()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  output.getLength()  +  1;	  int    end    =    input.getLength()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
87	[BUG]  [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
88	[BUG]  [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  >=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
89	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
90	[BUG]  [BUGGY]  if(index!=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index!=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index!=  0  ||  index  ==  input.length())  {  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)!=    '#')    {    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
91	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
92	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
93	[BUG]  [BUGGY]  if(input!=  null  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input!=    null    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
94	[BUG]  [BUGGY]  if(index!=  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index!=  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index!=  0  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
95	[BUG]  [BUGGY]  int  out  =  input.length();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  out  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  out  =  input.length();	  int    index    =    out.length();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
96	[BUG]  [BUGGY]  int  i  =  input.length();  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  i  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  i  =  input.length();	  int    index    =    out.length();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
97	[BUG]  [BUGGY]  char  index  =  input.length();  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  char  index  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	char  index  =  input.length();	  int    index    =    out.length();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
98	[BUG]  [BUGGY]  int  inputIndex  =  input.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  inputIndex  =  input.length()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.length()  -  1;	  int    inputIndex    =    input.length();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
99	[BUG]  [BUGGY]  int  inputIndex  =  input.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  inputIndex  =  input.length()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.length()  +  1;	  int    inputIndex    =    input.length();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
100	[BUG]  [BUGGY]  int  inputIndex  =  input.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  inputIndex  =  input.length()  -  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.length()  -  2;	  int    inputIndex    =    input.length();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
101	[BUG]  [BUGGY]  int  index  =  input.indexOf('#')+  2;  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#')+  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#')+  2;	  int    index    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
102	[BUG]  [BUGGY]  int  index  =  input.indexOf('#')/  1;  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#')/  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#')/  1;	  int    index    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
103	[BUG]  [BUGGY]  int  index  =  input.lastIndexOf('#')+  1;  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.lastIndexOf('#')+  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.lastIndexOf('#')+  1;	  int    index    =    input.indexOf('#')+    1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
104	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)  ==  '&'  ||  input.charAt(0)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)!=    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
105	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)!=    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
106	[BUG]  [BUGGY]  int  index  =  out.lastIndexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  out.lastIndexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  out.lastIndexOf('  ');	  int    index    =    input.lastIndexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	replace
107	[BUG]  [BUGGY]  int  index  =  output.lastIndexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  output.lastIndexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  output.lastIndexOf('  ');	  int    index    =    input.lastIndexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	replace
108	[BUG]  [BUGGY]  int  input  =  input.indexOf('  ',  index);  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.indexOf('  ',  index);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('  ',  index);	  int    input    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
109	[BUG]  [BUGGY]  int  input  =  input.indexOf('  ',  out);  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.indexOf('  ',  out);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('  ',  out);	  int    input    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
110	[BUG]  [BUGGY]  int  input  =  input.lastIndexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.lastIndexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.lastIndexOf('  ');	  int    input    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
111	[BUG]  [BUGGY]  int  input  =  input.indexOf('  ',  index  +  1);  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.indexOf('  ',  index  +  1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('  ',  index  +  1);	  int    input    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
112	[BUG]  [BUGGY]  if(input  ==  null  ||  input.equals(index))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.equals(index))  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.equals(index))  {	  if(input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
113	[BUG]  [BUGGY]  char  end  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  char  end  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	char  end  =  input.length();	  int    end    =    _input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
114	[BUG]  [BUGGY]  Integer  end  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.length();	  int    end    =    _input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	51	None	replace
115	[BUG]  [BUGGY]  int  start  =  input.length()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length()  +  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length()  +  1;	  int    start    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
116	[BUG]  [BUGGY]  int  start  =  input.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length()  -  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length()  -  1;	  int    start    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
117	[BUG]  [BUGGY]  int  start  =  index.length();  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  index.length();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  index.length();	  int    start    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	55	None	replace
118	[BUG]  [BUGGY]  Integer  input  =  input.getAssignedValue();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getAssignedValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getAssignedValue();	  Integer    input    =    input.getKey();    	non-compiled	[CE]  reached  end  of  file  while  parsing	58	None	replace
119	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  start  +  1);  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#',  start  +  1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  start  +  1);	  int    index    =    input.indexOf('#',    start);    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
120	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  end);  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#',  end);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  end);	  int    index    =    input.indexOf('#',    start);    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
121	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
122	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)!=  '#')  {	  if(input    ==    null    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
123	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
124	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)!=  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)!=  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
125	[BUG]  [BUGGY]  if(index  >=  -1)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  >=  -1)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  >=  -1)  {	  if(index!=    -1)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
126	[BUG]  [BUGGY]  if(index!=  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index!=  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index!=  0)  {	  if(index!=    -1)    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
127	[BUG]  [BUGGY]  if(index  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0)  {	  if(index    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
128	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf('.',  index);  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.lastIndexOf('.',  index);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.lastIndexOf('.',  index);	  int    end    =    input.lastIndexOf('.');    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
129	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf('.',  index  +  1);  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.lastIndexOf('.',  index  +  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.lastIndexOf('.',  index  +  1);	  int    end    =    input.lastIndexOf('.');    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
130	[BUG]  [BUGGY]  int  end  =  input.indexOf('.');  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.indexOf('.');  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.indexOf('.');	  int    end    =    input.lastIndexOf('.');    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
131	[BUG]  [BUGGY]  int  index  =  out.lastIndexOf('#');  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  out.lastIndexOf('#');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  out.lastIndexOf('#');	  int    index    =    input.lastIndexOf('#');    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
132	[BUG]  [BUGGY]  int  index  =  output.lastIndexOf('#');  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  output.lastIndexOf('#');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  output.lastIndexOf('#');	  int    index    =    input.lastIndexOf('#');    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
133	[BUG]  [BUGGY]  Integer  input  =  input.getAscentInt();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getAscentInt();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getAscentInt();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
134	[BUG]  [BUGGY]  Integer  input  =  input.intValue()  *  1;  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.intValue()  *  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.intValue()  *  1;	  Integer    input    =    input.intValue()    -    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	37	None	replace
135	[BUG]  [BUGGY]  int  index  =  this.entityValue.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  this.entityValue.length()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  this.entityValue.length()  -  1;	  int    index    =    this.entityValue.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
136	[BUG]  [BUGGY]  int  index  =  this.entityValue.length()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  this.entityValue.length()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  this.entityValue.length()  +  1;	  int    index    =    this.entityValue.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
137	[BUG]  [BUGGY]  int  index  =  this.entityValue.lastIndexOf('/');  [CE]  reached  end  of  file  while  parsing  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  this.entityValue.lastIndexOf('/');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  this.entityValue.lastIndexOf('/');	  int    index    =    this.entityValue.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
138	[BUG]  [BUGGY]  int  input  =  input.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.length()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.length()  -  1;	  int    input    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
139	[BUG]  [BUGGY]  int  input  =  input.length()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.length()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.length()  +  1;	  int    input    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
140	[BUG]  [BUGGY]  int  input  =  input.length()  -  2;  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.length()  -  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.length()  -  2;	  int    input    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
141	[BUG]  [BUGGY]  char  index  =  input.indexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  char  index  =  input.indexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	char  index  =  input.indexOf('  ');	  int    index    =    out.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
142	[BUG]  [BUGGY]  int  out  =  input.indexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  out  =  input.indexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  out  =  input.indexOf('  ');	  int    index    =    out.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
143	[BUG]  [BUGGY]  if(index  <  0  ||  index  >  input.length())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  index  >  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  >  input.length())  {	  if(index    <    0    ||    index    >=    input.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
144	[BUG]  [BUGGY]  if(input!=  null  ||  index  <  0  ||  index  >=  input.length())  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  index  <  0  ||  index  >=  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  index  <  0  ||  index  >=  input.length())  {	  if(index    <    0    ||    index    >=    input.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
145	[BUG]  [BUGGY]  if(index  <  0  ||  index  ==  input.length())  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  index  ==  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  ==  input.length())  {	  if(index    <    0    ||    index    >=    input.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
146	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  -1);  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#',  -1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  -1);	  int    index    =    input.indexOf('#',    out);    	non-compiled	[CE]  reached  end  of  file  while  parsing	1	None	replace
147	[BUG]  [BUGGY]  int  index  =  out.indexOf('#',  0);  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  out.indexOf('#',  0);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  out.indexOf('#',  0);	  int    index    =    input.indexOf('#',    0);    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
148	[BUG]  [BUGGY]  int  index  =  output.indexOf('#',  0);  [CE]  reached  end  of  file  while  parsing  [FE]                          ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  output.indexOf('#',  0);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  output.indexOf('#',  0);	  int    index    =    input.indexOf('#',    0);    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
149	[BUG]  [BUGGY]  int  index  =  input.lastIndexOf('#',  0);  [CE]  reached  end  of  file  while  parsing  [FE]                            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.lastIndexOf('#',  0);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.lastIndexOf('#',  0);	  int    index    =    input.indexOf('#',    0);    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
150	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {	  if(input    ==    null    ||    input.length()    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
151	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input    ==    null    ||    input.length()    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
152	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getIntValue()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getIntValue()  +  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
153	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getIntValue()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getIntValue()  -  1;	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
154	[BUG]  [BUGGY]  int  input  =  input.getIntValue();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getIntValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getIntValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
155	[BUG]  [BUGGY]  if(index  ==  0  ||  input  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  ==  0  ||  input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  0  ||  input  ==  null  ||  input.length()  ==  0)  {	  if(input    ==    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
156	[BUG]  [BUGGY]  if(input.charAt(index  +  1)!=  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.charAt(index  +  1)!=  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index  +  1)!=  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
157	[BUG]  [BUGGY]  Integer  input  =  input.getImplicitReturn();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getImplicitReturn();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getImplicitReturn();	  Integer    input    =    input.getEntry();    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
158	[BUG]  [BUGGY]  int  end  =  input.getLength()  /  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.getLength()  /  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.getLength()  /  1;	  int    end    =    input.getLength()    +    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	16	None	replace
159	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index)  ==  '&')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
160	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.charAt(index)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index)  ==  '&')  {	  if(input    ==    null    ||    input.charAt(0)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
161	[BUG]  [BUGGY]  char  input  =  input.getValue();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  char  input  =  input.getValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	char  input  =  input.getValue();	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
162	[BUG]  [BUGGY]  int  input  =  input.getInput();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getInput();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getInput();	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
163	[BUG]  [BUGGY]  int  end  =  input.getStart();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.getStart();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.getStart();	  int    end    =    input.getEnd();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
164	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  out.length)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  index  >=  out.length)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  >=  out.length)  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
165	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf('.',  out);  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.lastIndexOf('.',  out);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.lastIndexOf('.',  out);	  int    end    =    input.lastIndexOf('.');    	non-compiled	[CE]  reached  end  of  file  while  parsing	73	None	replace
166	[BUG]  [BUGGY]  int  i  =  input.indexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  i  =  input.indexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  i  =  input.indexOf('  ');	  int    index    =    out.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	29	None	replace
167	[BUG]  [BUGGY]  int  input  =  input.indexOf('  ')+  1;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.indexOf('  ')+  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('  ')+  1;	  int    input    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
168	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index    +    2)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
169	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  start  -  1);  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#',  start  -  1);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  start  -  1);	  int    index    =    input.indexOf('#',    start);    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
170	[BUG]  [BUGGY]  Integer  input  =  input.getAscentIndex();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getAscentIndex();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getAscentIndex();	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
171	[BUG]  [BUGGY]  if(input  ==  null  ||  index  <  0  ||  index  >=  input.length())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  index  <  0  ||  index  >=  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  index  <  0  ||  index  >=  input.length())  {	  if(index    <    0    ||    index    >=    input.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
172	[BUG]  [BUGGY]  Integer  input  =  input.getEntryImpl(index);  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryImpl(index);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryImpl(index);	  Integer    input    =    input.getEntryImpl();    	non-compiled	[CE]  reached  end  of  file  while  parsing	53	None	replace
173	[BUG]  [BUGGY]  Integer  input  =  input.getImpl();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getImpl();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getImpl();	  Integer    input    =    input.getEntryImpl();    	non-compiled	[CE]  reached  end  of  file  while  parsing	53	None	replace
174	[BUG]  [BUGGY]  Integer  input  =  input.getLongValue();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getLongValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getLongValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
175	[BUG]  [BUGGY]  int  inputIndex  =  input.index;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  inputIndex  =  input.index;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.index;	  int    inputIndex    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	60	None	replace
176	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ')+  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  end  =  input.indexOf('  ')+  1;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.indexOf('  ')+  1;	  int    end    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	74	None	replace
177	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  input.length)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  index  >=  input.length)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  >=  input.length)  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)!=    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
178	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
179	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index)  ==  '#')  {	  if(input    ==    null    ||    input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
180	[BUG]  [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  out  ==  null)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  out  ==  null)  {	  if(input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
181	[BUG]  [BUGGY]  Integer  input  =  input.getEntry(index).intValue();  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntry(index).intValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntry(index).intValue();	  Integer    input    =    input.getEntry(index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	52	None	replace
182	[BUG]  [BUGGY]  int  start  =  out.length  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  out.length  +  2;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  out.length  +  2;	  int    start    =    index    +    2;    	non-compiled	[CE]  reached  end  of  file  while  parsing	19	None	replace
183	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
184	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  output);  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#',  output);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  output);	  int    index    =    input.indexOf('#',    index);    	non-compiled	[CE]  reached  end  of  file  while  parsing	2	None	replace
185	[BUG]  [BUGGY]  if(index  <  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0)  {	  if(index    ==    -1)    {    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
186	[BUG]  [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  >=  0  ||  index  ==  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  >=  0  ||  index  ==  input.length())  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(Input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
187	[BUG]  [BUGGY]  int  index  =  input.indexOf('#')+  0;  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('#')+  0;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#')+  0;	  int    index    =    input.indexOf('#')+    1;    	non-compiled	[CE]  reached  end  of  file  while  parsing	54	None	replace
188	[BUG]  [BUGGY]  if(input  ==  null  ||  out.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  out.length()  ==  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  out.length()  ==  0)  {	  if(input!=    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
189	[BUG]  [BUGGY]  if(input  ==  null  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  &&  input.charAt(index  +  1)  ==  '&')  {	  if(input!=    null    &&    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
190	[BUG]  [BUGGY]  Integer  input  =  input.getEntryValue(index);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getEntryValue(index);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryValue(index);	  Integer    input    =    input.getEntryKey();    	non-compiled	[CE]  ';'  expected	8	None	replace
191	[BUG]  [BUGGY]  out.write(input.charAt(index)+  1);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  out.write(input.charAt(index)+  1);  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	out.write(input.charAt(index)+  1);	  out.write(input.charAt(index));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
192	[BUG]  [BUGGY]  int  index  =  output.length()  -  1;  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  output.length()  -  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  output.length()  -  1;	  int    index    =    output.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
193	[BUG]  [BUGGY]  char  input  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  char  input  =  input.length();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	char  input  =  input.length();	  int    input    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	71	None	replace
194	[BUG]  [BUGGY]  Integer  end  =  input.intValue()  +  2;  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.intValue()  +  2;  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.intValue()  +  2;	  Integer    end    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
195	[BUG]  [BUGGY]  int  index  =  input.indexOf('n',  out);  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('n',  out);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('n',  out);	  int    index    =    this.entityValue.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	42	None	replace
196	[BUG]  [BUGGY]  int  input  =  input.indexOf('  ',  start);  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.indexOf('  ',  start);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('  ',  start);	  int    input    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	75	None	replace
197	[BUG]  [BUGGY]  if(input!=  null  &&  input.length()  <  =  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  &&  input.length()  <  =  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.length()  <  =  0)  {	  if(input!=    null    &&    input.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
198	[BUG]  [BUGGY]  Integer  end  =  input.getEnd();  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.getEnd();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.getEnd();	  Integer    end    =    input.getEntityValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	56	None	replace
199	[BUG]  [BUGGY]  int  index  =  input.lastIndexOf('#',  start);  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.lastIndexOf('#',  start);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.lastIndexOf('#',  start);	  int    index    =    input.indexOf('#',    start);    	non-compiled	[CE]  reached  end  of  file  while  parsing	70	None	replace
200	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(0)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  ||  input.charAt(0)  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(0)  ==  '&')  {	  if(input    ==    null    ||    input.charAt(0)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
201	[BUG]  [BUGGY]  if(index  <  0  ||  index  +  1  >=  input.length())  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  <  0  ||  index  +  1  >=  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  +  1  >=  input.length())  {	  if(index    <    0    ||    index    >=    input.length())    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
202	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getAscentValue()  +  1;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getAscentValue()  +  1;	  Integer    input    =    input.getAscentValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	67	None	replace
203	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
204	[BUG]  [BUGGY]  if(index  >=  0  &&  index  <  input.length())  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(index  >=  0  &&  index  <  input.length())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  >=  0  &&  index  <  input.length())  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)!=    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
205	[BUG]  [BUGGY]  int  input  =  input.lastIndexOf('#');  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.lastIndexOf('#');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.lastIndexOf('#');	  int    index    =    input.lastIndexOf('#');    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
206	[BUG]  [BUGGY]  int  inputIndex  =  input.lastIndexOf('#');  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  inputIndex  =  input.lastIndexOf('#');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.lastIndexOf('#');	  int    index    =    input.lastIndexOf('#');    	non-compiled	[CE]  reached  end  of  file  while  parsing	3	None	replace
207	[BUG]  [BUGGY]  int  input  =  input.getAscentValue();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getAscentValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getAscentValue();	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
208	[BUG]  [BUGGY]  int  input  =  input.getData();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.getData();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getData();	  int    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	59	None	replace
209	[BUG]  [BUGGY]  int  index  =  input.indexOf('n');  [CE]  reached  end  of  file  while  parsing  [FE]                      ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  index  =  input.indexOf('n');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('n');	  int    index    =    output.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	41	None	replace
210	[BUG]  [BUGGY]  if(input  ==  null  ||  input.isEmpty())  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.isEmpty())  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.isEmpty())  {	  if(input    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
211	[BUG]  [BUGGY]  if(input!=  null  &&  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  &&  input.length()  ==  0)  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.length()  ==  0)  {	  if(input!=    null    ||    input.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
212	[BUG]  [BUGGY]  if(input!=  null  &&  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  &&  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index    +    2)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
213	[BUG]  [BUGGY]  int  input  =  input.intValue()  &  0xFFFF;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.intValue()  &  0xFFFF;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.intValue()  &  0xFFFF;	  int    input    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	39	None	replace
214	[BUG]  [BUGGY]  if(input!=  null  &&  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input!=  null  &&  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    &&    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
215	[BUG]  [BUGGY]  int  start  =  input.length()  +  3;  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  start  =  input.length()  +  3;  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length()  +  3;	  int    start    =    index    +    3;    	non-compiled	[CE]  reached  end  of  file  while  parsing	20	None	replace
216	[BUG]  [BUGGY]  int  inputIndex  =  input.lastIndexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  inputIndex  =  input.lastIndexOf('  ');  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.lastIndexOf('  ');	  int    index    =    input.lastIndexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	31	None	replace
217	[BUG]  [BUGGY]  Integer  end  =  input.doubleValue();  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  end  =  input.doubleValue();  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.doubleValue();	  Integer    end    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	46	None	replace
218	[BUG]  [BUGGY]  Integer  input  =  input.getValueImpl();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getValueImpl();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getValueImpl();	  Integer    input    =    input.getEntryImpl();    	non-compiled	[CE]  reached  end  of  file  while  parsing	53	None	replace
219	[BUG]  [BUGGY]  Integer  input  =  input.getImplicitValue();  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  Integer  input  =  input.getImplicitValue();  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getImplicitValue();	  Integer    input    =    input.getIntValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	13	None	replace
220	[BUG]  [BUGGY]  int  input  =  input.indexOf('#',  0);  [CE]  reached  end  of  file  while  parsing  [FE]                        ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  int  input  =  input.indexOf('#',  0);  [BUGGY]      if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('#',  0);	  int    index    =    input.indexOf('#',    0);    	non-compiled	[CE]  reached  end  of  file  while  parsing	4	None	replace
221	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    2)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
222	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    2)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
223	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {        [BUGGY]  if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {  [BUGGY]      int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(0)  ==  '#')  {	  if(input.length()    ==    0    ||    input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
