bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  out);  [CE]  cannot  find  symbol  out  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.indexOf('#',  out);  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  out);	      int    index    =    input.indexOf('#');    	non-compiled	[CE]  cannot  find  symbol  out	10	None	replace
2	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  index);  [CE]  self-reference  in  initializer  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.indexOf('#',  index);  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  index);	      int    index    =    input.indexOf('#');    	non-compiled	[CE]  self-reference  in  initializer	10	None	replace
3	[BUG]  [BUGGY]  int  index  =  input.lastIndexOf('#');  [CE]  cannot  find  symbol  input  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.lastIndexOf('#');  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.lastIndexOf('#');	      int    index    =    input.indexOf('#');    	non-compiled	[CE]  cannot  find  symbol  input	10	None	replace
4	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  0);  [CE]  cannot  find  symbol  input  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.indexOf('#',  0);  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  0);	      int    index    =    input.indexOf('#');    	non-compiled	[CE]  cannot  find  symbol  input	10	None	replace
5	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  2)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  Integer  input  =  input.getEntryKey();  [CE]  variable  input  is  already  defined  in  class  NumericEntityUnescaper  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntryKey();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryKey();	      Integer    input    =    input.getEntryValue();    	non-compiled	[CE]  variable  input  is  already  defined  in  class  NumericEntityUnescaper	18	None	replace
9	[BUG]  [BUGGY]  Integer  input  =  input.getEntry();  [CE]  self-reference  in  initializer  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntry();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntry();	      Integer    input    =    input.getEntryValue();    	non-compiled	[CE]  self-reference  in  initializer	18	None	replace
10	[BUG]  [BUGGY]  Integer  input  =  input.getEntryCount();  [CE]  self-reference  in  initializer  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntryCount();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryCount();	      Integer    input    =    input.getEntryValue();    	non-compiled	[CE]  self-reference  in  initializer	18	None	replace
11	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  2)  ==  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
12	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)!=  '&')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)!=  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)!=  '&')  {	  if(input    ==    null    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
13	[BUG]  [BUGGY]  Integer  input  =  input.getIntValue();  [CE]  self-reference  in  initializer  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getIntValue();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getIntValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  self-reference  in  initializer	8	None	replace
14	[BUG]  [BUGGY]  Integer  input  =  input.getValue()  +  1;  [CE]  self-reference  in  initializer  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getValue()  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getValue()  +  1;	      Integer    input    =    input.getValue();    	non-compiled	[CE]  self-reference  in  initializer	8	None	replace
15	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
16	[BUG]  [BUGGY]  int  end  =  input.getLength()  +  1;  [CE]  cannot  find  symbol  input  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.getLength()  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.getLength()  +  1;	      int    end    =    input.getLength();    	non-compiled	[CE]  cannot  find  symbol  input	19	None	replace
17	[BUG]  [BUGGY]  int  end  =  input.getLength()  -  1;  [CE]  cannot  find  symbol  input  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.getLength()  -  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.getLength()  -  1;	      int    end    =    input.getLength();    	non-compiled	[CE]  cannot  find  symbol  input	19	None	replace
18	[BUG]  [BUGGY]  int  end  =  input.getEnd();  [CE]  cannot  find  symbol  input  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.getEnd();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.getEnd();	      int    end    =    input.getLength();    	non-compiled	[CE]  cannot  find  symbol  input	19	None	replace
19	[BUG]  [BUGGY]  int  start  =  index  +  2;  [CE]  cannot  find  symbol  index  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  index  +  2;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  index  +  2;	      int    start    =    index    +    1;    	non-compiled	[CE]  cannot  find  symbol  index	13	None	replace
20	[BUG]  [BUGGY]  int  start  =  index  +  3;  [CE]  cannot  find  symbol  index  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  index  +  3;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  index  +  3;	      int    start    =    index    +    1;    	non-compiled	[CE]  cannot  find  symbol  index	13	None	replace
21	[BUG]  [BUGGY]  int  start  =  index  +  4;  [CE]  cannot  find  symbol  index  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  index  +  4;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  index  +  4;	      int    start    =    index    +    1;    	non-compiled	[CE]  cannot  find  symbol  index	13	None	replace
22	[BUG]  [BUGGY]  int  end  =  out.length();  [CE]  cannot  find  symbol  out  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  out.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  out.length();	      int    end    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  out	14	None	replace
23	[BUG]  [BUGGY]  int  end  =  output.length();  [CE]  cannot  find  symbol  output  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  output.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  output.length();	      int    end    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  output	14	None	replace
24	[BUG]  [BUGGY]  int  end  =  index.length();  [CE]  cannot  find  symbol  index  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  index.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  index.length();	      int    end    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  index	14	None	replace
25	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  2)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  input.charAt(index  +  2)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  2)  ==  '&')  {	  if(input!=    null    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
28	[BUG]  [BUGGY]  Integer  input  =  input.getEntity();  [CE]  self-reference  in  initializer  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntity();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntity();	      Integer    input    =    input.getEntityValue();    	non-compiled	[CE]  self-reference  in  initializer	12	None	replace
29	[BUG]  [BUGGY]  int  index  =  out.indexOf('  ');  [CE]  cannot  find  symbol  out  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  out.indexOf('  ');  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  out.indexOf('  ');	      int    index    =    input.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol  out	9	None	replace
30	[BUG]  [BUGGY]  int  index  =  output.indexOf('  ');  [CE]  cannot  find  symbol  output  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  output.indexOf('  ');  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  output.indexOf('  ');	      int    index    =    input.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol  output	9	None	replace
31	[BUG]  [BUGGY]  int  index  =  input.lastIndexOf('  ');  [CE]  cannot  find  symbol  input  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.lastIndexOf('  ');  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.lastIndexOf('  ');	      int    index    =    input.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol  input	9	None	replace
32	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index    +    2)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
34	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)!=  '#')  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
35	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(input.charAt(index)!=  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(input.charAt(index)!=  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(input.charAt(index)!=  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
36	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(index.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(index.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(index.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
37	[BUG]  [BUGGY]  Integer  input  =  input.intValue()  -  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.intValue()  -  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.intValue()  -  1;	      Integer    input    =    input.intValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
38	[BUG]  [BUGGY]  Integer  input  =  input.intValue()  +  1;  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.intValue()  +  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.intValue()  +  1;	      Integer    input    =    input.intValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  int  input  =  input.intValue();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.intValue();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.intValue();	      Integer    input    =    input.intValue();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  int  index  =  out.length();  [CE]  cannot  find  symbol  out  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  out.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  out.length();	      int    index    =    input.length();    	non-compiled	[CE]  cannot  find  symbol  out	11	None	replace
41	[BUG]  [BUGGY]  int  index  =  output.length();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  output.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  output.length();	      int    index    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
42	[BUG]  [BUGGY]  int  index  =  this.entityValue.length();  [CE]  reached  end  of  file  while  parsing  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  this.entityValue.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  this.entityValue.length();	      int    index    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
43	[BUG]  [BUGGY]  if(input  ==  null)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null)  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
44	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0)  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  ||  input.length()  ==  0)  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.length()  ==  0)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
46	[BUG]  [BUGGY]  Integer  end  =  input.intValue();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  end  =  input.intValue();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.intValue();	      	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
47	[BUG]  [BUGGY]  int  isHex  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  isHex  =  input.length();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  isHex  =  input.length();	      	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
48	[BUG]  [BUGGY]  out.write(input.charAt(index));  [CE]  <identifier>  expected  [FE]                    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  out.write(input.charAt(index));  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	out.write(input.charAt(index));	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(Input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  if(Input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    if(Input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
50	[BUG]  [BUGGY]  if(index  <  0  ||  index  >=  input.length())  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(index  <  0  ||  index  >=  input.length())  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  <  0  ||  index  >=  input.length())  {	  if(input.charAt(index    +    1)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  int  end  =  _input.length();  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  _input.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  _input.length();	      int    end    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	14	None	replace
52	[BUG]  [BUGGY]  Integer  input  =  input.getEntry(index);  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntry(index);  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntry(index);	      Integer    input    =    input.getEntryValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
53	[BUG]  [BUGGY]  Integer  input  =  input.getEntryImpl();  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getEntryImpl();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getEntryImpl();	      Integer    input    =    input.getEntryValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	18	None	replace
54	[BUG]  [BUGGY]  int  index  =  input.indexOf('#')+  1;  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.indexOf('#')+  1;  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#')+  1;	      int    index    =    input.indexOf('#');    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
55	[BUG]  [BUGGY]  int  start  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  start  =  input.length();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  start  =  input.length();	      	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
56	[BUG]  [BUGGY]  Integer  end  =  input.getEntityValue();  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  end  =  input.getEntityValue();  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  end  =  input.getEntityValue();	      	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
57	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '&')  {	  if(input    ==    null    ||    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
58	[BUG]  [BUGGY]  Integer  input  =  input.getKey();  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getKey();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getKey();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
59	[BUG]  [BUGGY]  int  input  =  input.getValue();  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.getValue();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.getValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
60	[BUG]  [BUGGY]  int  inputIndex  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  inputIndex  =  input.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  inputIndex  =  input.length();	      int    index    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
61	[BUG]  [BUGGY]  if(index  ==  -1)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(index  ==  -1)  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index  ==  -1)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
62	[BUG]  [BUGGY]  if(index!=  -1)  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(index!=  -1)  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(index!=  -1)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
63	[BUG]  [BUGGY]  Integer  input  =  input.doubleValue();  [CE]  reached  end  of  file  while  parsing  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.doubleValue();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.doubleValue();	      Integer    input    =    input.intValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	7	None	replace
64	[BUG]  [BUGGY]  if(input!=  null  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input!=    null    ||    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.length()  ==  0  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input    ==    null    ||    input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
66	[BUG]  [BUGGY]  if(input!=  null  &&  input.length()  >  0)  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  &&  input.length()  >  0)  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.length()  >  0)  {	  if(input!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
67	[BUG]  [BUGGY]  Integer  input  =  input.getAscentValue();  [CE]  reached  end  of  file  while  parsing  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  Integer  input  =  input.getAscentValue();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	Integer  input  =  input.getAscentValue();	      Integer    input    =    input.getValue();    	non-compiled	[CE]  reached  end  of  file  while  parsing	8	None	replace
68	[BUG]  [BUGGY]  if(input!=  null  &&  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input!=  null  &&  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  &&  input.charAt(index  +  1)  ==  '&')  {	  if(input!=    null    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.charAt(0)  ==  '&')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(0)  ==  '&')  {	  if(input!=    null    ||    input.charAt(index    +    1)    ==    '&')    {    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  int  index  =  input.indexOf('#',  start);  [CE]  reached  end  of  file  while  parsing  [FE]              ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  index  =  input.indexOf('#',  start);  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  index  =  input.indexOf('#',  start);	      int    index    =    input.indexOf('#');    	non-compiled	[CE]  reached  end  of  file  while  parsing	10	None	replace
71	[BUG]  [BUGGY]  int  input  =  input.length();  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.length();  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.length();	      int    index    =    input.length();    	non-compiled	[CE]  reached  end  of  file  while  parsing	11	None	replace
72	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)  ==  '#')  {	  if(input.charAt(index)    ==    '&'    ||    input.charAt(index    +    1)    ==    '#')    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  int  end  =  input.lastIndexOf('.');  [CE]  reached  end  of  file  while  parsing  [FE]                ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.lastIndexOf('.');  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.lastIndexOf('.');	      	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
74	[BUG]  [BUGGY]  int  end  =  input.indexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]                  ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  end  =  input.indexOf('  ');  [BUGGY]    int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  end  =  input.indexOf('  ');	      	non-compiled	[CE]  reached  end  of  file  while  parsing	6	None	replace
75	[BUG]  [BUGGY]  int  input  =  input.indexOf('  ');  [CE]  reached  end  of  file  while  parsing  [FE]            ComparisonFailure    [CONTEXT]    public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {      [BUGGY]  int  input  =  input.indexOf('  ');  [BUGGY]    if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	int  input  =  input.indexOf('  ');	      int    index    =    input.indexOf('    ');    	non-compiled	[CE]  reached  end  of  file  while  parsing	9	None	replace
