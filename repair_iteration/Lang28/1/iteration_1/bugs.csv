bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	add	if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	compilable	  [FE]  ComparisonFailure  	2	1	replace
2	[BUG]  [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	compilable	  [FE]  ComparisonFailure  	2	1	replace
3	[BUG]  [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index  +  1)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  if(input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input.charAt(index  +  2)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input!=  null  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	  	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
7	[BUG]  [BUGGY]    Integer  input  =  input.intValue();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    Integer  input  =  input.intValue();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    Integer  input  =  input.intValue();		non-compiled	[CE]  illegal  start  of  type	3	None	add
8	[BUG]  [BUGGY]    Integer  input  =  input.getValue();  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    Integer  input  =  input.getValue();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    Integer  input  =  input.getValue();		non-compiled	[CE]  illegal  start  of  type	3	None	add
9	[BUG]  [BUGGY]    int  index  =  input.indexOf('  ');  [CE]  cannot  find  symbol  input  [FE]        ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    int  index  =  input.indexOf('  ');  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    int  index  =  input.indexOf('  ');		non-compiled	[CE]  cannot  find  symbol  input	3	None	add
10	[BUG]  [BUGGY]    int  index  =  input.indexOf('#');  [CE]  variable  index  is  already  defined  in  class  NumericEntityUnescaper  [FE]          ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    int  index  =  input.indexOf('#');  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    int  index  =  input.indexOf('#');		non-compiled	[CE]  variable  index  is  already  defined  in  class  NumericEntityUnescaper	3	None	add
11	[BUG]  [BUGGY]    int  index  =  input.length();  [CE]  cannot  find  symbol  input  [FE]            ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    int  index  =  input.length();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    int  index  =  input.length();		non-compiled	[CE]  cannot  find  symbol  input	3	None	add
12	[BUG]  [BUGGY]    Integer  input  =  input.getEntityValue();  [CE]  self-reference  in  initializer  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    Integer  input  =  input.getEntityValue();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    Integer  input  =  input.getEntityValue();		non-compiled	[CE]  self-reference  in  initializer	3	None	add
13	[BUG]  [BUGGY]    int  start  =  index  +  1;  [CE]  illegal  forward  reference  [FE]      ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    int  start  =  index  +  1;  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    int  start  =  index  +  1;		non-compiled	[CE]  illegal  forward  reference	3	None	add
14	[BUG]  [BUGGY]    int  end  =  input.length();  [CE]  cannot  find  symbol  input  [FE]        ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    int  end  =  input.length();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    int  end  =  input.length();		non-compiled	[CE]  cannot  find  symbol  input	3	None	add
15	[BUG]  [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input!=  null  ||  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null  ||  input.charAt(index  +  1)  ==  '&')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&')  {  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index  +  1)  ==  '&')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
17	[BUG]  [BUGGY]  if(input  ==  null  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input  ==  null  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input  ==  null  ||  input.charAt(index)  ==  '&'  ||  input.charAt(index  +  1)  ==  '#')  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]    Integer  input  =  input.getEntryValue();  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    Integer  input  =  input.getEntryValue();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    Integer  input  =  input.getEntryValue();		non-compiled	[CE]  illegal  start  of  type	3	None	add
19	[BUG]  [BUGGY]    int  end  =  input.getLength();  [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]    int  end  =  input.getLength();  [BUGGY]  if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	    int  end  =  input.getLength();		non-compiled	[CE]  illegal  start  of  type	3	None	add
20	[BUG]  [BUGGY]  if(input!=  null)  {  [CE]  illegal  start  of  type  [FE]    ComparisonFailure  [CONTEXT]  public  int  translate(CharSequence  input,  int  index,  Writer  out)  throws  IOException  {    [BUGGY]  if(input!=  null)  {  [BUGGY]  int  start  =  index  +  2;  boolean  isHex  =  false;  char  firstChar  =  input.charAt(start);  if(firstChar  ==  'x'  ||  firstChar  ==  'X')  {  start++;  isHex  =  true;  }  int  end  =  start;  [CLASS]  NumericEntityUnescaper  [METHOD]  translate  [RETURN_TYPE]  int  CharSequence  input  int  index  Writer  out  [VARIABLES]  boolean  isHex  CharSequence  input  char  firstChar  NumberFormatException  nfe  int  end  entityValue  index  start  Writer  out  	projects/Lang28/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	1.0	37	37	1	replace	if(input!=  null)  {	if(input.charAt(index)  ==  '&'  &&  input.charAt(index  +  1)  ==  '#')  {  	non-compiled	[CE]  illegal  start  of  type	2	None	replace
