bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	add	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
2	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	add	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	2	42	replace
4	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	2	42	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	add	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
6	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	2	3	replace
7	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
8	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
9	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >>  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >>  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >>  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
10	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
11	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
12	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
13	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
14	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
15	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if(NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
16	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
17	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getString().equals( "prototype "))  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
18	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.GETPROP)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.GETPROP)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
19	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
20	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.CALL)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
21	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.STRING)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
22	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
23	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
24	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
25	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
26	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
27	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
28	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
29	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
30	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
31	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
32	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
33	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
34	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
35	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
36	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
37	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
38	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  ';'  expected	5	None	add
39	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
40	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()  >>  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (nameNode.getType()  >>  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if  (nameNode.getType()  >>  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
41	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
42	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
46	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
47	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
48	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
49	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
50	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
53	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
57	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
58	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
59	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
60	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
61	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
62	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
63	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
64	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
65	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
66	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >>  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >>  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >>  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
67	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
68	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
69	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
70	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
74	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
75	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
76	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  	non-compiled	[CE]  ';'  expected	16	None	add
77	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
78	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  >=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
79	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
80	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  >>  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
81	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  >>  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  >>  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  >>  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
82	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
83	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
84	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
85	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
86	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >>  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >>  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  >>  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
87	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
88	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
89	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  ';'  expected  [FE]              RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
90	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
91	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getLastChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  nameNode  =  callNode.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
93	[BUG]  [BUGGY]  Node  param  =  callNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  callNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
94	[BUG]  [BUGGY]  Node  param  =  callNode.getLastChild();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  callNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  callNode.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  Node  param  =  nameNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  nameNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  nameNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLastChild();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Name  nameNode  =  callNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Name  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  Node  param  =  callNode.getParent();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  callNode.getParent();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  callNode.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  Node  param  =  callNode.getNext();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  callNode.getNext();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  callNode.getNext();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
101	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
102	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
103	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
104	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
105	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  >=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
106	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
107	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
108	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
109	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
110	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
111	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
112	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
113	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
114	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
115	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
116	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()!=  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
117	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  >=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  >=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()  >=  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
118	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
119	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  >>  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  >>  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()  >>  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
120	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  If(nameNode.getType()!=  Token.NAME)  {  [CE]  ';'  expected  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  If(nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    If(nameNode.getType()!=  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
121	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  [BUGGY]  Token.NAME)  {  [CE]  ')'  expected  [FE]              RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  [BUGGY]  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()  [BUGGY]  Token.NAME)  {	  	non-compiled	[CE]  ')'  expected	22	None	add
122	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  [Delete]  Token.NAME)  {  [CE]  ')'  expected  [FE]                RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(nameNode.getType()  [Delete]  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()  [Delete]  Token.NAME)  {	  	non-compiled	[CE]  ')'  expected	22	None	add
123	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(NameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME)  {  if(NameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=    Token.NAME)    {    if(NameNode.getType()!=  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
124	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
125	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
126	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
127	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getString()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getString()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getString()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
128	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
129	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().equals( "prototype "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
130	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
131	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().equals( " "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().equals( " "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
132	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
133	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	20	None	add
134	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
135	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  (nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
136	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  >=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  >=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  >=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
137	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  (nameNode.getType()  >=  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
138	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
139	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
140	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
141	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
142	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
143	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( ".prototype   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( ".prototype   "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( ".prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
144	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  	9	None	add
145	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
146	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype   "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
147	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( ",prototype   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals(   "prototype   "))  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( ",prototype   "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( ",prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
148	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
149	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
150	[BUG]  [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode!=  null  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
151	[BUG]  [BUGGY]  if(nameNode!=  null  ||  nameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode!=  null  ||  nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode!=  null  ||  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
152	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.hasChildren()  &&  nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.hasChildren()  &&  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
153	[BUG]  [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode!=  null  &&  nameNode.getType()!=  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode!=  null  &&  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
154	[BUG]  [BUGGY]  if(nameNode!=  null  ||  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode!=  null  ||  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode!=  null  ||  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
155	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
156	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  	non-compiled	[CE]  ';'  expected	5	None	add
157	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
158	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
159	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
160	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
161	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
162	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
163	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
164	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  ||  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
165	[BUG]  [BUGGY]  NameNode  nameNode  =  callNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NameNode  nameNode  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	NameNode  nameNode  =  callNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
166	[BUG]  [BUGGY]  Node  nameNode  =  callNode.getNext();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  nameNode  =  callNode.getNext();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  nameNode  =  callNode.getNext();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
167	[BUG]  [BUGGY]  NameNode  param  =  nameNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  NameNode  param  =  nameNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	NameNode  param  =  nameNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
168	[BUG]  [BUGGY]  Node  param  =  nameNode.getNext();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  nameNode.getNext();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  nameNode.getNext();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
169	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
170	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (NameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
172	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
173	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
174	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
175	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
176	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
177	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
178	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (NameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
179	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild().getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
180	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getfirstChild()!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
181	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
182	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
183	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype  [CE]  unclosed  string  literal  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype ")||  nameNode.getLastChild().getString().equals( "prototype	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  unclosed  string  literal	10	None	replace
184	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  ((nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  if  ((nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    if  ((nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING))  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
185	[BUG]  [BUGGY]  Node  param  =  nameNode.getLastChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  param  =  nameNode.getLastChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  nameNode.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
186	[BUG]  [BUGGY]  Node  name  =  callNode.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  name  =  callNode.getFirstChild();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  name  =  callNode.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
187	[BUG]  [BUGGY]  Node  parent  =  callNode.getParent();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  Node  parent  =  callNode.getParent();  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  parent  =  callNode.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
188	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
189	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
190	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
191	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
192	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
193	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  ((  nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING))  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  ((  nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  ((  nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
194	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( " "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( " "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( " "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
196	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
197	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.hasChildren())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.hasChildren())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
198	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  ((nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  if  ((nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if  ((nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.STRING))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
199	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getString()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getString()!=  Token.STRING)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getString()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
200	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
201	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
202	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING  ||  nameNode.getLastChild().getString()!=  null)  {  [CE]  illegal  start  of  expression  [FE]    RuntimeException    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING  ||  nameNode.getLastChild().getString()!=  null)  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.STRING  ||  nameNode.getLastChild().getString()!=  null)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
203	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  ((nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]     "Expected  CALL  node,  got     "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();      [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  if  ((nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()))  {  [BUGGY]    String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if  ((nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
