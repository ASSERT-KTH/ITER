bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
2	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
3	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
4	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getLastChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getLastChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
5	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
6	[BUG]  [BUGGY]  Node  param  =  callNode.getString();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Node  param  =  callNode.getString();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  callNode.getString();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
7	[BUG]  [BUGGY]  Node  param  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Node  param  =  node.getFirstChild();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  param  =  node.getFirstChild();	  Node    param    =    callNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
8	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
9	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
10	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
11	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  callNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
12	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
13	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
14	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
15	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
16	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL  &&  callNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL  &&  callNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.CALL  &&  callNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
17	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
18	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  &&  callNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
19	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  callNode.getFirstChild().getType()  ==  Token.CALL  &&  nameNode.hasOneChild())  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL    &&    callNode.hasOneChild())    {    	non-compiled	[CE]  illegal  start  of  expression	201	None	replace
20	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (callNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (callNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  callNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  callNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  callNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.isFirstChild())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.isFirstChild())  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
24	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
25	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
26	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
27	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  ==  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  ==  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
28	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >=  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >=  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
29	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
30	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  <=  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  <=  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
31	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  [Delete]  0)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  [Delete]  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  [Delete]  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  ')'  expected	196	None	replace
32	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().length()  >  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  ||  nameNode.getLastChild().getString().length()  >  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
33	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null  &&  nameNode.getLastChild().getString().length()  >  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
34	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >>  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >>  0)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().length()  >>  0)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null    &&    nameNode.getLastChild().getString().length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	196	None	replace
35	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getLastChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getLastChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
36	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getLastChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
37	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
38	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
39	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
40	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
41	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(NameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(NameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(NameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
44	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if(NameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    >=    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    >=    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    >=    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if    (nameNode.getType()    >=    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
49	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if    (nameNode.getType()    >=    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
50	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    if    (nameNode.getType()    >=    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
51	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    >>    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
52	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    >>    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
53	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    >>    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
54	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.CALL)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    >>    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
55	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.BLOCK)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()!=  Token.BLOCK)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    >>    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
56	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
57	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getLastChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  callNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
60	[BUG]  [BUGGY]  if  (callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (callNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
61	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()  ==  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  callNode.getLastChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    callNode.getFirstChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
62	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
63	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
64	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
65	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasNext()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasNext()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasNext()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
66	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasLastChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasLastChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasLastChild()  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
67	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getString();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getString();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getString();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
68	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getNext();  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getNext();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getNext();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
69	[BUG]  [BUGGY]  Name  nameNode  =  param.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  param.getFirstChild();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  param.getFirstChild();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
70	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getQualifiedName();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getQualifiedName();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
71	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLocalName();  [CE]  illegal  start  of  expression  [FE]                                              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getLocalName();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getLocalName();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
72	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getType();  [CE]  illegal  start  of  expression  [FE]                                                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getType();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getType();	  Name    nameNode    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
73	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    >=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
74	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()!=    Token.STRING)    {    if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getFirstChild().getType()    >=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
75	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  >=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    >=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
76	[BUG]  [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()!=  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getLastChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
77	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getLastChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getLastChild().getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.STRING  ||  nameNode.getLastChild().getType()!=  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getLastChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	141	None	replace
78	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION  ||  nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
79	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION  ||  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION  ||  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION  ||  nameNode.getLastChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
80	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if    (nameNode.getType()    >>    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
81	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.hasChildren())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    if    (nameNode.getType()    >>    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
82	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(       "prototype       "))    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   ",prototype       "))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
83	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(       "prototype       "))    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   ",prototype       "))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
84	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(       "prototype       "))    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   ",prototype       "))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
85	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.VAR  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.VAR  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.VAR  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(       "prototype       "))    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   ",prototype       "))    {    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
86	[BUG]  [BUGGY]  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(       "prototype       "))    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   ",prototype       "))    {    	non-compiled	[CE]  	147	None	replace
87	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()  ==  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()!=    Token.NAME    &&    nameNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
88	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()  ==  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  callNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()!=    Token.NAME    &&    nameNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
89	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()  ==  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()  ==  null)  {	  if(nameNode.getType()!=    Token.NAME    &&    nameNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
90	[BUG]  [BUGGY]  if(callNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(callNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(callNode.getType()!=  Token.NAME  &&  nameNode.getFirstChild()  ==  null)  {	  if(nameNode.getType()!=    Token.NAME    &&    nameNode.getFirstChild()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
91	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
92	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
93	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  callNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  callNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  callNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
94	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
95	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getLastChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
96	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()!=  Token.NAME)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
97	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren()  ||  nameNode.getFirstChild().getType()!=  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
98	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getType()  ==  Token.STRING)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren()    &&    nameNode.getFirstChild().getType()!=    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
99	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.ASSIGN  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(       "prototype       "))    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getString().equals(   "prototype       "))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
100	[BUG]  [BUGGY]  if(nameNode.hasChildren()  ||  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.hasChildren()  ||  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.hasChildren()  ||  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
101	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
102	[BUG]  [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(callNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(callNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
103	[BUG]  [BUGGY]  if(!nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(!nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(!nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
104	[BUG]  [BUGGY]  if(nameNode.hasChildren()  &&  callNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.hasChildren()  &&  callNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.hasChildren()  &&  callNode.getType()  ==  Token.NAME)  {	  if(nameNode.hasChildren()    &&    nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
105	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.hasChildren()  &&  nameNode.getType()  ==  Token.FUNCTION)  {	  if(nameNode.hasChildren()    &&    nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
106	[BUG]  [BUGGY]  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	If  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    If    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
107	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  ||  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
108	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  ||  nameNode.hasFirstChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
109	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasNext()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasNext()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasNext()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
110	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasLastChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasLastChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasLastChild()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
111	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasFirstChild()  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
112	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren()  &&  nameNode.getFirstChild().getString().equals( "prototype "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasFirstChild()    &&    nameNode.getFirstChild().getString().equals(   "prototype   "))    {    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
113	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.FUNCTION)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
114	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.GETPROP)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
115	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.NAME)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
116	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.CALL)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
117	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.BLOCK)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.BLOCK)  {	  if(nameNode.getType()!=    Token.NAME)    {    if(nameNode.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
118	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()!=  Token.FUNCTION  ||  nameNode.getFirstChild().getType()!=  Token.FUNCTION)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    if    (NameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
119	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.getLastChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.getLastChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.CALL  &&  nameNode.getLastChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.CALL    &&    nameNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
120	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.CALL  &&  callNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.CALL    &&    nameNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
121	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.CALL  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.CALL  ||  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.CALL    &&    nameNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
122	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild().getType()  ==  Token.NAME)  {	  if    (nameNode.getType()    ==    Token.CALL    &&    nameNode.getFirstChild().getType()    ==    Token.NAME)    {    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
123	[BUG]  [BUGGY]  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    If(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
124	[BUG]  [BUGGY]  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	If(nameNode.getType()  ==  Token.NAME  &&  nameNode.getLastChild()!=  null)  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    If(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  ';'  expected	76	None	replace
125	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.GETPROP  &&  nameNode.getFirstChild()!=  null  &&  nameNode.getLastChild().getString().equals( "prototype "))  {	  if(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    If(nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
126	[BUG]  [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getString().equals( "STRING "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getString().equals( "STRING "))  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if  (nameNode.getType()  ==  Token.NAME  &&  nameNode.getString().equals( "STRING "))  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
127	[BUG]  [BUGGY]  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    Node    nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  ';'  expected	156	None	replace
128	[BUG]  [BUGGY]  NameNode  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  NameNode  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	NameNode  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    Node    nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  ';'  expected	156	None	replace
129	[BUG]  [BUGGY]  Name  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    Node    nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  ';'  expected	156	None	replace
130	[BUG]  [BUGGY]  NameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  NameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	NameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    Node    nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  not  a  statement	156	None	replace
131	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.CALL  &&  nameNode.hasChildren())  {  Node  nameNode.getType()  ==  Token.NAME  &&  nameNode.hasChildren())  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    Node    nameNode.getType()    ==    Token.NAME    &&    nameNode.hasChildren())    {    	non-compiled	[CE]  ';'  expected	156	None	replace
132	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getType()!=  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getType()!=  Token.GETPROP)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
133	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.NAME  &&  nameNode.getType()!=  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  &&  nameNode.getType()!=  Token.GETPROP)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
134	[BUG]  [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()!=  Token.NAME  ||  nameNode.getType()  ==  Token.GETPROP)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
135	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getString()!=  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getString()!=  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getString()!=  Token.GETPROP)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
136	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  ||  nameNode.getFirstChild()!=  Token.GETPROP)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
137	[BUG]  [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getType()!=  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(callNode.getType()  ==  Token.NAME  ||  callNode.getType()!=  Token.GETPROP)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(callNode.getType()  ==  Token.NAME  ||  callNode.getType()!=  Token.GETPROP)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
138	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.getType()!=  Token.NAME)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.GETPROP  ||  nameNode.getType()!=  Token.NAME)  {	  if(nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()!=    Token.GETPROP)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
139	[BUG]  [BUGGY]  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    If    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
140	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.STRING)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    If    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
141	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.FUNCTION)  {  If  (nameNode.getType()  ==  Token.NAME  ||  nameNode.getType()  ==  Token.STRING)  {	  if    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    If    (nameNode.getType()    ==    Token.NAME    ||    nameNode.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  ';'  expected	133	None	replace
142	[BUG]  [BUGGY]  Name  nameNode  =  param.getLastChild();  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  param.getLastChild();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  param.getLastChild();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
143	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLastChild(),  JSC_PROPERTY_NAME_FN);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getLastChild(),  JSC_PROPERTY_NAME_FN);  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getLastChild(),  JSC_PROPERTY_NAME_FN);	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  ';'  expected	96	None	replace
144	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLastChild(),  JSC_PROPERTY_NAME_FN;  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getLastChild(),  JSC_PROPERTY_NAME_FN;  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getLastChild(),  JSC_PROPERTY_NAME_FN;	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
145	[BUG]  [BUGGY]  Name  nameNode  =  callNode.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Name  nameNode  =  callNode.getLastChild().getString();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Name  nameNode  =  callNode.getLastChild().getString();	  Name    nameNode    =    callNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
146	[BUG]  [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  ||  nameNode.getLastChild().getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  ||  nameNode.getLastChild().getType()  ==  Token.CALL)  {  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	if(nameNode.getType()  ==  Token.NAME  &&  nameNode.getFirstChild().getType()  ==  Token.CALL  ||  nameNode.getLastChild().getType()  ==  Token.CALL)  {	  if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getFirstChild().getType()    ==    Token.CALL)    {    if    (nameNode.getType()    ==    Token.NAME    &&    nameNode.getLastChild().getType()    ==    Token.CALL)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
147	[BUG]  [BUGGY]  Node  name  =  callNode.getLastChild();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Node  name  =  callNode.getLastChild();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  name  =  callNode.getLastChild();	  Node    name    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
148	[BUG]  [BUGGY]  Node  name  =  param.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Node  name  =  param.getFirstChild();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  name  =  param.getFirstChild();	  Node    name    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
149	[BUG]  [BUGGY]  Node  name  =  node.getLastChild();  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]       "Expected  CALL  node,  got       "  +  Token.name(callNode.getType()));  }  if  (callNode.isNoSideEffectsCall())  {  return  false;  }  Node  nameNode  =  callNode.getFirstChild();        [BUGGY]  Node  name  =  node.getLastChild();  [BUGGY]      String  name  =  nameNode.getString();  if  (BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS.contains(name))  {  return  false;  }  }  else  if  (nameNode.getType()  ==  Token.GETPROP)  {  if  (callNode.hasOneChild()  &&  OBJECT_METHODS_WITHOUT_SIDEEFFECTS.contains(  nameNode.getLastChild().getString()))  {  return  false;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  functionCallHasSideEffects  [RETURN_TYPE]  boolean  Node  callNode  AbstractCompiler  compiler  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  AbstractCompiler  compiler  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  defines  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  callNode  nameNode  param  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  long  MAX_POSITIVE_INTEGER_NUMBER  longValue  int  c  end  nextSkipSlot  nextSlot  start  type  Predicate  MATCH_NOT_FUNCTION  	projects/Closure61/src/com/google/javascript/jscomp/NodeUtil.java	0.2553769592276246	940	940	3	replace	Node  name  =  node.getLastChild();	  Node    name    =    callNode.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
