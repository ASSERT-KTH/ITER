bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
2	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
3	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
4	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	16	None	replace
5	[BUG]  [BUGGY]  addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);	  addExpr(   "for(   ",    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	12	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	53	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  ||  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	53	None	replace
8	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.MIN_VALUE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.MIN_VALUE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Integer.MIN_VALUE;	  Context.IN_FOR_INIT_CLAUSE    =    0;    	non-compiled	[CE]  orphaned  case	67	None	replace
9	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  4;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  4;	  Context.IN_FOR_INIT_CLAUSE    =    0;    	non-compiled	[CE]  orphaned  case	67	None	replace
10	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.MAX_VALUE;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.MAX_VALUE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Integer.MAX_VALUE;	  Context.IN_FOR_INIT_CLAUSE    =    0;    	non-compiled	[CE]  orphaned  case	67	None	replace
11	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first;	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
12	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  parent;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  parent;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  parent;	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
13	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.FOR;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.FOR;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Token.FOR;	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
14	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.toString(childCount);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.toString(childCount);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Integer.toString(childCount);	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
15	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.EXPR_RESULT;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.EXPR_RESULT;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Token.EXPR_RESULT;	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
16	[BUG]  [BUGGY]  _add( "for( ",  childCount  +  1);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  childCount  +  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  childCount  +  1);	  _add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	85	None	replace
17	[BUG]  [BUGGY]  _add( "for( ",  count);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  count);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  count);	  _add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	85	None	replace
18	[BUG]  [BUGGY]  _add( "for( ",  childCount-1);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  childCount-1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  childCount-1);	  _add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	85	None	replace
19	[BUG]  [BUGGY]  _add( "for( ",  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  1);	  _add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	85	None	replace
20	[BUG]  [BUGGY]  _add( "for( ",  first);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  first);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  first);	  _add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	85	None	replace
21	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	92	None	replace
22	[BUG]  [BUGGY]  Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	92	None	replace
23	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	92	None	replace
24	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	92	None	replace
25	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	17	None	replace
26	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	17	None	replace
27	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  childCount;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  childCount;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  childCount;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	17	None	replace
28	[BUG]  [BUGGY]  _addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);	  _addExpr(   "for(   ",    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	14	None	replace
29	[BUG]  [BUGGY]  _addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE  +  1);	  _addExpr(   "for(   ",    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	14	None	replace
30	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  =  false;	  context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	74	None	replace
31	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  context.in_FOR_INIT_CLAUSE  ==  false;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  context.in_FOR_INIT_CLAUSE  ==  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  ||  context.in_FOR_INIT_CLAUSE  ==  false;	  context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	74	None	replace
32	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  context.in_FOR_INIT_CLAUSE!=  false;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  context.in_FOR_INIT_CLAUSE!=  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  ||  context.in_FOR_INIT_CLAUSE!=  false;	  context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	74	None	replace
33	[BUG]  [BUGGY]  cv.add( "for( "  +  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( "  +  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( "  +  Context.IN_FOR_INIT_CLAUSE);	  cv.add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	68	None	replace
34	[BUG]  [BUGGY]  cv.add( "for( ", ",  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ", ",  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ", ",  Context.IN_FOR_INIT_CLAUSE);	  cv.add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	68	None	replace
35	[BUG]  [BUGGY]  addExpr( "for( "  +  Integer.toString(childCount  -  1));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for( "  +  Integer.toString(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for( "  +  Integer.toString(childCount  -  1));	  addExpr(   "for(       "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	47	None	replace
36	[BUG]  [BUGGY]  _addExpr( "for( "  +  Integer.toString(childCount));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "for( "  +  Integer.toString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "for( "  +  Integer.toString(childCount));	  addExpr(   "for(       "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	47	None	replace
37	[BUG]  [BUGGY]  addExpr( "for( "  +  Integer.toString(childCount)+  1));  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for( "  +  Integer.toString(childCount)+  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for( "  +  Integer.toString(childCount)+  1));	  addExpr(   "for(       "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	47	None	replace
38	[BUG]  [BUGGY]  _add( "For( ",  childCount);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( ",  childCount);	  _add(   "For(   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
39	[BUG]  [BUGGY]  _add( "FOR( ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "FOR( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "FOR( ");	  _add(   "For(   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
40	[BUG]  [BUGGY]  _add( "For( ".);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( ".);	  _add(   "For(   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
41	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  count++);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  count++);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  count++);	  Context.IN_FOR_INIT_CLAUSE,    childCount++);    	non-compiled	[CE]  orphaned  case	22	None	replace
42	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  4);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  4);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  4);	  Context.IN_FOR_INIT_CLAUSE,    childCount++);    	non-compiled	[CE]  orphaned  case	22	None	replace
43	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount++;  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount++;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  childCount++;	  Context.IN_FOR_INIT_CLAUSE,    childCount++);    	non-compiled	[CE]  orphaned  case	22	None	replace
44	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount++  -  1);  [CE]  orphaned  case  [FE]                                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount++  -  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  childCount++  -  1);	  Context.IN_FOR_INIT_CLAUSE,    childCount++);    	non-compiled	[CE]  orphaned  case	22	None	replace
45	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	82	None	replace
46	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	82	None	replace
47	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE  +  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	82	None	replace
48	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	82	None	replace
49	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	20	None	replace
50	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE,  childCount);	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	20	None	replace
51	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1);	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	20	None	replace
52	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	20	None	replace
53	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.MIN_VALUE;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Integer.MIN_VALUE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Integer.MIN_VALUE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Token.IN_FOR;    break;    	non-compiled	[CE]  orphaned  case	97	None	replace
54	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  0;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  0;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  0;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Token.IN_FOR;    break;    	non-compiled	[CE]  orphaned  case	97	None	replace
55	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.equalsIgnoreCase(childCount));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.equalsIgnoreCase(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.equalsIgnoreCase(childCount));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount));    	non-compiled	[CE]  orphaned  case	70	None	replace
56	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(String.valueOf(childCount)));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(String.valueOf(childCount)));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equalsIgnoreCase(String.valueOf(childCount)));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount));    	non-compiled	[CE]  orphaned  case	70	None	replace
57	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(childCount  +  1));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(childCount  +  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equalsIgnoreCase(childCount  +  1));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount));    	non-compiled	[CE]  orphaned  case	70	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(childCount  -  1));  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equalsIgnoreCase(childCount  -  1));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount));    	non-compiled	[CE]  orphaned  case	70	None	replace
59	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	44	None	replace
60	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  ||  childCount;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  ||  childCount;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  ||  childCount;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	44	None	replace
61	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	44	None	replace
62	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  ||  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  ||  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  ||  childCount  =  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	44	None	replace
63	[BUG]  [BUGGY]  RectangleEdge.rehashCode();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  RectangleEdge.rehashCode();  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	RectangleEdge.rehashCode();	  if(childCount    ==    4)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	77	None	replace
64	[BUG]  [BUGGY]  parent.addExpr(first,  1,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  1,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  1,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    1,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	93	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    0)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	23	None	replace
66	[BUG]  [BUGGY]  if(childCount  ==  2)  {  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    2);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	101	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  4);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  4);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  4);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    2);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	101	None	replace
68	[BUG]  [BUGGY]  last  =  childCount  -  1;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  childCount  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  childCount  -  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	58	None	replace
69	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  4;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  -  4;	  last    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	58	None	replace
70	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  /  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	58	None	replace
71	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  true;  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  true;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  true;  break;	  Context.IN_FOR_INIT_CLAUSE    =    false;    break;    	non-compiled	[CE]  orphaned  case	96	None	replace
72	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  break;	  Context.IN_FOR_INIT_CLAUSE    =    false;    break;    	non-compiled	[CE]  orphaned  case	96	None	replace
73	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    false;    break;    	non-compiled	[CE]  orphaned  case	96	None	replace
74	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    false;    break;    	non-compiled	[CE]  orphaned  case	96	None	replace
75	[BUG]  [BUGGY]  while(childCount  >  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  while(childCount  >  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	while(childCount  >  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	60	None	replace
76	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  2);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  2);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  2);	  Context.IN_FOR_INIT_CLAUSE,    1);    	non-compiled	[CE]  orphaned  case	78	None	replace
77	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  0);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  0);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  0);	  Context.IN_FOR_INIT_CLAUSE,    1);    	non-compiled	[CE]  orphaned  case	78	None	replace
78	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  3);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  3);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  3);	  Context.IN_FOR_INIT_CLAUSE,    1);    	non-compiled	[CE]  orphaned  case	78	None	replace
79	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  5);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  5);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  5);	  Context.IN_FOR_INIT_CLAUSE,    1);    	non-compiled	[CE]  orphaned  case	78	None	replace
80	[BUG]  [BUGGY]  [Delete]  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  [Delete]  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	[Delete]	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
81	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( " ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtExceptionHandler.throwAsUncheckedException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtExceptionHandler.throwAsUncheckedException( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
82	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtExceptionHandler.throwAsUnquotedException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtExceptionHandler.throwAsUnquotedException( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
83	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnexpectedException( " ");  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtExceptionHandler.throwAsUnexpectedException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtExceptionHandler.throwAsUnexpectedException( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
84	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
85	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	41	None	replace
86	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	41	None	replace
87	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	41	None	replace
88	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	41	None	replace
89	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  2;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  2;	  Context.IN_FOR_INIT_CLAUSE    =    -1;    	non-compiled	[CE]  orphaned  case	66	None	replace
90	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  4;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  4;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  4;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	18	None	replace
91	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  childCount  +  1;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  childCount  +  1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  childCount  +  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	18	None	replace
92	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  break;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	18	None	replace
93	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  break;  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	18	None	replace
94	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	55	None	replace
95	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	55	None	replace
96	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	55	None	replace
97	[BUG]  [BUGGY]  addExpr( "for( "  +  Integer.toHexString(childCount  -  1));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for( "  +  Integer.toHexString(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for( "  +  Integer.toHexString(childCount  -  1));	  addExpr(   "for(       "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	4	None	replace
98	[BUG]  [BUGGY]  _addExpr( "for( "  +  Integer.toHexString(childCount));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "for( "  +  Integer.toHexString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "for( "  +  Integer.toHexString(childCount));	  addExpr(   "for(       "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	4	None	replace
99	[BUG]  [BUGGY]  addExpr( "for( "  +  Integer.toHexString(childCount)+  1));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for( "  +  Integer.toHexString(childCount)+  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for( "  +  Integer.toHexString(childCount)+  1));	  addExpr(   "for(       "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	4	None	replace
100	[BUG]  [BUGGY]  while(childCount  ==  2)  {  rehashCode();  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  while(childCount  ==  2)  {  rehashCode();  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	while(childCount  ==  2)  {  rehashCode();	  if(childCount    ==    2)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	2	None	replace
101	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	62	None	replace
102	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	62	None	replace
103	[BUG]  [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	62	None	replace
104	[BUG]  [BUGGY]  Context.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    0)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	52	None	replace
105	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  4;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  4;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	40	None	replace
106	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	40	None	replace
107	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	40	None	replace
108	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <  unknown> ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <  unknown> ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <  unknown> ");	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	71	None	replace
109	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  }   ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  }   ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  }   ");	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	71	None	replace
110	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : ", ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : ", ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : ", ");	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	71	None	replace
111	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  {  0  }   ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  {  0  }   ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  {  0  }   ");	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	71	None	replace
112	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  {   ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  {   ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  {   ");	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	71	None	replace
113	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	39	None	replace
114	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	39	None	replace
115	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	39	None	replace
116	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	39	None	replace
117	[BUG]  [BUGGY]  addExpr(childCount,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(childCount,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(childCount,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	25	None	replace
118	[BUG]  [BUGGY]  add(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  add(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	add(first,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	25	None	replace
119	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	25	None	replace
120	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	25	None	replace
121	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
122	[BUG]  [BUGGY]  while(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  while(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	while(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
123	[BUG]  [BUGGY]  while(childCount  >  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  while(childCount  >  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	while(childCount  >  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
124	[BUG]  [BUGGY]  _add( "if( ",  childCount);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "if( ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "if( ",  childCount);	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
125	[BUG]  [BUGGY]  _add( "if( ".);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "if( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "if( ".);	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
126	[BUG]  [BUGGY]  _add( "If( ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "If( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "If( ");	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
127	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  4;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  +  4;	  Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
128	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  2;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  +  2;	  Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
129	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
130	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
131	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " "  +  getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  orphaned  case	87	None	replace
132	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getMessage(),  childCount));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getMessage(),  childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(getMessage(),  childCount));	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  orphaned  case	87	None	replace
133	[BUG]  [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(NoClassDefFoundError  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(NoClassDefFoundError  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
134	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
135	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(Throwable  t)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
136	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  +  4;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  +  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  +  4;	  last    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	56	None	replace
137	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  +  2;	  last    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	56	None	replace
138	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toString(childCount  -  1));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toString(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toString(childCount  -  1));	  _add(   "for(   "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	94	None	replace
139	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toString(10));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toString(10));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toString(10));	  _add(   "for(   "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	94	None	replace
140	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toString(last));  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toString(last));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toString(last));	  _add(   "for(   "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	94	None	replace
141	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toString(count));  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toString(count));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toString(count));	  _add(   "for(   "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	94	None	replace
142	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type: ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "Unknown  type: ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	38	None	replace
143	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type. ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type. ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "Unknown  type. ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	38	None	replace
144	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ",  first);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ",  first);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ",  first);	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	38	None	replace
145	[BUG]  [BUGGY]  _add( "for( ",  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  Context.IN_FOR_INIT_CLAUSE,  childCount);	  _add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	75	None	replace
146	[BUG]  [BUGGY]  _add( "For( ",  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( ",  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( ",  Context.IN_FOR_INIT_CLAUSE);	  _add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	75	None	replace
147	[BUG]  [BUGGY]  _add( "for( "  +  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Context.IN_FOR_INIT_CLAUSE);	  _add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	75	None	replace
148	[BUG]  [BUGGY]  append( "for(n ".);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for(n ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for(n ".);	  append(   "for(   ".);    	non-compiled	[CE]  orphaned  case	64	None	replace
149	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  }   ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  }   ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  }   ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
150	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <  unknown> ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <  unknown> ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <  unknown> ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
151	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : ", ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : ", ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : ", ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
152	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <   ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <   ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  <   ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
153	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
154	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(childCount));  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( " ".equals(childCount));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
155	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
156	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
157	[BUG]  [BUGGY]  cv.add( "for( ",  childCount  +  1);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ",  childCount  +  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ",  childCount  +  1);	  cv.add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	51	None	replace
158	[BUG]  [BUGGY]  cv.add( "for( ",  count);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ",  count);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ",  count);	  cv.add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	51	None	replace
159	[BUG]  [BUGGY]  cv.add( "for( ",  childCount-1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ",  childCount-1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ",  childCount-1);	  cv.add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	51	None	replace
160	[BUG]  [BUGGY]  appendExpr( "For( ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  appendExpr( "For( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	appendExpr( "For( ");	  appendExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	98	None	replace
161	[BUG]  [BUGGY]  appendExpr( "for(n ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  appendExpr( "for(n ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	appendExpr( "for(n ");	  appendExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	98	None	replace
162	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	45	None	replace
163	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  childCount);	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	45	None	replace
164	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1);	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	45	None	replace
165	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  1);	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	45	None	replace
166	[BUG]  [BUGGY]  addExpr( "for(   "  +  Integer.toString(childCount),  Context.IN_FOR);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for(   "  +  Integer.toString(childCount),  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for(   "  +  Integer.toString(childCount),  Context.IN_FOR);	  add(   "for(   "    +    Integer.toString(childCount),    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	95	None	replace
167	[BUG]  [BUGGY]  add( "for( "  +  Integer.toString(childCount)+  1),  Context.IN_FOR);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  add( "for( "  +  Integer.toString(childCount)+  1),  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	add( "for( "  +  Integer.toString(childCount)+  1),  Context.IN_FOR);	  add(   "for(   "    +    Integer.toString(childCount),    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	95	None	replace
168	[BUG]  [BUGGY]  add( "for( "  +  Integer.toString(childCount  -  1),  Context.IN_FOR);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  add( "for( "  +  Integer.toString(childCount  -  1),  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	add( "for( "  +  Integer.toString(childCount  -  1),  Context.IN_FOR);	  add(   "for(   "    +    Integer.toString(childCount),    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	95	None	replace
169	[BUG]  [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	91	None	replace
170	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  2);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	91	None	replace
171	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	91	None	replace
172	[BUG]  [BUGGY]  append( "for( ",  childCount  +  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( ",  childCount  +  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( ",  childCount  +  1);	  append(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	28	None	replace
173	[BUG]  [BUGGY]  append( "for( ",  childCount  -  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( ",  childCount  -  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( ",  childCount  -  1);	  append(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	28	None	replace
174	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE  =  true;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE  =  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE  =  true;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	43	None	replace
175	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  0,  false;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  0,  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  0,  false;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	43	None	replace
176	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLOSE  ||  Context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLOSE  ||  Context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLOSE  ||  Context.IN_FOR_INIT_CLAUSE  =  false;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	43	None	replace
177	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  null;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  null;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  null;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	43	None	replace
178	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount  -  1));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toHexString(childCount  -  1));	  _add(   "for(   "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	84	None	replace
179	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount)+  1));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount)+  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toHexString(childCount)+  1));	  _add(   "for(   "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	84	None	replace
180	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount  +  1));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount  +  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toHexString(childCount  +  1));	  _add(   "for(   "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	84	None	replace
181	[BUG]  [BUGGY]  addExpr(last,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(last,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(last,  0,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
182	[BUG]  [BUGGY]  addExpr(childCount,  4,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(childCount,  4,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(childCount,  4,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
183	[BUG]  [BUGGY]  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
184	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  3;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  3;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  3;	  Context.IN_FOR_INIT_CLAUSE    =    1;    	non-compiled	[CE]  orphaned  case	34	None	replace
185	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  4);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  4);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  4);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
186	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
187	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  0);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  0);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  0);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
188	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
189	[BUG]  [BUGGY]  _add( "[FOR]  token( ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "[FOR]  token( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "[FOR]  token( ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
190	[BUG]  [BUGGY]  _add( "Token( ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "Token( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "Token( ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
191	[BUG]  [BUGGY]  _add( "token( "  +  first.getClass().getName());  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "token( "  +  first.getClass().getName());  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "token( "  +  first.getClass().getName());	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
192	[BUG]  [BUGGY]  _add( "token( "+childCount+ ") ");  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "token( "+childCount+ ") ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "token( "+childCount+ ") ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
193	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  count);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  count);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  count);	  Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	19	None	replace
194	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);	  Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	19	None	replace
195	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	30	None	replace
196	[BUG]  [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	30	None	replace
197	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	30	None	replace
198	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  4);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  4);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  +  4);	  Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	21	None	replace
199	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  2);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  2);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  +  2);	  Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	21	None	replace
200	[BUG]  [BUGGY]  last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  +  1;	  last    =    childCount    -    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	59	None	replace
201	[BUG]  [BUGGY]  last  =  count  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  count  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  count  -  Context.IN_FOR_INIT_CLAUSE;	  last    =    childCount    -    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	59	None	replace
202	[BUG]  [BUGGY]  last  =  childCount  /  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  childCount  /  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  childCount  /  Context.IN_FOR_INIT_CLAUSE;	  last    =    childCount    -    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	59	None	replace
203	[BUG]  [BUGGY]  while(childCount  ==  1)  {  rehashCode();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  while(childCount  ==  1)  {  rehashCode();  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	while(childCount  ==  1)  {  rehashCode();	  if(childCount    ==    1)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	1	None	replace
204	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
205	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
206	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
207	[BUG]  [BUGGY]  cv.add( "if( ".);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "if( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "if( ".);	  cv.add(   "if(   ");    	non-compiled	[CE]  orphaned  case	50	None	replace
208	[BUG]  [BUGGY]  cv.add( "if( ",  childCount);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "if( ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "if( ",  childCount);	  cv.add(   "if(   ");    	non-compiled	[CE]  orphaned  case	50	None	replace
209	[BUG]  [BUGGY]  cv.add( "if(? ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "if(? ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "if(? ");	  cv.add(   "if(   ");    	non-compiled	[CE]  orphaned  case	50	None	replace
210	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  4;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  4;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    *    4;    	non-compiled	[CE]  orphaned  case	80	None	replace
211	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  2;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  2;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    *    4;    	non-compiled	[CE]  orphaned  case	80	None	replace
212	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE  =  false;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	46	None	replace
213	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  /  ||  Context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  /  ||  Context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  /  ||  Context.IN_FOR_INIT_CLAUSE  =  false;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	46	None	replace
214	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &|  Context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  &|  Context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  &|  Context.IN_FOR_INIT_CLAUSE  =  false;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	46	None	replace
215	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLOSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLOSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLOSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	46	None	replace
216	[BUG]  [BUGGY]  vice.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  vice.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	vice.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	83	None	replace
217	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE,  childCount);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE,  childCount);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
218	[BUG]  [BUGGY]  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLOSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLOSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(childCount,  0,  Context.IN_FOR_INIT_CLOSE);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
219	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE  +  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE  +  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE  +  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	54	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  childCount  ==  4)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  childCount  ==  4)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  ||  childCount  ==  4)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	54	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  >=  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  >=  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  childCount  >=  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	54	None	replace
223	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount!=  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount!=  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	54	None	replace
224	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  childCount  ==  4)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  childCount  ==  4)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  ||  childCount  ==  4)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
226	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  >=  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  >=  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  childCount  >=  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
227	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  ||  childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  ||  childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
228	[BUG]  [BUGGY]  _addExpr( "For( ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "For( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "For( ");	  _addExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	13	None	replace
229	[BUG]  [BUGGY]  _addExpr(childCount,  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr(childCount,  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr(childCount,  1);	  _addExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	13	None	replace
230	[BUG]  [BUGGY]  _addExpr( "token( ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "token( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "token( ");	  _addExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	13	None	replace
231	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
232	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
233	[BUG]  [BUGGY]  vice.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  vice.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	vice.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
234	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar();  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar();  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.isVar();	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
235	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  4;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  4;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	79	None	replace
236	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  2;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	79	None	replace
237	[BUG]  [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	100	None	replace
238	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	100	None	replace
239	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  4);  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  4);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  4);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	65	None	replace
240	[BUG]  [BUGGY]  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	65	None	replace
241	[BUG]  [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	65	None	replace
242	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  2;  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  2;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  2;  break;	  Context.IN_FOR_INIT_CLAUSE    =    1;    break;    	non-compiled	[CE]  orphaned  case	15	None	replace
243	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  4;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  4;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  4;  break;	  Context.IN_FOR_INIT_CLAUSE    =    1;    break;    	non-compiled	[CE]  orphaned  case	15	None	replace
244	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  3;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  3;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  3;  break;	  Context.IN_FOR_INIT_CLAUSE    =    1;    break;    	non-compiled	[CE]  orphaned  case	15	None	replace
245	[BUG]  [BUGGY]  cv.add( "For(n ");  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "For(n ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "For(n ");	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
246	[BUG]  [BUGGY]  cv.add( "For( ",  childCount);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "For( ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "For( ",  childCount);	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
247	[BUG]  [BUGGY]  cv.add( "For( ".);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "For( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "For( ".);	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
248	[BUG]  [BUGGY]  cv.add( ".for( ".);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( ".for( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( ".for( ".);	  cv.add(   ".for(   ");    	non-compiled	[CE]  orphaned  case	69	None	replace
249	[BUG]  [BUGGY]  cv.add( "[for( ".);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "[for( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "[for( ".);	  cv.add(   ".for(   ");    	non-compiled	[CE]  orphaned  case	69	None	replace
250	[BUG]  [BUGGY]  cv.add( "[for( ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "[for( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "[for( ");	  cv.add(   ".for(   ");    	non-compiled	[CE]  orphaned  case	69	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	24	None	replace
252	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  true;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  :  true;	  Context.IN_FOR_INIT_CLAUSE    :    false;    	non-compiled	[CE]  orphaned  case	72	None	replace
253	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  null;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  null;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  :  null;	  Context.IN_FOR_INIT_CLAUSE    :    false;    	non-compiled	[CE]  orphaned  case	72	None	replace
254	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  Boolean.TRUE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  Boolean.TRUE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  :  Boolean.TRUE;	  Context.IN_FOR_INIT_CLAUSE    :    false;    	non-compiled	[CE]  orphaned  case	72	None	replace
255	[BUG]  [BUGGY]  append( "For( ",  childCount);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "For( ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "For( ",  childCount);	  append(   "For(   ");    	non-compiled	[CE]  orphaned  case	27	None	replace
256	[BUG]  [BUGGY]  append( "For(n ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "For(n ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "For(n ");	  append(   "For(   ");    	non-compiled	[CE]  orphaned  case	27	None	replace
257	[BUG]  [BUGGY]  append( "For( ".);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "For( ".);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "For( ".);	  append(   "For(   ");    	non-compiled	[CE]  orphaned  case	27	None	replace
258	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  0;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  0;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  0;	  Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	42	None	replace
259	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  4)  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  4)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  4)  {	  Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	42	None	replace
260	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1;	  Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	42	None	replace
261	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  addExpr(childCount,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	63	None	replace
262	[BUG]  [BUGGY]  addExpr(1,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(1,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(1,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	63	None	replace
263	[BUG]  [BUGGY]  addExpr(2,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(2,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(2,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	63	None	replace
264	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount  +  1);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount  +  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(childCount  +  1);	  throw    new    IllegalArgumentException(   "   ".equals(childCount);    	non-compiled	[CE]  orphaned  case	86	None	replace
265	[BUG]  [BUGGY]  _add( "for( ", ",  Context.IN_FOR);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ", ",  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ", ",  Context.IN_FOR);	  _add(   "for(       ",    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	76	None	replace
266	[BUG]  [BUGGY]  _add( "for( ",  Context.IN_FOR,  childCount);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  Context.IN_FOR,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  Context.IN_FOR,  childCount);	  _add(   "for(       ",    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	76	None	replace
267	[BUG]  [BUGGY]  last  =  4;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  4;	  last    =    childCount;    	non-compiled	[CE]  orphaned  case	57	None	replace
268	[BUG]  [BUGGY]  last  =  0;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  0;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  0;	  last    =    childCount;    	non-compiled	[CE]  orphaned  case	57	None	replace
269	[BUG]  [BUGGY]  last  =  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  1;	  last    =    childCount;    	non-compiled	[CE]  orphaned  case	57	None	replace
270	[BUG]  [BUGGY]  last  =  this.childCount;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  this.childCount;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  this.childCount;	  last    =    childCount;    	non-compiled	[CE]  orphaned  case	57	None	replace
271	[BUG]  [BUGGY]  last  =  2;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  2;	  last    =    childCount;    	non-compiled	[CE]  orphaned  case	57	None	replace
272	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount  -  1));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(childCount  -  1));	  throw    new    IllegalArgumentException(   "   ".equals(childCount));    	non-compiled	[CE]  orphaned  case	36	None	replace
273	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	44	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  2  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  2  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	81	None	replace
275	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  1  &&  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount!=  1  &&  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount!=  1  &&  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
276	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0  ||  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  0  ||  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  0  ||  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
277	[BUG]  [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  Context.IN_FOR_INIT_CLAUSE  -  2;	  last    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	58	None	replace
278	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
279	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
280	[BUG]  [BUGGY]  parent.addExpr(first,  2,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  2,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  2,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    1,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	93	None	replace
281	[BUG]  [BUGGY]  parent.replaceChild(first,  new  Object[]  {  first,  Context.IN_FOR_INIT_CLAUSE  }  );  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.replaceChild(first,  new  Object[]  {  first,  Context.IN_FOR_INIT_CLAUSE  }  );  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.replaceChild(first,  new  Object[]  {  first,  Context.IN_FOR_INIT_CLAUSE  }  );	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    1,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	93	None	replace
282	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(getMessage());  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(getMessage());  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ").equals(getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(getMessage()));    	non-compiled	[CE]  orphaned  case	87	None	replace
283	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type.equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  type.equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "Unknown  type.equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ");	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	38	None	replace
284	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ",  childCount);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "Unknown  type ",  childCount);	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "Unknown    type   ");    	non-compiled	[CE]  orphaned  case	38	None	replace
285	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0  ||  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  0  ||  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  0  ||  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	54	None	replace
286	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  null;  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  null;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  null;  break;	  Context.IN_FOR_INIT_CLAUSE    =    false;    break;    	non-compiled	[CE]  orphaned  case	96	None	replace
287	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.equals(childCount);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.equals(childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.equals(childCount);	  throw    new    IllegalArgumentException(   "   ".equals(childCount);    	non-compiled	[CE]  orphaned  case	86	None	replace
288	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.getMessage());  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.getMessage());  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE.getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(childCount);    	non-compiled	[CE]  orphaned  case	86	None	replace
289	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " "  +  Context.IN_FOR_INIT_CLAUSE);	  throw    new    IllegalArgumentException(   "   ".equals(childCount);    	non-compiled	[CE]  orphaned  case	86	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	53	None	replace
291	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  + "] ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  + "] ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( "   ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : "  + "] ");	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	71	None	replace
292	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	17	None	replace
293	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	17	None	replace
294	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  -  1;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  -  1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  -  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	17	None	replace
295	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	25	None	replace
296	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	60	None	replace
297	[BUG]  [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE  }  );  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE  }  );  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE  }  );  break;	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	60	None	replace
298	[BUG]  [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE  }  );  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE  }  );  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE  }  );	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	60	None	replace
299	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  false;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  false;	  Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	42	None	replace
300	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount)+  1);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toHexString(childCount)+  1);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toHexString(childCount)+  1);	  _add(   "for(   "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	84	None	replace
301	[BUG]  [BUGGY]  cv.add( "for( ",  4);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ",  4);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ",  4);	  cv.add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	51	None	replace
302	[BUG]  [BUGGY]  cv.add( "for( ", ",  childCount);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ", ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ", ",  childCount);	  cv.add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	51	None	replace
303	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	18	None	replace
304	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);	  Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	19	None	replace
305	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount  -  4);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount  -  4);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  childCount  -  4);	  Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	19	None	replace
306	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	62	None	replace
307	[BUG]  [BUGGY]  parent.replaceChild(first,  new  Object[]  {  first,  Context.IN_FOR_INIT_CLAUSE  }  );  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.replaceChild(first,  new  Object[]  {  first,  Context.IN_FOR_INIT_CLAUSE  }  );  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.replaceChild(first,  new  Object[]  {  first,  Context.IN_FOR_INIT_CLAUSE  }  );  break;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
308	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
309	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1);	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	45	None	replace
310	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	20	None	replace
311	[BUG]  [BUGGY]  RectangleEdge.checkState(childCount  ==  2);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  RectangleEdge.checkState(childCount  ==  2);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	RectangleEdge.checkState(childCount  ==  2);	  if(childCount    ==    2)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	2	None	replace
312	[BUG]  [BUGGY]  RectangleEdge.rehashMap();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  RectangleEdge.rehashMap();  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	RectangleEdge.rehashMap();	  if(childCount    ==    2)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	2	None	replace
313	[BUG]  [BUGGY]  cv.add( "For( "  +  Integer.toHexString(childCount));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "For( "  +  Integer.toHexString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "For( "  +  Integer.toHexString(childCount));	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
314	[BUG]  [BUGGY]  cv.add( "For( "  +  Integer.toHexString(childCount)+  1));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "For( "  +  Integer.toHexString(childCount)+  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "For( "  +  Integer.toHexString(childCount)+  1));	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
315	[BUG]  [BUGGY]  cv.add( "For( "  +  Token.IN_FOR);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "For( "  +  Token.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "For( "  +  Token.IN_FOR);	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
316	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  4  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  4  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  4  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    *    4;    	non-compiled	[CE]  orphaned  case	80	None	replace
317	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  *  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    *    4;    	non-compiled	[CE]  orphaned  case	80	None	replace
318	[BUG]  [BUGGY]  cv.add( ".if( ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( ".if( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( ".if( ");	  cv.add(   "if(   ");    	non-compiled	[CE]  orphaned  case	50	None	replace
319	[BUG]  [BUGGY]  cv.add( "for( ",  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "for( ",  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "for( ",  Context.IN_FOR_INIT_CLAUSE,  childCount);	  cv.add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	68	None	replace
320	[BUG]  [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLOSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLOSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	add(first,  0,  Context.IN_FOR_INIT_CLOSE);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
321	[BUG]  [BUGGY]  last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE;	  last    =    childCount    -    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	59	None	replace
322	[BUG]  [BUGGY]  last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  +  4;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  +  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  childCount  -  Context.IN_FOR_INIT_CLAUSE  +  4;	  last    =    childCount    -    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	59	None	replace
323	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(this.childCount));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(this.childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equalsIgnoreCase(this.childCount));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount));    	non-compiled	[CE]  orphaned  case	70	None	replace
324	[BUG]  [BUGGY]  parent  ==  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent  ==  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent  ==  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
325	[BUG]  [BUGGY]  _add( "token( "  +  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "token( "  +  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "token( "  +  Context.IN_FOR_INIT_CLAUSE);	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
326	[BUG]  [BUGGY]  _add( "token( "  +  Context.IN_FOR_INIT_CLAUSE  + ") ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "token( "  +  Context.IN_FOR_INIT_CLAUSE  + ") ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "token( "  +  Context.IN_FOR_INIT_CLAUSE  + ") ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
327	[BUG]  [BUGGY]  _add( "token(0) ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "token(0) ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "token(0) ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
328	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	30	None	replace
329	[BUG]  [BUGGY]  add(childCount,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  add(childCount,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	add(childCount,  0,  Context.IN_FOR_INIT_CLAUSE);	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	30	None	replace
330	[BUG]  [BUGGY]  _addExpr( "for(   ",  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "for(   ",  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "for(   ",  Context.IN_FOR_INIT_CLAUSE);	  _addExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	13	None	replace
331	[BUG]  [BUGGY]  _addExpr( "if( ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "if( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "if( ");	  _addExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	13	None	replace
332	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLOSE  :  true;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLOSE  :  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLOSE  :  true;	  Context.IN_FOR_INIT_CLAUSE    :    false;    	non-compiled	[CE]  orphaned  case	72	None	replace
333	[BUG]  [BUGGY]  addExpr(childCount,  1,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(childCount,  1,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(childCount,  1,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
334	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equalsIgnoreCase(childCount));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( " ".equalsIgnoreCase(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( " ".equalsIgnoreCase(childCount));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
335	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( " ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( " ".equalsIgnoreCase(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
336	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	46	None	replace
337	[BUG]  [BUGGY]  RectangleEdge.recv();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  RectangleEdge.recv();  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	RectangleEdge.recv();	  if(childCount    ==    1)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	1	None	replace
338	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  2);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  2);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  2);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
339	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  3);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  3);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  3);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
340	[BUG]  [BUGGY]  _add( "For( "  +  Token.IN_FOR);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( "  +  Token.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( "  +  Token.IN_FOR);	  _add(   "For(   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
341	[BUG]  [BUGGY]  _add( "For(n ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For(n ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For(n ");	  _add(   "For(   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
342	[BUG]  [BUGGY]  cv.add( "/.for( ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "/.for( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "/.for( ");	  cv.add(   ".for(   ");    	non-compiled	[CE]  orphaned  case	69	None	replace
343	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  false;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  ||  false;	  context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	74	None	replace
344	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  null;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  null;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  =  null;	  context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	74	None	replace
345	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  true;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  ||  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  ||  true;	  context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	74	None	replace
346	[BUG]  [BUGGY]  addExpr(0,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(0,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(0,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  addExpr(childCount,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	63	None	replace
347	[BUG]  [BUGGY]  _add( "for( ",  4);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ",  4);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ",  4);	  _add(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	85	None	replace
348	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount++));  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  childCount++));  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE,  childCount++));	  Context.IN_FOR_INIT_CLAUSE,    childCount++);    	non-compiled	[CE]  orphaned  case	22	None	replace
349	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	83	None	replace
350	[BUG]  [BUGGY]  _add( "for( ", ",  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( ", ",  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( ", ",  Context.IN_FOR_INIT_CLAUSE);	  _add(   "for(       ",    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	75	None	replace
351	[BUG]  [BUGGY]  RectangleEdge.this.rehashCode();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  RectangleEdge.this.rehashCode();  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	RectangleEdge.this.rehashCode();	  if(childCount    ==    4)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	77	None	replace
352	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  0);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	100	None	replace
353	[BUG]  [BUGGY]  Append( "For( ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Append( "For( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Append( "For( ");	  append(   "For(   ");    	non-compiled	[CE]  orphaned  case	27	None	replace
354	[BUG]  [BUGGY]  last  =  childCount  -  4;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  childCount  -  4;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  childCount  -  4;	  last    =    childCount;    	non-compiled	[CE]  orphaned  case	57	None	replace
355	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  3);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  3);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  +  3);	  Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	21	None	replace
356	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  1);  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  -  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  -  1);	  Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	21	None	replace
357	[BUG]  [BUGGY]  aught(1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aught(1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aught(1)  {  throw  new  IllegalArgumentException( " ");  }	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
358	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsUnquotedExceptionHandler( " ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtExceptionHandler.throwAsUnquotedExceptionHandler( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtExceptionHandler.throwAsUnquotedExceptionHandler( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
359	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedExceptionHandler( " ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtExceptionHandler.throwUnquotedExceptionHandler( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtExceptionHandler.throwUnquotedExceptionHandler( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
360	[BUG]  [BUGGY]  _add( "if( "  +  Integer.toHexString(childCount));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "if( "  +  Integer.toHexString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "if( "  +  Integer.toHexString(childCount));	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
361	[BUG]  [BUGGY]  _add( "if( "  +  Integer.toString(childCount));  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "if( "  +  Integer.toString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "if( "  +  Integer.toString(childCount));	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
362	[BUG]  [BUGGY]  _add( "if( "  +  Integer.toHexString(childCount)+ ") ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "if( "  +  Integer.toHexString(childCount)+ ") ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "if( "  +  Integer.toHexString(childCount)+ ") ");	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
363	[BUG]  [BUGGY]  _add( "if( "  +  Integer.toHexString(childCount)+  1));  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "if( "  +  Integer.toHexString(childCount)+  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "if( "  +  Integer.toHexString(childCount)+  1));	  _add(   "if(   ");    	non-compiled	[CE]  orphaned  case	7	None	replace
364	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toString(childCount)+  1));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toString(childCount)+  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toString(childCount)+  1));	  _add(   "for(   "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	94	None	replace
365	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	65	None	replace
366	[BUG]  [BUGGY]  append( "for( ", ",  childCount);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( ", ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( ", ",  childCount);	  append(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	28	None	replace
367	[BUG]  [BUGGY]  append( "for( ",  0,  childCount);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( ",  0,  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( ",  0,  childCount);	  append(   "for(   ",    childCount);    	non-compiled	[CE]  orphaned  case	28	None	replace
368	[BUG]  [BUGGY]  read()  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  read()  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	read()  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
369	[BUG]  [BUGGY]  append( "for([] ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for([] ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for([] ");	  append(   "for(   ".);    	non-compiled	[CE]  orphaned  case	64	None	replace
370	[BUG]  [BUGGY]  append( "for( ". ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( ". ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( ". ");	  append(   "for(   ".);    	non-compiled	[CE]  orphaned  case	64	None	replace
371	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  0);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	91	None	replace
372	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getString()));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getString()));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(getString()));	  throw    new    IllegalArgumentException(   "   ".equals(childCount));    	non-compiled	[CE]  orphaned  case	36	None	replace
373	[BUG]  [BUGGY]  appendExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  appendExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	appendExpr( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);	  appendExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	98	None	replace
374	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  -1;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  -1;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  -1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Token.IN_FOR;    break;    	non-compiled	[CE]  orphaned  case	97	None	replace
375	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  this;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  this;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  this;	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
376	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ",  childCount);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(childCount)?  Context.IN_FOR_INIT_CLAUSE  : " ",  childCount);	  throw    new    IllegalArgumentException(   "   ".equals(childCount)?    Context.IN_FOR_INIT_CLAUSE    :   "   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
377	[BUG]  [BUGGY]  _addExpr( "for( ",  1,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _addExpr( "for( ",  1,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_addExpr( "for( ",  1,  Context.IN_FOR_INIT_CLAUSE);	  _addExpr(   "for(   ",    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	14	None	replace
378	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  true;  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  true;  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	context.IN_FOR_INIT_CLAUSE  =  true;  break;	  Context.IN_FOR_INIT_CLAUSE    =    false;    break;    	non-compiled	[CE]  orphaned  case	96	None	replace
379	[BUG]  [BUGGY]  _add( "For( ",  Context.IN_FOR);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( ",  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( ",  Context.IN_FOR);	  _add(   "for(       ",    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	76	None	replace
380	[BUG]  [BUGGY]  _add( "for( "  +  Context.IN_FOR);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Context.IN_FOR);	  _add(   "for(       ",    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	76	None	replace
381	[BUG]  [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE,  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE,  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE,  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	92	None	replace
382	[BUG]  [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE,  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE)  }  );  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE,  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE)  }  );  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	parent.replaceChild(first,  new  Object[]  {  Context.IN_FOR_INIT_CLAUSE,  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE)  }  );	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	92	None	replace
383	[BUG]  [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	91	None	replace
384	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  1  &&  childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	54	None	replace
385	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	25	None	replace
386	[BUG]  [BUGGY]  cv.add( ",  if( ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( ",  if( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( ",  if( ");	  cv.add(   "if(   ");    	non-compiled	[CE]  orphaned  case	50	None	replace
387	[BUG]  [BUGGY]  cv.add( ",For( ");  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( ",For( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( ",For( ");	  cv.add(   "For(   ");    	non-compiled	[CE]  orphaned  case	49	None	replace
388	[BUG]  [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	30	None	replace
389	[BUG]  [BUGGY]  _reportError( "For( ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _reportError( "For( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_reportError( "For( ");	  _add(   "For(   ");    	non-compiled	[CE]  orphaned  case	6	None	replace
390	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FOR  is  not  an  object  of  type ");  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( "FOR  is  not  an  object  of  type ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( "FOR  is  not  an  object  of  type ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
391	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FOR  is  not  a  valid  argument. ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( "FOR  is  not  a  valid  argument. ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( "FOR  is  not  a  valid  argument. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
392	[BUG]  [BUGGY]  throw  new  IllegalStateException( "FOR  is  not  a  valid  field. ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalStateException( "FOR  is  not  a  valid  field. ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalStateException( "FOR  is  not  a  valid  field. ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  orphaned  case	88	None	replace
393	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
394	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
395	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLOSE);  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLOSE);    	non-compiled	[CE]  orphaned  case	99	None	replace
396	[BUG]  [BUGGY]  try  {  }  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  }  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  }  catch(Exception  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
397	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  5;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  5;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  5;	  Context.IN_FOR_INIT_CLAUSE    =    1;    	non-compiled	[CE]  orphaned  case	34	None	replace
398	[BUG]  [BUGGY]  last  =  count  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  count  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  count  -  Context.IN_FOR_INIT_CLAUSE  +  1;	  last    =    childCount    -    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	59	None	replace
399	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(last));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equalsIgnoreCase(last));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equalsIgnoreCase(last));	  throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(childCount));    	non-compiled	[CE]  orphaned  case	70	None	replace
400	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.BLOCK;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.BLOCK;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Token.BLOCK;	  Context.IN_FOR_INIT_CLAUSE    =    null;    	non-compiled	[CE]  orphaned  case	73	None	replace
401	[BUG]  [BUGGY]  last  =  context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	82	None	replace
402	[BUG]  [BUGGY]  _reportError( "Token( ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _reportError( "Token( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_reportError( "Token( ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
403	[BUG]  [BUGGY]  _add( "[Token( ");  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "[Token( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "[Token( ");	  _add(   "token(   ");    	non-compiled	[CE]  orphaned  case	8	None	replace
404	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2  ||  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  2  ||  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  2  ||  childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    1    ||    childCount    ==    1)    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	26	None	replace
405	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getMessage());  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(getMessage());  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	throw  new  IllegalArgumentException( " ".equals(getMessage());	  throw    new    IllegalArgumentException(   "   ".equals(childCount);    	non-compiled	[CE]  orphaned  case	86	None	replace
406	[BUG]  [BUGGY]  addExpr( "for( ", ",  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr( "for( ", ",  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr( "for( ", ",  0,  Context.IN_FOR_INIT_CLAUSE);	  addExpr(   "for(   ",    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	12	None	replace
407	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(IllegalArgumentException  e)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
408	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  IllegalArgumentException( " ");  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
409	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	61	None	replace
410	[BUG]  [BUGGY]  if(childCount  ==  0)  {  rehashCode();  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  0)  {  rehashCode();  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  0)  {  rehashCode();  }	  if(childCount    ==    4)    {    rehashCode();    }    	non-compiled	[CE]  orphaned  case	77	None	replace
411	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  3;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  3;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  +  3;	  Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
412	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  >  0;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  childCount  >  0;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  childCount  >  0;	  Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	42	None	replace
413	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.getCurrentToken();  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.getCurrentToken();  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.getCurrentToken();	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
414	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.getCurrentNode();  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.getCurrentNode();  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.getCurrentNode();	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	89	None	replace
415	[BUG]  [BUGGY]  cv.add( "].for( ");  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  cv.add( "].for( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	cv.add( "].for( ");	  cv.add(   ".for(   ");    	non-compiled	[CE]  orphaned  case	69	None	replace
416	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtInvalidArgumentException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtInvalidArgumentException( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
417	[BUG]  [BUGGY]  aughtInvalidArgumentException( " ");  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtInvalidArgumentException( " ");  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtInvalidArgumentException( " ");  }	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
418	[BUG]  [BUGGY]  aughtException( " ");  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtException( " ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtException( " ");	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
419	[BUG]  [BUGGY]  aughtException( " ");  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  aughtException( " ");  }  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	aughtException( " ");  }	  if(childCount    ==    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	3	None	replace
420	[BUG]  [BUGGY]  append( "for( ").append(childCount).append( ");  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( ").append(childCount).append( ");  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( ").append(childCount).append( ");	  append(   "for(   ".);    	non-compiled	[CE]  orphaned  case	64	None	replace
421	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	39	None	replace
422	[BUG]  [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    2);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	101	None	replace
423	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Context.IN_FOR_INIT_CLLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Context.IN_FOR_INIT_CLLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  false;	  Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE    =    true;    	non-compiled	[CE]  orphaned  case	43	None	replace
424	[BUG]  [BUGGY]  _add( "For( "  +  Integer.toString(childCount));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( "  +  Integer.toString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( "  +  Integer.toString(childCount));	  _add(   "for(   "    +    Integer.toString(childCount));    	non-compiled	[CE]  orphaned  case	94	None	replace
425	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  Preconditions.checkState(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	81	None	replace
426	[BUG]  [BUGGY]  _add( "For( "  +  Integer.toHexString(childCount));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "For( "  +  Integer.toHexString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "For( "  +  Integer.toHexString(childCount));	  _add(   "for(   "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	84	None	replace
427	[BUG]  [BUGGY]  _add( "toString( "  +  Integer.toHexString(childCount));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "toString( "  +  Integer.toHexString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "toString( "  +  Integer.toHexString(childCount));	  _add(   "for(   "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	84	None	replace
428	[BUG]  [BUGGY]  appendExpr( "for( "  +  Integer.toHexString(childCount));  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  appendExpr( "for( "  +  Integer.toHexString(childCount));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	appendExpr( "for( "  +  Integer.toHexString(childCount));	  addExpr(   "for(       "    +    Integer.toHexString(childCount));    	non-compiled	[CE]  orphaned  case	4	None	replace
429	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	32	None	replace
430	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	65	None	replace
431	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  break;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	65	None	replace
432	[BUG]  [BUGGY]  appendExpr( "for( ",  childCount);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  appendExpr( "for( ",  childCount);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	appendExpr( "for( ",  childCount);	  appendExpr(   "for(   ");    	non-compiled	[CE]  orphaned  case	98	None	replace
433	[BUG]  [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  try  {  [Delete]  catch(Throwable  t)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	try  {  [Delete]  catch(Throwable  t)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	60	None	replace
434	[BUG]  [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	if(childCount  ==  1)  {  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	100	None	replace
435	[BUG]  [BUGGY]  append( "for( "  +  Integer.toString(childCount  -  1));  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( "  +  Integer.toString(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( "  +  Integer.toString(childCount  -  1));	  add(   "for(   "    +    Integer.toString(childCount    -    1));    	non-compiled	[CE]  orphaned  case	48	None	replace
436	[BUG]  [BUGGY]  last  =  context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  last  =  context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	last  =  context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  last    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	55	None	replace
437	[BUG]  [BUGGY]  _add( "for( "  +  Integer.toString(childCount),  Context.IN_FOR);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  _add( "for( "  +  Integer.toString(childCount),  Context.IN_FOR);  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	_add( "for( "  +  Integer.toString(childCount),  Context.IN_FOR);	  add(   "for(   "    +    Integer.toString(childCount),    Context.IN_FOR);    	non-compiled	[CE]  orphaned  case	95	None	replace
438	[BUG]  [BUGGY]  append( "for( "  +  Integer.toHexString(childCount  -  1));  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      break;  }  case  Token.FOR:  if  (childCount  ==  4)  {      [BUGGY]  append( "for( "  +  Integer.toHexString(childCount  -  1));  [BUGGY]      if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	420	420	1	replace	append( "for( "  +  Integer.toHexString(childCount  -  1));	  add(   "for(   "    +    Integer.toHexString(childCount    -    1));    	non-compiled	[CE]  orphaned  case	5	None	replace
