bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if  (childCount  ==  1)  {  [CE]  orphaned  case  [FE]    ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]  if  (childCount  ==  1)  {  [BUGGY]  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1)  {	if  (childCount  ==  4)  {  	non-compiled	[CE]  orphaned  case	46	None	replace
2	[BUG]  [BUGGY]  if  (childCount  ==  2)  {  [CE]  orphaned  case  [FE]      ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]  if  (childCount  ==  2)  {  [BUGGY]  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  2)  {	if  (childCount  ==  4)  {  	non-compiled	[CE]  orphaned  case	46	None	replace
3	[BUG]  [BUGGY]  if  (childCount  ==  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]        ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]  if  (childCount  ==  1  ||  first.isVar())  {  [BUGGY]  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  ||  first.isVar())  {	if  (childCount  ==  4)  {  	non-compiled	[CE]  orphaned  case	46	None	replace
4	[BUG]  [BUGGY]  if  (childCount  ==  1  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]          ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]  if  (childCount  ==  1  ||  childCount  ==  1)  {  [BUGGY]  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  ||  childCount  ==  1)  {	if  (childCount  ==  4)  {  	non-compiled	[CE]  orphaned  case	46	None	replace
5	[BUG]  [BUGGY]    [CE]  orphaned  case  [FE]            ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    [BUGGY]  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	  	if  (childCount  ==  4)  {  	non-compiled	[CE]  orphaned  case	46	None	replace
6	[BUG]  [BUGGY]    Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]    ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;		non-compiled	[CE]  orphaned  case	47	None	add
7	[BUG]  [BUGGY]    int  childCount  =  first.getChildCount();  [CE]  orphaned  case  [FE]      ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  first.getChildCount();  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  first.getChildCount();		non-compiled	[CE]  orphaned  case	47	None	add
8	[BUG]  [BUGGY]    addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]        ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);		non-compiled	[CE]  orphaned  case	47	None	add
9	[BUG]  [BUGGY]    addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]          ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;		non-compiled	[CE]  orphaned  case	47	None	add
10	[BUG]  [BUGGY]    Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]            ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  break;		non-compiled	[CE]  orphaned  case	47	None	add
11	[BUG]  [BUGGY]    Integer  childCount  =  first.getChildCount();  [CE]  orphaned  case  [FE]              ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    Integer  childCount  =  first.getChildCount();  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    Integer  childCount  =  first.getChildCount();		non-compiled	[CE]  orphaned  case	47	None	add
12	[BUG]  [BUGGY]    int  childCount  =  first.childCount();  [CE]  orphaned  case  [FE]    ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  first.childCount();  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  first.childCount();		non-compiled	[CE]  orphaned  case	47	None	add
13	[BUG]  [BUGGY]    int  childCount  =  getChildCount();  [CE]  orphaned  case  [FE]      ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  getChildCount();  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  getChildCount();		non-compiled	[CE]  orphaned  case	47	None	add
14	[BUG]  [BUGGY]    int  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]        ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  Context.IN_FOR_INIT_CLAUSE;		non-compiled	[CE]  orphaned  case	47	None	add
15	[BUG]  [BUGGY]    int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount;  [CE]  orphaned  case  [FE]          ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount;  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount;		non-compiled	[CE]  orphaned  case	47	None	add
16	[BUG]  [BUGGY]    int  childCount  =  first.getChildCount()  -  1;  [CE]  orphaned  case  [FE]    ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  first.getChildCount()  -  1;  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  first.getChildCount()  -  1;		non-compiled	[CE]  orphaned  case	47	None	add
17	[BUG]  [BUGGY]    int  childCount  =  first.size();  [CE]  orphaned  case  [FE]      ComparisonFailure  [CONTEXT]  }  break;  }  case  Token.FOR:  [BUGGY]    int  childCount  =  first.size();  [BUGGY]  if  (childCount  ==  4)  {  add( "for( ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	    int  childCount  =  first.size();		non-compiled	[CE]  orphaned  case	47	None	add
