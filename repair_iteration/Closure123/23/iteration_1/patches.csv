bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  childCount  =  first.childCount()  -  1;  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.childCount()  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.childCount()  -  1;	      int    childCount    =    first.childCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
2	[BUG]  [BUGGY]  int  childCount  =  first.childCount()  +  1;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.childCount()  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.childCount()  +  1;	      int    childCount    =    first.childCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
3	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.');  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.lastIndexOf('.');  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.');	      int    childCount    =    first.childCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
4	[BUG]  [BUGGY]  int  childCount  =  first.getLength();  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.getLength();  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getLength();	      int    childCount    =    first.childCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
5	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  childCount  ==  1)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (childCount  ==  1  &&  childCount  ==  1)  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  childCount  ==  1)  {	  if    (childCount    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
6	[BUG]  [BUGGY]  if  (first  ==  1  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first  ==  1  ||  childCount  ==  1)  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  1  ||  childCount  ==  1)  {	  if    (childCount    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
7	[BUG]  [BUGGY]  if  (childCount  ==  1  ||  childCount  ==  2)  {  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (childCount  ==  1  ||  childCount  ==  2)  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  ||  childCount  ==  2)  {	  if    (childCount    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
8	[BUG]  [BUGGY]  if  (first.isVar())  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first.isVar())  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar())  {	  if    (childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
9	[BUG]  [BUGGY]  if  (first.isVar()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first.isVar()  ||  first.isVar())  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  first.isVar())  {	  if    (childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
10	[BUG]  [BUGGY]  int  childCount  =  first.getFirstChild().getChildCount();  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.getFirstChild().getChildCount();  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getFirstChild().getChildCount();	      int    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	16	None	replace
11	[BUG]  [BUGGY]  int  childCount  =  this.first.getChildCount();  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  this.first.getChildCount();  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.getChildCount();	      int    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	16	None	replace
12	[BUG]  [BUGGY]  int  childCount  =  second.getChildCount();  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  second.getChildCount();  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  second.getChildCount();	      int    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	16	None	replace
13	[BUG]  [BUGGY]  int  childCount  =  getChildCount()  -  1;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  getChildCount()  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount()  -  1;	      int    childCount    =    getChildCount();    	non-compiled	[CE]  orphaned  case	13	None	replace
14	[BUG]  [BUGGY]  int  childCount  =  getChildCount()  +  1;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  getChildCount()  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount()  +  1;	      int    childCount    =    getChildCount();    	non-compiled	[CE]  orphaned  case	13	None	replace
15	[BUG]  [BUGGY]  int  childCount  =  getChildCount(1);  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  getChildCount(1);  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount(1);	      int    childCount    =    getChildCount();    	non-compiled	[CE]  orphaned  case	13	None	replace
16	[BUG]  [BUGGY]  int  childCount  =  getChildCount(0);  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  getChildCount(0);  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount(0);	      int    childCount    =    getChildCount();    	non-compiled	[CE]  orphaned  case	13	None	replace
17	[BUG]  [BUGGY]  int  childCount  =  first.size()  -  1;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.size()  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.size()  -  1;	      int    childCount    =    first.size();    	non-compiled	[CE]  orphaned  case	17	None	replace
18	[BUG]  [BUGGY]  int  childCount  =  first.size()  +  1;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.size()  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.size()  +  1;	      int    childCount    =    first.size();    	non-compiled	[CE]  orphaned  case	17	None	replace
19	[BUG]  [BUGGY]  int  childCount  =  first.size()  -  2;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.size()  -  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.size()  -  2;	      int    childCount    =    first.size();    	non-compiled	[CE]  orphaned  case	17	None	replace
20	[BUG]  [BUGGY]  int  childCount  =  first.size()  /  2;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.size()  /  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.size()  /  2;	      int    childCount    =    first.size();    	non-compiled	[CE]  orphaned  case	17	None	replace
21	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
22	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
23	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
24	[BUG]  [BUGGY]  int  childCount  =  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
25	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
26	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  ||  first.isVar())  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  ==  1  ||  first.isVar())  {	  if    (childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
27	[BUG]  [BUGGY]  if  (first.isFor()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first.isFor()  ||  first.isVar())  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  first.isVar())  {	  if    (childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
28	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first.isVar()  ||  childCount  ==  1)  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  ==  1)  {	  if    (childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
29	[BUG]  [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add(first,  0,  Context.IN_FOR_INIT_CLAUSE);	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
30	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount);	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
31	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
32	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
33	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE;	      	non-compiled	[CE]  orphaned  case	5	None	replace
34	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	6	None	replace
35	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  1;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	6	None	replace
36	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	6	None	replace
37	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	6	None	replace
38	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
39	[BUG]  [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
40	[BUG]  [BUGGY]  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add(first,  Context.IN_FOR_INIT_CLAUSE);  break;	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
41	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  +  1;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.getChildCount()  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  +  1;	      int    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	7	None	replace
42	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  *  2;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.getChildCount()  *  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  *  2;	      int    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	7	None	replace
43	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  -  2;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.getChildCount()  -  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  -  2;	      int    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	7	None	replace
44	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	10	None	replace
45	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  1;  break;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	10	None	replace
46	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	10	None	replace
47	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE;  break;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	10	None	replace
48	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  -  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Integer  childCount  =  first.getChildCount()  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  -  1;	      Integer    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
49	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Integer  childCount  =  first.getChildCount()  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  +  1;	      Integer    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
50	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  *  2;  [CE]  orphaned  case  [FE]                      ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Integer  childCount  =  first.getChildCount()  *  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  *  2;	      Integer    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
51	[BUG]  [BUGGY]  Integer  childCount  =  first.getFirstChild();  [CE]  orphaned  case  [FE]                        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Integer  childCount  =  first.getFirstChild();  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getFirstChild();	      Integer    childCount    =    first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
52	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
53	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
54	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
55	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count;  [CE]  orphaned  case  [FE]                    ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
56	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  +  1;  [CE]  orphaned  case  [FE]                      ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  +  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
57	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
58	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  first.isVar())  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (childCount  ==  1  &&  first.isVar())  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  first.isVar())  {	  if    (childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
59	[BUG]  [BUGGY]  if  (first  ==  1  ||  childCount.isVar())  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first  ==  1  ||  childCount.isVar())  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  1  ||  childCount.isVar())  {	  if    (childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	3	None	replace
60	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  1;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
61	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  2;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  2;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount;    	non-compiled	[CE]  orphaned  case	15	None	replace
62	[BUG]  [BUGGY]  int  childCount  =  getChildCount()  -  2;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  getChildCount()  -  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount()  -  2;	      int    childCount    =    getChildCount();    	non-compiled	[CE]  orphaned  case	13	None	replace
63	[BUG]  [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount  ==  1)  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount  ==  1)  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.getType()  ==  Token.FOR  &&  childCount  ==  1)  {	  if    (childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
64	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE);	      	non-compiled	[CE]  orphaned  case	5	None	replace
65	[BUG]  [BUGGY]  int  childCount  =  first.childCount()  -  2;  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  first.childCount()  -  2;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.childCount()  -  2;	      int    childCount    =    first.childCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
66	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
67	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
68	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	6	None	replace
69	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	6	None	replace
70	[BUG]  [BUGGY]  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  break;	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
71	[BUG]  [BUGGY]  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
72	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
73	[BUG]  [BUGGY]  if  (childCount  ==  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if  (childCount  ==  0)  {  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  0)  {	  if    (childCount    ==    2)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
74	[BUG]  [BUGGY]  int  childCount  =  this.first.size();  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  this.first.size();  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.size();	      int    childCount    =    first.size();    	non-compiled	[CE]  orphaned  case	17	None	replace
75	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  false;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  false;  [BUGGY]    add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  false;	      	non-compiled	[CE]  orphaned  case	5	None	replace
76	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
77	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	8	None	replace
78	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
79	[BUG]  [BUGGY]  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
80	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	      addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	9	None	replace
81	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	10	None	replace
82	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  break;	      Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	10	None	replace
83	[BUG]  [BUGGY]  int  childCount  =  0;  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  int  childCount  =  0;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  0;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
84	[BUG]  [BUGGY]  char  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    }  break;  }  case  Token.FOR:    [BUGGY]  char  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]    if  (childCount  ==  4)  {  add(   "for(   ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  Context.IN_FOR_INIT_CLAUSE;	      int    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	14	None	replace
