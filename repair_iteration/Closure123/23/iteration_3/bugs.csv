bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	37	None	replace
2	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1);	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	37	None	replace
3	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	37	None	replace
4	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1);	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	37	None	replace
5	[BUG]  [BUGGY]  int  childCount  =  this.first.getChildCount()  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.getChildCount()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.getChildCount()  -  1;	  int    childCount    =    this.first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
6	[BUG]  [BUGGY]  int  childCount  =  this.first.getChildCount()  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.getChildCount()  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.getChildCount()  +  1;	  int    childCount    =    this.first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
7	[BUG]  [BUGGY]  int  childCount  =  this.first.getChildCount()  -  2;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.getChildCount()  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.getChildCount()  -  2;	  int    childCount    =    this.first.getChildCount();    	non-compiled	[CE]  orphaned  case	11	None	replace
8	[BUG]  [BUGGY]  int  childCount  =  first.size()  /  2  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.size()  /  2  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.size()  /  2  +  1;	  int    childCount    =    first.size()    /    2;    	non-compiled	[CE]  orphaned  case	20	None	replace
9	[BUG]  [BUGGY]  int  childCount  =  second.size();  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  second.size();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  second.size();	  int    childCount    =    first.size()    /    2;    	non-compiled	[CE]  orphaned  case	20	None	replace
10	[BUG]  [BUGGY]  int  childCount  =  second.childCount();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  second.childCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  second.childCount();	  int    childCount    =    first.childCount()    +    1;    	non-compiled	[CE]  orphaned  case	2	None	replace
11	[BUG]  [BUGGY]  int  childCount  =  first.childCount()  /  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.childCount()  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.childCount()  /  1;	  int    childCount    =    first.childCount()    +    1;    	non-compiled	[CE]  orphaned  case	2	None	replace
12	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  /  2;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getChildCount()  /  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  /  2;	  int    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	42	None	replace
13	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  *  2  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getChildCount()  *  2  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  *  2  +  1;	  int    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	42	None	replace
14	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  *  2  -  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getChildCount()  *  2  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  *  2  -  1;	  int    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	42	None	replace
15	[BUG]  [BUGGY]  if  (first.isExpr()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isExpr()  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isExpr()  ||  first.isVar())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
16	[BUG]  [BUGGY]  if  (first.isFunction()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFunction()  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFunction()  ||  first.isVar())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
17	[BUG]  [BUGGY]  if  (first.isConstructor()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isConstructor()  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isConstructor()  ||  first.isVar())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
18	[BUG]  [BUGGY]  if  (first.isFor()  &&  first.isVar())  {  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  &&  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  &&  first.isVar())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
19	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	39	None	replace
20	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	39	None	replace
21	[BUG]  [BUGGY]  if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	39	None	replace
22	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  2;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  2;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.length    -    1;    	non-compiled	[CE]  orphaned  case	54	None	replace
23	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  4;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  4;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  4;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.length    -    1;    	non-compiled	[CE]  orphaned  case	54	None	replace
24	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  /  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  /  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.length    -    1;    	non-compiled	[CE]  orphaned  case	54	None	replace
25	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  3;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  3;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  -  3;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.length    -    1;    	non-compiled	[CE]  orphaned  case	54	None	replace
26	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  &&  first.isVar())  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  &&  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  ==  1  &&  first.isVar())  {	  if    (first.isVar()    ||    childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	26	None	replace
27	[BUG]  [BUGGY]  if  (first.isFor()  ||  childCount  ==  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  ||  childCount  ==  1  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  childCount  ==  1  ||  first.isVar())  {	  if    (first.isVar()    ||    childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	26	None	replace
28	[BUG]  [BUGGY]  if  (first.isIn()  ||  childCount  ==  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isIn()  ||  childCount  ==  1  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isIn()  ||  childCount  ==  1  ||  first.isVar())  {	  if    (first.isVar()    ||    childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	26	None	replace
29	[BUG]  [BUGGY]  if  (first.isExpr()  ||  childCount  ==  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isExpr()  ||  childCount  ==  1  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isExpr()  ||  childCount  ==  1  ||  first.isVar())  {	  if    (first.isVar()    ||    childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	26	None	replace
30	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  1);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	30	None	replace
31	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  0);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  0);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  0);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	30	None	replace
32	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  4);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  4);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  4);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	30	None	replace
33	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  -  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	30	None	replace
34	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE,  childCount  +  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE,    childCount);    	non-compiled	[CE]  orphaned  case	30	None	replace
35	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  /  2;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getChildCount()  /  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  /  2;	  Integer    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	50	None	replace
36	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  -  2;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getChildCount()  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  -  2;	  Integer    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	50	None	replace
37	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  *  2  +  1;  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getChildCount()  *  2  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  *  2  +  1;	  Integer    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	50	None	replace
38	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  true;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  true;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
39	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  =  true;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
40	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
41	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
42	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  /  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  /  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount    -    1;    	non-compiled	[CE]  orphaned  case	52	None	replace
43	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.')-  1;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.')-  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.')-  1;	  int    childCount    =    first.childCount()    -    1;    	non-compiled	[CE]  orphaned  case	1	None	replace
44	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  first.lastIndexOf('.'))  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  first.lastIndexOf('.'))  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  first.lastIndexOf('.'))  -  1;	  int    childCount    =    first.childCount()    -    1;    	non-compiled	[CE]  orphaned  case	1	None	replace
45	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  first.lastIndexOf('.')-  1);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  first.lastIndexOf('.')-  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  first.lastIndexOf('.')-  1);	  int    childCount    =    first.childCount()    -    1;    	non-compiled	[CE]  orphaned  case	1	None	replace
46	[BUG]  [BUGGY]  int  childCount  =  getChildCount(2);  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  getChildCount(2);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount(2);	  int    childCount    =    getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	13	None	replace
47	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count  -  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.count;    	non-compiled	[CE]  orphaned  case	55	None	replace
48	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count  +  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.count  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.count;    	non-compiled	[CE]  orphaned  case	55	None	replace
49	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.size();  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.size();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.size();	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.count;    	non-compiled	[CE]  orphaned  case	55	None	replace
50	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
51	[BUG]  [BUGGY]  Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
52	[BUG]  [BUGGY]  int  childCount  =  first.getLength()  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getLength()  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getLength()  +  1;	  int    childCount    =    first.getLength();    	non-compiled	[CE]  orphaned  case	4	None	replace
53	[BUG]  [BUGGY]  int  childCount  =  first.getLength()  -  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getLength()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getLength()  -  1;	  int    childCount    =    first.getLength();    	non-compiled	[CE]  orphaned  case	4	None	replace
54	[BUG]  [BUGGY]  int  childCount  =  first.getCharCount();  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getCharCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getCharCount();	  int    childCount    =    first.getLength();    	non-compiled	[CE]  orphaned  case	4	None	replace
55	[BUG]  [BUGGY]  int  childCount  =  first.getChronology().lastIndexOf('.');  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getChronology().lastIndexOf('.');  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChronology().lastIndexOf('.');	  int    childCount    =    first.getLength();    	non-compiled	[CE]  orphaned  case	4	None	replace
56	[BUG]  [BUGGY]  int  childCount  =  1  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  1  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  1  -  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    1;    	non-compiled	[CE]  orphaned  case	24	None	replace
57	[BUG]  [BUGGY]  int  childCount  =  2;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  2;	  int    childCount    =    1;    	non-compiled	[CE]  orphaned  case	24	None	replace
58	[BUG]  [BUGGY]  int  childCount  =  1  -  context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  1  -  context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  1  -  context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    1;    	non-compiled	[CE]  orphaned  case	24	None	replace
59	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  childCount  ==  2)  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  childCount  ==  2)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  childCount  ==  2)  {	  if    (childCount    ==    1    ||    childCount    ==    2)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
60	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  ||  childCount  ==  2)  {  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  ||  childCount  ==  2)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  ==  1  ||  childCount  ==  2)  {	  if    (childCount    ==    1    ||    childCount    ==    2)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
61	[BUG]  [BUGGY]  if  (first  ==  1  ||  childCount  ==  2)  {  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  1  ||  childCount  ==  2)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  1  ||  childCount  ==  2)  {	  if    (childCount    ==    1    ||    childCount    ==    2)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
62	[BUG]  [BUGGY]  int  childCount  =  first.length();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.length();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.length();	  int    childCount    =    first.childCount()    -    2;    	non-compiled	[CE]  orphaned  case	65	None	replace
63	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
64	[BUG]  [BUGGY]  while(childCount  >  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  while(childCount  >  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	while(childCount  >  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	78	None	replace
66	[BUG]  [BUGGY]  int  childCount  =  this.first.size()  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.size()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.size()  -  1;	  int    childCount    =    this.first.size();    	non-compiled	[CE]  orphaned  case	74	None	replace
67	[BUG]  [BUGGY]  int  childCount  =  this.first.size()  -  2;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.size()  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.size()  -  2;	  int    childCount    =    this.first.size();    	non-compiled	[CE]  orphaned  case	74	None	replace
68	[BUG]  [BUGGY]  int  childCount  =  this.first.size()  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.size()  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.size()  +  1;	  int    childCount    =    this.first.size();    	non-compiled	[CE]  orphaned  case	74	None	replace
69	[BUG]  [BUGGY]  int  childCount  =  this.first.size()  /  2;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.first.size()  /  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.first.size()  /  2;	  int    childCount    =    this.first.size();    	non-compiled	[CE]  orphaned  case	74	None	replace
70	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  +  2;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  +  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  +  2;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount    +    1;    	non-compiled	[CE]  orphaned  case	56	None	replace
71	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  +  1;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.length  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount    +    1;    	non-compiled	[CE]  orphaned  case	56	None	replace
72	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	34	None	replace
73	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	34	None	replace
74	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	34	None	replace
75	[BUG]  [BUGGY]  if  (first.isIn()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isIn()  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isIn()  ||  first.isVar())  {	  if    (first.isVar()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	9	None	replace
76	[BUG]  [BUGGY]  Integer  childCount  =  second.getChildCount();  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  second.getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  second.getChildCount();	  Integer    childCount    =    first.getChildCount()    +    1;    	non-compiled	[CE]  orphaned  case	49	None	replace
77	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  /  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getChildCount()  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  /  1;	  Integer    childCount    =    first.getChildCount()    +    1;    	non-compiled	[CE]  orphaned  case	49	None	replace
78	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount.isVar())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isVar()  ||  childCount.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount.isVar())  {	  if    (first    ==    1    ||    childCount.isVar())    {    	non-compiled	[CE]  orphaned  case	59	None	replace
79	[BUG]  [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount.isVar())  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount.isVar())  {	  if    (first    ==    1    ||    childCount.isVar())    {    	non-compiled	[CE]  orphaned  case	59	None	replace
80	[BUG]  [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  first.isVar())  {	  if    (first    ==    1    ||    childCount.isVar())    {    	non-compiled	[CE]  orphaned  case	59	None	replace
81	[BUG]  [BUGGY]  if  (first.isFor()  ||  childCount.isVar())  {  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  ||  childCount.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  childCount.isVar())  {	  if    (first    ==    1    ||    childCount.isVar())    {    	non-compiled	[CE]  orphaned  case	59	None	replace
82	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
83	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	35	None	replace
84	[BUG]  [BUGGY]  if  (first.getType()  ==  Token.FOR  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.getType()  ==  Token.FOR  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.getType()  ==  Token.FOR  ||  childCount  ==  1)  {	  if    (first.getType()    ==    Token.FOR    &&    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	63	None	replace
85	[BUG]  [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount  >  1)  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount  >  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.getType()  ==  Token.FOR  &&  childCount  >  1)  {	  if    (first.getType()    ==    Token.FOR    &&    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	63	None	replace
86	[BUG]  [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount  ==  2)  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount  ==  2)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.getType()  ==  Token.FOR  &&  childCount  ==  2)  {	  if    (first.getType()    ==    Token.FOR    &&    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	63	None	replace
87	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  2;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	68	None	replace
88	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  childCount  >  1)  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  childCount  >  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  childCount  >  1)  {	  if    (childCount    ==    1    &&    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
89	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	22	None	replace
90	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  2;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	22	None	replace
91	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  4;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  4;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  4;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	22	None	replace
92	[BUG]  [BUGGY]  int  childCount  =  first.length;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.length;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.length;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.length;    	non-compiled	[CE]  orphaned  case	53	None	replace
93	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.length  -  1;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.length  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE.length  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.length;    	non-compiled	[CE]  orphaned  case	53	None	replace
94	[BUG]  [BUGGY]  String  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  String  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	String  childCount  =  Context.IN_FOR_INIT_CLAUSE;	  char    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	84	None	replace
95	[BUG]  [BUGGY]  Char  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Char  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Char  childCount  =  Context.IN_FOR_INIT_CLAUSE;	  char    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	84	None	replace
96	[BUG]  [BUGGY]  char  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  char  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1;	  char    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	84	None	replace
97	[BUG]  [BUGGY]  String  childCount  =  context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  String  childCount  =  context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	String  childCount  =  context.IN_FOR_INIT_CLAUSE;	  char    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	84	None	replace
98	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	44	None	replace
99	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	44	None	replace
100	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	44	None	replace
101	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  /  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	45	None	replace
102	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  +  2;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	45	None	replace
103	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    +    1;    break;    	non-compiled	[CE]  orphaned  case	45	None	replace
104	[BUG]  [BUGGY]  int  childCount  =  second.getChildCount()  -  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  second.getChildCount()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  second.getChildCount()  -  1;	  int    childCount    =    second.getChildCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
105	[BUG]  [BUGGY]  int  childCount  =  this.second.getChildCount();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  this.second.getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  this.second.getChildCount();	  int    childCount    =    second.getChildCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
106	[BUG]  [BUGGY]  int  childCount  =  second.getChildCount()  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  second.getChildCount()  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  second.getChildCount()  +  1;	  int    childCount    =    second.getChildCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
107	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	69	None	replace
108	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	69	None	replace
109	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  /  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  /  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	69	None	replace
110	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
111	[BUG]  [BUGGY]  if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
112	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
113	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
114	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	36	None	replace
115	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	36	None	replace
116	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	36	None	replace
117	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    *    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	25	None	replace
118	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    *    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	25	None	replace
119	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    *    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	25	None	replace
120	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  *  Context.IN_FOR_INIT_CLAUSE  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    *    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	25	None	replace
121	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
122	[BUG]  [BUGGY]  if(first.isFor())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
123	[BUG]  [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
124	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE?    Context.IN_FOR_INIT_CLAUSE    :    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	81	None	replace
125	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE,  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	64	None	replace
126	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	64	None	replace
127	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  first);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  first);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE,  first);	  Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	64	None	replace
128	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  1);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE,  1);	  Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	64	None	replace
129	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	38	None	replace
130	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE);  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	82	None	replace
131	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1);  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	82	None	replace
132	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  childCount);  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  childCount);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE,  childCount);  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	82	None	replace
133	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.IN_FOR;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Token.IN_FOR;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Token.IN_FOR;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	47	None	replace
134	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	47	None	replace
135	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  break;  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Intext.IN_FOR_INIT_CLAUSE  +  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Intext.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	47	None	replace
136	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
137	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  2;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	21	None	replace
138	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1  -  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  +  1  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	21	None	replace
139	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  /  2;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  /  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  /  2;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount    -    2;    	non-compiled	[CE]  orphaned  case	61	None	replace
140	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  4;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  4;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  -  4;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount    -    2;    	non-compiled	[CE]  orphaned  case	61	None	replace
141	[BUG]  [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	32	None	replace
142	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  -  1);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  -  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  -  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	32	None	replace
143	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	32	None	replace
144	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(   "for(   ",    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	70	None	replace
145	[BUG]  [BUGGY]  char  childCount  =  first.size();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  char  childCount  =  first.size();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  first.size();	  int    childCount    =    first.size()    -    2;    	non-compiled	[CE]  orphaned  case	19	None	replace
146	[BUG]  [BUGGY]  Integer  childCount  =  first.getFirstChild().getChildCount();  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getFirstChild().getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getFirstChild().getChildCount();	  Integer    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	48	None	replace
147	[BUG]  [BUGGY]  Integer  childCount  =  first.getFirstChild().getChildCount()  -  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getFirstChild().getChildCount()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getFirstChild().getChildCount()  -  1;	  Integer    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	48	None	replace
148	[BUG]  [BUGGY]  int  childCount  =  getChildCount(1)-  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  getChildCount(1)-  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount(1)-  1;	  int    childCount    =    getChildCount(1);    	non-compiled	[CE]  orphaned  case	15	None	replace
149	[BUG]  [BUGGY]  int  childCount  =  getChildCount(1)+  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  getChildCount(1)+  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount(1)+  1;	  int    childCount    =    getChildCount(1);    	non-compiled	[CE]  orphaned  case	15	None	replace
150	[BUG]  [BUGGY]  int  childCount  =  first.getLastChild().getChildCount();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getLastChild().getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getLastChild().getChildCount();	  int    childCount    =    first.getFirstChild().getChildCount();    	non-compiled	[CE]  orphaned  case	10	None	replace
151	[BUG]  [BUGGY]  int  childCount  =  first.getFirstChild().getChildCount()  -  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getFirstChild().getChildCount()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getFirstChild().getChildCount()  -  1;	  int    childCount    =    first.getFirstChild().getChildCount();    	non-compiled	[CE]  orphaned  case	10	None	replace
152	[BUG]  [BUGGY]  int  childCount  =  first.getFirstChild().getChildCount()  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getFirstChild().getChildCount()  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getFirstChild().getChildCount()  +  1;	  int    childCount    =    first.getFirstChild().getChildCount();    	non-compiled	[CE]  orphaned  case	10	None	replace
153	[BUG]  [BUGGY]  int  childCount  =  first.getFirstChild().getLastChild().getChildCount();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getFirstChild().getLastChild().getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getFirstChild().getLastChild().getChildCount();	  int    childCount    =    first.getFirstChild().getChildCount();    	non-compiled	[CE]  orphaned  case	10	None	replace
154	[BUG]  [BUGGY]  while(childCount  >  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  while(childCount  >  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	while(childCount  >  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
155	[BUG]  [BUGGY]  while(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  while(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	while(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
156	[BUG]  [BUGGY]  Integer  childCount  =  first.getLastChild();  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getLastChild();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getLastChild();	  Integer    childCount    =    first.getFirstChild();    	non-compiled	[CE]  orphaned  case	51	None	replace
157	[BUG]  [BUGGY]  Integer  childCount  =  first.getFirstChild().intValue();  [CE]  orphaned  case  [FE]                              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getFirstChild().intValue();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getFirstChild().intValue();	  Integer    childCount    =    first.getFirstChild();    	non-compiled	[CE]  orphaned  case	51	None	replace
158	[BUG]  [BUGGY]  Integer  childCount  =  first.getFirstChild()  -  1;  [CE]  orphaned  case  [FE]                                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getFirstChild()  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getFirstChild()  -  1;	  Integer    childCount    =    first.getFirstChild();    	non-compiled	[CE]  orphaned  case	51	None	replace
159	[BUG]  [BUGGY]  int  childCount  =  getChildCount()  /  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  getChildCount()  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount()  /  1;	  int    childCount    =    getChildCount()    +    1;    	non-compiled	[CE]  orphaned  case	14	None	replace
160	[BUG]  [BUGGY]  if  (first.isFor()  ||  childCount  ==  1  &&  first.isVar())  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  ||  childCount  ==  1  &&  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  childCount  ==  1  &&  first.isVar())  {	  if    (childCount    ==    1    &&    first.isVar())    {    	non-compiled	[CE]  orphaned  case	58	None	replace
161	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  first.isFor())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  first.isFor())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  first.isFor())  {	  if    (childCount    ==    1    &&    first.isVar())    {    	non-compiled	[CE]  orphaned  case	58	None	replace
162	[BUG]  [BUGGY]  if  (first.isFor())  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor())  {	  if    (childCount    ==    0)    {    	non-compiled	[CE]  orphaned  case	73	None	replace
163	[BUG]  [BUGGY]  char  childCount  =  getChildCount();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  char  childCount  =  getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  getChildCount();	  int    childCount    =    getChildCount()    -    2;    	non-compiled	[CE]  orphaned  case	62	None	replace
164	[BUG]  [BUGGY]  t  childCount  =  getChildCount();  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  t  childCount  =  getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	t  childCount  =  getChildCount();	  int    childCount    =    getChildCount()    -    2;    	non-compiled	[CE]  orphaned  case	62	None	replace
165	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	57	None	replace
166	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	57	None	replace
167	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	57	None	replace
168	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	57	None	replace
169	[BUG]  [BUGGY]  if  (first.isFunction())  {  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFunction())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFunction())  {	  if    (first.isVar())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
170	[BUG]  [BUGGY]  char  childCount  =  first.getChildCount();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  char  childCount  =  first.getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  first.getChildCount();	  int    childCount    =    first.getChildCount()    -    2;    	non-compiled	[CE]  orphaned  case	43	None	replace
171	[BUG]  [BUGGY]  int  childCount  =  first.getChildCount()  /  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getChildCount()  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getChildCount()  /  1;	  int    childCount    =    first.getChildCount()    +    1;    	non-compiled	[CE]  orphaned  case	41	None	replace
172	[BUG]  [BUGGY]  int  childCount  =  0L;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  0L;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  0L;	  int    childCount    =    0;    	non-compiled	[CE]  orphaned  case	83	None	replace
173	[BUG]  [BUGGY]  char  childCount  =  0;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  char  childCount  =  0;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  0;	  int    childCount    =    0;    	non-compiled	[CE]  orphaned  case	83	None	replace
174	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	40	None	replace
175	[BUG]  [BUGGY]  if(childCount  ==  2)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  2)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	40	None	replace
176	[BUG]  [BUGGY]  if(first.isFor())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	40	None	replace
177	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  2;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  2;	  int    childCount    =    context.IN_FOR_INIT_CLAUSE.childCount    -    1;    	non-compiled	[CE]  orphaned  case	60	None	replace
178	[BUG]  [BUGGY]  int  childCount  =  first.childCount  -  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.childCount  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.childCount  -  1;	  int    childCount    =    context.IN_FOR_INIT_CLAUSE.childCount    -    1;    	non-compiled	[CE]  orphaned  case	60	None	replace
179	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  1);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  1);	  int    childCount    =    first.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	3	None	replace
180	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  0);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  0);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  0);	  int    childCount    =    first.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	3	None	replace
181	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  2);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  2);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  2);	  int    childCount    =    first.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	3	None	replace
182	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  4);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  4);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  4);	  int    childCount    =    first.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	3	None	replace
183	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  3);  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  3);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  3);	  int    childCount    =    first.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	3	None	replace
184	[BUG]  [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1)  {	  if    (first    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	6	None	replace
185	[BUG]  [BUGGY]  if  (first  ==  first  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  first  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  first  ||  childCount  ==  1)  {	  if    (first    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	6	None	replace
186	[BUG]  [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  first  ==  Context.IN_FOR_INIT_CLAUSE)  {  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  first  ==  Context.IN_FOR_INIT_CLAUSE)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  first  ==  Context.IN_FOR_INIT_CLAUSE)  {	  if    (first    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	6	None	replace
187	[BUG]  [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first  ==  Context.IN_FOR_INIT_CLAUSE  ||  childCount  ==  1  ||  first.isVar())  {	  if    (first    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	6	None	replace
188	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	23	None	replace
189	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	23	None	replace
190	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  break;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
191	[BUG]  [BUGGY]  if(first.isFor())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
192	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  first.isVar()?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
193	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  &&  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	46	None	replace
194	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  +  1;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	46	None	replace
195	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	46	None	replace
196	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	71	None	replace
197	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	71	None	replace
198	[BUG]  [BUGGY]  if(first.isFor())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	71	None	replace
199	[BUG]  [BUGGY]  if  (first.isFor()  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  childCount  ==  1)  {	  if    (first.isVar()    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
200	[BUG]  [BUGGY]  if  (first.isExpr()  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isExpr()  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isExpr()  ||  childCount  ==  1)  {	  if    (first.isVar()    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
201	[BUG]  [BUGGY]  if  (first.isFunction()  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFunction()  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFunction()  ||  childCount  ==  1)  {	  if    (first.isVar()    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
202	[BUG]  [BUGGY]  if  (first.isIn()  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isIn()  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isIn()  ||  childCount  ==  1)  {	  if    (first.isVar()    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
203	[BUG]  [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount!=  1)  {  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.getType()  ==  Token.FOR  &&  childCount!=  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.getType()  ==  Token.FOR  &&  childCount!=  1)  {	  if    (first.getType()    ==    Token.FOR    &&    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	63	None	replace
204	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  childCount  <  1)  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  childCount  <  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  childCount  <  1)  {	  if    (childCount    ==    1    &&    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
205	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	38	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	38	None	replace
207	[BUG]  [BUGGY]  if  (first.isFor(context))  {  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor(context))  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor(context))  {	  if    (first.isVar())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
208	[BUG]  [BUGGY]  if  (first.isConstructor())  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isConstructor())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isConstructor())  {	  if    (first.isVar())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	66	None	replace
210	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	66	None	replace
211	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	66	None	replace
212	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  false);  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE,  false);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE,  false);	  Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	64	None	replace
213	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  +  1);	  Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	64	None	replace
214	[BUG]  [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	39	None	replace
215	[BUG]  [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	32	None	replace
216	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.count  -  1;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.count  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE.count  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.count;    	non-compiled	[CE]  orphaned  case	55	None	replace
217	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  *  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  *  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE.childCount  *  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE.childCount    +    1;    	non-compiled	[CE]  orphaned  case	56	None	replace
218	[BUG]  [BUGGY]  int  childCount  =  first.size()  /  2  -  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.size()  /  2  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.size()  /  2  -  1;	  int    childCount    =    first.size()    /    2;    	non-compiled	[CE]  orphaned  case	20	None	replace
219	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	77	None	replace
222	[BUG]  [BUGGY]  int  childCount  =  4;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  4;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  4;	  int    childCount    =    1;    	non-compiled	[CE]  orphaned  case	24	None	replace
223	[BUG]  [BUGGY]  int  childCount  =  3;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  3;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  3;	  int    childCount    =    1;    	non-compiled	[CE]  orphaned  case	24	None	replace
224	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	33	None	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	67	None	replace
226	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	67	None	replace
227	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	67	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1  &&  first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	67	None	replace
229	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  1  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  1  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  -  1  +  1;	  int    childCount    =    context.IN_FOR_INIT_CLAUSE.childCount    -    1;    	non-compiled	[CE]  orphaned  case	60	None	replace
230	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  /  1;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  /  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE.childCount  /  1;	  int    childCount    =    context.IN_FOR_INIT_CLAUSE.childCount    -    1;    	non-compiled	[CE]  orphaned  case	60	None	replace
231	[BUG]  [BUGGY]  Integer  childCount  =  this.first.getChildCount();  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  this.first.getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  this.first.getChildCount();	  Integer    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	48	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  4)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  4)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  4)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
236	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  true;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  :  true;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
237	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  null;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  null;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  :  null;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
238	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  false;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  :  false;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  :  false;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
239	[BUG]  [BUGGY]  char  childCount  =  first.childCount();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  char  childCount  =  first.childCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	char  childCount  =  first.childCount();	  int    childCount    =    first.childCount()    -    2;    	non-compiled	[CE]  orphaned  case	65	None	replace
240	[BUG]  [BUGGY]  if(first.isVar())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isVar())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isVar())  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	71	None	replace
241	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  -  1);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  -  1);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  -  1);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
242	[BUG]  [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  2);  break;	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
243	[BUG]  [BUGGY]  int  childCount  =  parent.getChildCount();  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  parent.getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  parent.getChildCount();	  int    childCount    =    second.getChildCount();    	non-compiled	[CE]  orphaned  case	12	None	replace
244	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	76	None	replace
245	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	76	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  return  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	76	None	replace
247	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  first.isExpr())  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  first.isExpr())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  first.isExpr())  {	  if    (childCount    ==    1    &&    first.isVar())    {    	non-compiled	[CE]  orphaned  case	58	None	replace
248	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	36	None	replace
249	[BUG]  [BUGGY]  Integer  childCount  =  getChildCount();  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  getChildCount();	  int    childCount    =    getChildCount()    +    1;    	non-compiled	[CE]  orphaned  case	14	None	replace
250	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  -  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	37	None	replace
251	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  break;  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	40	None	replace
252	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount()  *  2  -  1;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getChildCount()  *  2  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount()  *  2  -  1;	  Integer    childCount    =    first.getChildCount()    *    2;    	non-compiled	[CE]  orphaned  case	50	None	replace
253	[BUG]  [BUGGY]  int  childCount  =  first.firstCount();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.firstCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.firstCount();	  int    childCount    =    first.childCount()    -    1;    	non-compiled	[CE]  orphaned  case	1	None	replace
254	[BUG]  [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
255	[BUG]  [BUGGY]  if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isFor())  {  add(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
256	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
257	[BUG]  [BUGGY]  parent  ==  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  parent  ==  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	parent  ==  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
258	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE);	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	82	None	replace
259	[BUG]  [BUGGY]  int  childCount  =  0  +  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  0  +  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  0  +  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    0;    	non-compiled	[CE]  orphaned  case	83	None	replace
260	[BUG]  [BUGGY]  int  childCount  =  first.getImmediateParentCount();  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getImmediateParentCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getImmediateParentCount();	  int    childCount    =    first.getLength();    	non-compiled	[CE]  orphaned  case	4	None	replace
261	[BUG]  [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  1  +  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  1  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  Context.IN_FOR_INIT_CLAUSE  -  1  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	22	None	replace
262	[BUG]  [BUGGY]  if  (first.isConstructor()  ||  first.isVar()  ||  childCount  ==  1)  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isConstructor()  ||  first.isVar()  ||  childCount  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isConstructor()  ||  first.isVar()  ||  childCount  ==  1)  {	  if    (first.isVar()    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
263	[BUG]  [BUGGY]  if  (childCount  ==  1  ||  first  ==  1)  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  ||  first  ==  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  ||  first  ==  1)  {	  if    (first    ==    1    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	6	None	replace
264	[BUG]  [BUGGY]  int  childCount  =  first.lastIndexOf('.',  16);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.lastIndexOf('.',  16);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.lastIndexOf('.',  16);	  int    childCount    =    first.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	3	None	replace
265	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE;  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    break;    	non-compiled	[CE]  orphaned  case	46	None	replace
266	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  >  1  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isVar()  ||  childCount  >  1  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  >  1  ||  first.isVar())  {	  if    (first.isVar()    ||    childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	26	None	replace
267	[BUG]  [BUGGY]  if  (first.isPrimitive()  ||  first.isVar())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isPrimitive()  ||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isPrimitive()  ||  first.isVar())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
268	[BUG]  [BUGGY]  if  (first.isFor()  ||  first.isFor())  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  ||  first.isFor())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  first.isFor())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  0)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	78	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  2);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	78	None	replace
271	[BUG]  [BUGGY]  Integer  childCount  =  first.getFirstChild().getLastChild();  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getFirstChild().getLastChild();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getFirstChild().getLastChild();	  Integer    childCount    =    first.getFirstChild();    	non-compiled	[CE]  orphaned  case	51	None	replace
272	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  2;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  2;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  |  Context.IN_FOR_INIT_CLAUSE  +  2;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	69	None	replace
273	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
274	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	31	None	replace
275	[BUG]  [BUGGY]  if(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
276	[BUG]  [BUGGY]  if(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  }	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  1);  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;	  if(first.isVar())    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    	non-compiled	[CE]  orphaned  case	79	None	replace
278	[BUG]  [BUGGY]  if(first.isPrimitive())  {  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isPrimitive())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isPrimitive())  {	  if    (first.isVar())    {    	non-compiled	[CE]  orphaned  case	8	None	replace
279	[BUG]  [BUGGY]  short  childCount  =  getChildCount();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  short  childCount  =  getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	short  childCount  =  getChildCount();	  int    childCount    =    getChildCount()    -    2;    	non-compiled	[CE]  orphaned  case	62	None	replace
280	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  null;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  null;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  null;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
281	[BUG]  [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  true;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  context.IN_FOR_INIT_CLAUSE  =  true;  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	context.IN_FOR_INIT_CLAUSE  =  true;	  Context.IN_FOR_INIT_CLAUSE    =    false;    	non-compiled	[CE]  orphaned  case	75	None	replace
282	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	36	None	replace
283	[BUG]  [BUGGY]  if  (childCount  ==  1  ||  childCount.isVar())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  ||  childCount.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  ||  childCount.isVar())  {	  if    (first    ==    1    ||    childCount.isVar())    {    	non-compiled	[CE]  orphaned  case	59	None	replace
284	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  first.isFor(context))  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  first.isFor(context))  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  first.isFor(context))  {	  if    (childCount    ==    1    &&    first.isVar())    {    	non-compiled	[CE]  orphaned  case	58	None	replace
285	[BUG]  [BUGGY]  if  (childCount  ==  1  &&  first.isFor(Context.IN_FOR_INIT_CLAUSE))  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (childCount  ==  1  &&  first.isFor(Context.IN_FOR_INIT_CLAUSE))  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (childCount  ==  1  &&  first.isFor(Context.IN_FOR_INIT_CLAUSE))  {	  if    (childCount    ==    1    &&    first.isVar())    {    	non-compiled	[CE]  orphaned  case	58	None	replace
286	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE  -  1;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE  -  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE  -  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    -    1;    	non-compiled	[CE]  orphaned  case	22	None	replace
287	[BUG]  [BUGGY]  Integer  childCount  =  first.getChildCount(1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  first.getChildCount(1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  first.getChildCount(1);	  Integer    childCount    =    first.getChildCount()    -    1;    	non-compiled	[CE]  orphaned  case	48	None	replace
288	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  >  1)  {  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isVar()  ||  childCount  >  1)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  >  1)  {	  if    (first.isVar()    ||    childCount    ==    1)    {    	non-compiled	[CE]  orphaned  case	28	None	replace
289	[BUG]  [BUGGY]  int  childCount  =  first.first.childCount();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.first.childCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.first.childCount();	  int    childCount    =    first.childCount()    -    1;    	non-compiled	[CE]  orphaned  case	1	None	replace
290	[BUG]  [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  ||  first.isExpr())  {  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isVar()  ||  childCount  ==  1  ||  first.isExpr())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isVar()  ||  childCount  ==  1  ||  first.isExpr())  {	  if    (first.isVar()    ||    childCount    ==    1    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	26	None	replace
291	[BUG]  [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  2)  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
292	[BUG]  [BUGGY]  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(first.isVar())  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  break;  }	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    break;    	non-compiled	[CE]  orphaned  case	72	None	replace
293	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE  +  1;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	69	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Preconditions.checkState(childCount  ==  0);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Preconditions.checkState(childCount  ==  0);	  if(childCount    ==    2)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	76	None	replace
295	[BUG]  [BUGGY]  int  childCount  =  first.getFirstChild().getLastChild();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getFirstChild().getLastChild();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getFirstChild().getLastChild();	  int    childCount    =    first.getFirstChild().getChildCount();    	non-compiled	[CE]  orphaned  case	10	None	replace
296	[BUG]  [BUGGY]  int  childCount  =  first.getFirstChild().getParent().getChildCount();  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  first.getFirstChild().getParent().getChildCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  first.getFirstChild().getParent().getChildCount();	  int    childCount    =    first.getFirstChild().getChildCount();    	non-compiled	[CE]  orphaned  case	10	None	replace
297	[BUG]  [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1);  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1);  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.IN_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE  ||  Context.IN_FOR_INIT_CLAUSE  -  1);  break;	  Context.IN_FOR_INIT_CLAUSE    =    Context.IN_FOR_INIT_CLAUSE    ||    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	82	None	replace
298	[BUG]  [BUGGY]  int  childCount  =  1  *  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                        ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  1  *  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  1  *  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    *    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	25	None	replace
299	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                          ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE  /  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    *    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	25	None	replace
300	[BUG]  [BUGGY]  int  childCount  =  1  <  <  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE  +  1;  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  1  <  <  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE  +  1;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  1  <  <  Context.IN_FOR_INIT_CLAUSE?  Context.IN_FOR_INIT_CLAUSE  :  Context.IN_FOR_INIT_CLAUSE  +  1;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE    +    1;    	non-compiled	[CE]  orphaned  case	57	None	replace
301	[BUG]  [BUGGY]  if(childCount  >  0)  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  >  0)  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  >  0)  {	  if    (childCount    ==    0)    {    	non-compiled	[CE]  orphaned  case	73	None	replace
302	[BUG]  [BUGGY]  t  childCount  =  first.childCount();  [CE]  orphaned  case  [FE]            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  t  childCount  =  first.childCount();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	t  childCount  =  first.childCount();	  int    childCount    =    first.childCount()    -    2;    	non-compiled	[CE]  orphaned  case	65	None	replace
303	[BUG]  [BUGGY]  Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  break;  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  break;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Context.in_FOR_INIT_CLAUSE  =  Context.IN_FOR_INIT_CLAUSE;  break;	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  orphaned  case	80	None	replace
304	[BUG]  [BUGGY]  Integer  childCount  =  this.first.getFirstChild();  [CE]  orphaned  case  [FE]                            ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  Integer  childCount  =  this.first.getFirstChild();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	Integer  childCount  =  this.first.getFirstChild();	  Integer    childCount    =    first.getFirstChild();    	non-compiled	[CE]  orphaned  case	51	None	replace
305	[BUG]  [BUGGY]  int  childCount  =  getChildCount(context);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  getChildCount(context);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getChildCount(context);	  int    childCount    =    getChildCount(1);    	non-compiled	[CE]  orphaned  case	15	None	replace
306	[BUG]  [BUGGY]  parent.addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  parent.addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	parent.addExpr(first,  Context.IN_FOR_INIT_CLAUSE);	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	67	None	replace
307	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	67	None	replace
308	[BUG]  [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  context.IN_FOR_INIT_CLAUSE  &  Context.IN_FOR_INIT_CLAUSE;	  int    childCount    =    Context.IN_FOR_INIT_CLAUSE    |    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	23	None	replace
309	[BUG]  [BUGGY]  int  childCount  =  getCurrentLocation();  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  int  childCount  =  getCurrentLocation();  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	int  childCount  =  getCurrentLocation();	  int    childCount    =    0;    	non-compiled	[CE]  orphaned  case	83	None	replace
310	[BUG]  [BUGGY]  try  {  case  Token.FOR:  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  try  {  case  Token.FOR:  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	try  {  case  Token.FOR:  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	66	None	replace
311	[BUG]  [BUGGY]  try  {  case  Token.FOR:  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  try  {  case  Token.FOR:  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	try  {  case  Token.FOR:  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	66	None	replace
312	[BUG]  [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	parent.addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  Context.IN_FOR_INIT_CLAUSE);  }	  if(childCount    ==    1)    {    addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE);    }    else    {    addExpr(first,    Context.IN_FOR_INIT_CLAUSE);    }    	non-compiled	[CE]  orphaned  case	66	None	replace
313	[BUG]  [BUGGY]  if  (first.isFor(context)||  first.isVar())  {  [CE]  orphaned  case  [FE]              ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor(context)||  first.isVar())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor(context)||  first.isVar())  {	  if    (first.isVar()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	9	None	replace
314	[BUG]  [BUGGY]  if  (first.isFor()  ||  first.isFunction())  {  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if  (first.isFor()  ||  first.isFunction())  {  [BUGGY]      add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if  (first.isFor()  ||  first.isFunction())  {	  if    (first.isFor()    ||    first.isVar())    {    	non-compiled	[CE]  orphaned  case	27	None	replace
315	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add( "for( ");  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [CE]  orphaned  case  [FE]                    ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add( "for( ");  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add( "for( ");  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  break;  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    break;    	non-compiled	[CE]  orphaned  case	39	None	replace
316	[BUG]  [BUGGY]  if(childCount  ==  1)  {  add( "for( ");  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [CE]  orphaned  case  [FE]                ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  if(childCount  ==  1)  {  add( "for( ");  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	if(childCount  ==  1)  {  add( "for( ");  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  }	  add(first,    0,    Context.IN_FOR_INIT_CLAUSE);    	non-compiled	[CE]  orphaned  case	29	None	replace
317	[BUG]  [BUGGY]  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [CE]  orphaned  case  [FE]                      ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE  +  1);  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	add( "for( ",  0,  Context.IN_FOR_INIT_CLAUSE  +  1);	  addExpr(first,    0,    Context.IN_FOR_INIT_CLAUSE    +    1);    	non-compiled	[CE]  orphaned  case	32	None	replace
318	[BUG]  [BUGGY]  double  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [CE]  orphaned  case  [FE]                  ComparisonFailure      [CONTEXT]      }  break;  }  case  Token.FOR:      [BUGGY]  double  childCount  =  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      if  (childCount  ==  4)  {  add(     "for(     ");  if  (first.isVar())  {  add(first,  Context.IN_FOR_INIT_CLAUSE);  }  else  {  addExpr(first,  0,  Context.IN_FOR_INIT_CLAUSE);  [CLASS]  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	419	419	1	replace	double  childCount  =  Context.IN_FOR_INIT_CLAUSE;	  char    childCount    =    Context.IN_FOR_INIT_CLAUSE;    	non-compiled	[CE]  orphaned  case	84	None	replace
