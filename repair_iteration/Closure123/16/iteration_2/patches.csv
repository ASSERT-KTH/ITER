bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
2	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    context;    	compilable	  [FE]  ComparisonFailure  	5	1	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    context;    	compilable	  [FE]  ComparisonFailure  	5	1	replace
4	[BUG]  [BUGGY]  Context  rhsContext  =  context.getContext();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.getContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getContext();	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    context;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
5	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    context;    	compilable	  [FE]  IllegalStateException  	7	5	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    context;    	compilable	  [FE]  IllegalStateException  	7	5	replace
7	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  p);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    parent);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	46	None	replace
8	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo(),  n);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo(),  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getJSDocInfo(),  n);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    parent);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
9	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)-  1;  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type)-  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)-  1;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER;    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	170	None	replace
10	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)/  Context.OTHER;  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type)/  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)/  Context.OTHER;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER;    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	170	None	replace
11	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER  +  1;  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER  +  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER  +  1;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER;    	non-compiled	[CE]  ';'  expected	170	None	replace
12	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount),  Context.OTHER;  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount),  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount),  Context.OTHER;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER;    	non-compiled	[CE]  ';'  expected	170	None	replace
13	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(n);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(n);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(n);	  int    p    =    NodeUtil.precedence(context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	115	None	replace
14	[BUG]  [BUGGY]  cc.addOp( ":   ",  false);  [CE]  cannot  find  symbol  rhsContext  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ",  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ",  false);	  cc.addOp(   ":   ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	2	None	replace
15	[BUG]  [BUGGY]  cc.addOp( ": ".,  true);  [CE]  <identifier>  expected  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ": ".,  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ": ".,  true);	  cc.addOp(   ":   ",    true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  Context  rhsContext  =  Context.UNKNOWN;  [CE]  cannot  find  symbol  UNKNOWN  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.UNKNOWN;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.UNKNOWN;	  Context    rhsContext    =    Context.REGEXP;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	48	None	replace
17	[BUG]  [BUGGY]  Context  rhsContext  =  context.REGEXP;  [CE]  cannot  find  symbol  REGEXP  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.REGEXP;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.REGEXP;	  Context    rhsContext    =    Context.REGEXP;    	non-compiled	[CE]  cannot  find  symbol  REGEXP	48	None	replace
18	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	15	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]                  IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	15	None	replace
20	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstance(context);	  Context    rhsContext    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
21	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(p);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstance(p);	  Context    rhsContext    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
22	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(n);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstance(n);	  Context    rhsContext    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
23	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(p,  context);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(p,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstance(p,  context);	  Context    rhsContext    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
24	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
25	[BUG]  [BUGGY]  Context  rhsContext  =  first.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  first.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  first.getCurrentContext();	  Context    rhsContext    =    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
26	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.getCurrentScope();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getCurrentScope();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.getCurrentScope();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.getCurrentScope();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
28	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentScope();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentScope();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentScope();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
29	[BUG]  [BUGGY]  Context  context  =  context.getCurrentScope();  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  context  =  context.getCurrentScope();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  context  =  context.getCurrentScope();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentScope();    	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	178	None	replace
30	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
31	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
32	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Context.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
33	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	82	None	add
34	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	82	None	add
35	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);	  Context.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
36	[BUG]  [BUGGY]  Context.checkState(childCount!=  3);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount!=  3);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount!=  3);  addExpr(first,  p  +  1,  context);	  Context.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
37	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  CONTEXT  :  context;  [CE]  cannot  find  symbol  CONTEXT  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  CONTEXT  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  CONTEXT  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  CONTEXT	88	None	replace
38	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context  :  STATEMENT;  [CE]  cannot  find  symbol  STATEMENT  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context  :  STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context  :  STATEMENT;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	88	None	replace
39	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  STATEMENT  :  context;  [CE]  cannot  find  symbol  STATEMENT  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  STATEMENT  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  STATEMENT  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	88	None	replace
40	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT  :  CONTEXT;  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT  :  CONTEXT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  STATEMENT  :  CONTEXT;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	88	None	replace
41	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT  |  Context.OTHER;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT  |  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.STATEMENT  |  Context.OTHER;	  Context    rhsContext    =    Context.STATEMENT    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	47	None	replace
42	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT?  Context.OTHER  :  Context.STATEMENT;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT?  Context.OTHER  :  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT?  Context.OTHER  :  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT    |    Context.OTHER;    	non-compiled	[CE]  incompatible  types	47	None	replace
43	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  &  Context.OTHER;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  &  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  &  Context.OTHER;	  Context    rhsContext    =    Context.STATEMENT    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	47	None	replace
44	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER  |  CONSTRUCTOR;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER  |  CONSTRUCTOR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER  |  CONSTRUCTOR;	  Context    rhsContext    =    Context.STATEMENT    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	47	None	replace
45	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER  |  CONTEXT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER  |  CONTEXT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER  |  CONTEXT;	  Context    rhsContext    =    Context.STATEMENT    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	47	None	replace
46	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	96	5	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [FE]  IllegalStateException  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	96	5	replace
48	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	96	5	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [FE]  IllegalStateException  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	96	5	replace
50	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	80	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  rhsContext  [FE]                  IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	80	None	replace
52	[BUG]  [BUGGY]  Node  first  =  context.getLastChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  context.getLastChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  context.getLastChild();	  Node    first    =    n.getLastChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	90	None	replace
53	[BUG]  [BUGGY]  Node  first  =  node.getLastChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  node.getLastChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  node.getLastChild();	  Node    first    =    n.getLastChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	90	None	replace
54	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(first.getFirstChild(),  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(first.getFirstChild(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(first.getFirstChild(),  p);	  Context    rhsContext    =    new    Context(first.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	36	None	replace
55	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(first.getLastChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(first.getLastChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(first.getLastChild());	  Context    rhsContext    =    new    Context(first.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	36	None	replace
56	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(first.getFirstChild(),  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(first.getFirstChild(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(first.getFirstChild(),  context);	  Context    rhsContext    =    new    Context(first.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	36	None	replace
57	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  n.getCurrentContext();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  n.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  n.getCurrentContext();	  Context    rhsContext    =(context!=    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
58	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  n.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  n.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  n.getCurrentContext();	  Context    rhsContext    =(context!=    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
59	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  STATEMENT  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context!=    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	157	None	replace
60	[BUG]  [BUGGY]  int  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    int    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	31	None	replace
61	[BUG]  [BUGGY]  Integer  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    int    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	31	None	replace
62	[BUG]  [BUGGY]  Context  context  =  Context.STATEMENT;  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  context  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  context  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    int    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	31	None	replace
63	[BUG]  [BUGGY]  Context  rhsContext  =  IN_FOR_INIT_CLAUSE;  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  IN_FOR_INIT_CLAUSE;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  IN_FOR_INIT_CLAUSE;	  Context    rhsContext    =    STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	41	None	replace
64	[BUG]  [BUGGY]  Context  rhsContext  =  CONSTRUCTOR;  [CE]  cannot  find  symbol  CONSTRUCTOR  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  CONSTRUCTOR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  CONSTRUCTOR;	  Context    rhsContext    =    STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  CONSTRUCTOR	41	None	replace
65	[BUG]  [BUGGY]  Context  rhsContext  =  context.next;  [CE]  cannot  find  symbol  next  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.next;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.next;	  Context    rhsContext    =    context;    Context    rhsContext    =    context;    	non-compiled	[CE]  cannot  find  symbol  next	4	None	replace
66	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  not  a  statement	175	None	add
67	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);	  	non-compiled	[CE]  not  a  statement	175	None	add
68	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :	  	non-compiled	[CE]  not  a  statement	175	None	add
69	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;	  	non-compiled	[CE]  not  a  statement	175	None	add
70	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  not  a  statement	175	None	add
71	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(n,  NodeUtil.opToStrNoFail(type),  false);  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(n,  NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(n,  NodeUtil.opToStrNoFail(type),  false);	  	non-compiled	[CE]  not  a  statement	175	None	add
72	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNonOperator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNonOperator();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNonOperator();	  Context    cc    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
73	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNonInOperator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNonInOperator();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNonInOperator();	  Context    cc    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
74	[BUG]  [BUGGY]  Node  first  =  context.getNext();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  context.getNext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  context.getNext();	  Node    first    =    n.getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	92	None	replace
75	[BUG]  [BUGGY]  Node  first  =  n.getNext()  +  1;  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getNext()  +  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getNext()  +  1;	  Node    first    =    n.getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	92	None	replace
76	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  NodeUtil.opToStrNoFail(p);  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  NodeUtil.opToStrNoFail(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.OTHER  :  NodeUtil.opToStrNoFail(p);	  Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    	non-compiled	[CE]  incompatible  types	140	None	replace
77	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  first;  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  first;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.OTHER  :  first;	  Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    	non-compiled	[CE]  incompatible  types	140	None	replace
78	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  n;  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  n;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.OTHER  :  n;	  Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    	non-compiled	[CE]  incompatible  types	140	None	replace
79	[BUG]  [BUGGY]  Node  first  =  p.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  p.getFirstChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  p.getFirstChild();	  Node    first    =    context.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	91	None	replace
80	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContext(p);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContext(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContext(p);	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
81	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContext(n);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContext(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContext(n);	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
82	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContext(context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContext(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContext(context);	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
83	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContext().getRootContext();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContext().getRootContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContext().getRootContext();	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
84	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(first,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(first,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(first,  context);	  int    p    =    NodeUtil.precedence(first);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	152	None	replace
85	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	87	5	replace
86	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.OTHER;  [FE]  IllegalStateException  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	87	5	replace
87	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	87	5	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.OTHER;  [FE]  IllegalStateException  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	87	5	replace
89	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	87	5	replace
90	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.OTHER;  [FE]  IllegalStateException  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.OTHER;	          Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  IllegalStateException  	87	5	replace
91	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(),  context.getRootContext();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(),  context.getRootContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(),  context.getRootContext();	  Context    cc    =    getCurrentContext().getRootContext();    	non-compiled	[CE]  ';'  expected	67	None	replace
92	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().cloneTree().getRootContext();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext().cloneTree().getRootContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext().cloneTree().getRootContext();	  Context    cc    =    getCurrentContext().getRootContext();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
93	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().cloneTree();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext().cloneTree();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext().cloneTree();	  Context    cc    =    getCurrentContext().getRootContext();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
94	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount),  Context.OTHER);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount),  Context.OTHER);	  int    p    =    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  ';'  expected	169	None	replace
95	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER,  childCount);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER,  childCount);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER,  childCount);	  int    p    =    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  ';'  expected	169	None	replace
96	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER,  childCount++;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER,  childCount++;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER,  childCount++;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  ';'  expected	169	None	replace
97	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  p,  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  p,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  p,  context);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	43	None	replace
98	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo(),  first);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo(),  first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getJSDocInfo(),  first);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    context);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
99	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  type);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  type);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  type);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	43	None	replace
100	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT  |  Context.START_OF_EXPR;  [CE]  cannot  find  symbol  STATEMENT  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  STATEMENT  |  Context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT  |  Context.START_OF_EXPR;	  Context    rhsContext    =    context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	107	None	replace
101	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  +  1;	  Context    rhsContext    =    context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	107	None	replace
102	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.END_OF_EXPR;  [CE]  cannot  find  symbol  END_OF_EXPR  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.END_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER  |  Context.END_OF_EXPR;	  Context    rhsContext    =    context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPR	107	None	replace
103	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  |  STATEMENT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  |  STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  |  STATEMENT;	  Context    rhsContext    =    context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	107	None	replace
104	[BUG]  [BUGGY]  addExpr(last,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(last,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(last,  p  +  1,  context);	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	95	None	replace
105	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	29	5	replace
106	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	29	5	replace
107	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	29	5	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	29	5	replace
109	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  IllegalStateException  	29	5	replace
110	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [FE]  IllegalStateException  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  IllegalStateException  	29	5	replace
111	[BUG]  [BUGGY]  Context  context  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  context  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  context  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	29	None	replace
112	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n,  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n,  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  n,  1);	  Context    rhsContext    =    getContextForNoChild(context,    n);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
113	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  childCount);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  childCount);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  childCount);	  Context    rhsContext    =    getContextForNoChild(context,    n);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
114	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  parent);  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  parent);	  Context    rhsContext    =    getContextForNoChild(context,    n);    	non-compiled	[CE]  cannot  find  symbol  parent	136	None	replace
115	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  STATEMENT.getFirstChild());  [CE]  cannot  find  symbol  STATEMENT  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  STATEMENT.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  STATEMENT.getFirstChild());	  Context    rhsContext    =    new    Context(n,    context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	129	None	replace
116	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getFirstChild(),  p);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getFirstChild(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getFirstChild(),  p);	  Context    rhsContext    =    new    Context(n,    context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
117	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  n.getFirstChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  n.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  n.getFirstChild());	  Context    rhsContext    =    new    Context(n,    context.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	129	None	replace
118	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNonOperator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNonOperator();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNonOperator();	  Context    rhsContext    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
119	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNonEmptyContext();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNonEmptyContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNonEmptyContext();	  Context    rhsContext    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
120	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNonInOperator();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNonInOperator();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNonInOperator();	  Context    rhsContext    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
121	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  ==  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]        IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	153	None	replace
122	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
123	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount  ==  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	153	None	replace
124	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  >>  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  >>  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  >>  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	153	None	replace
125	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  >=  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  >=  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  >=  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	153	None	replace
126	[BUG]  [BUGGY]  Integer  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	74	None	replace
127	[BUG]  [BUGGY]  int  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	74	None	replace
128	[BUG]  [BUGGY]  int  rhsContext  =  Context.OTHER  |  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  Context.OTHER  |  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  Context.OTHER  |  Context.OTHER;  addExpr(first,  p  +  1,  context);	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	74	None	replace
129	[BUG]  [BUGGY]  Node  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Node    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	147	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Node  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Node  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Node  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Node    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	147	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Node  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Node  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Node  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Node    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	147	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Node  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Node    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	147	None	replace
133	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  IllegalStateException  	146	5	replace
134	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  [FE]  IllegalStateException  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  IllegalStateException  	146	5	replace
135	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  IllegalStateException  	146	5	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  [FE]  IllegalStateException  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  IllegalStateException  	146	5	replace
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  ComparisonFailure  	146	1	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  ComparisonFailure  	146	1	replace
139	[BUG]  [BUGGY]  Context  rhsContext  =  first.createContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  first.createContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  first.createContext();	  Context    rhsContext    =    STATEMENT.createContext();    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
140	[BUG]  [BUGGY]  Context  rhsContext  =  CONSTRUCTOR.createContext();  [CE]  cannot  find  symbol  CONSTRUCTOR  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  CONSTRUCTOR.createContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  CONSTRUCTOR.createContext();	  Context    rhsContext    =    STATEMENT.createContext();    	non-compiled	[CE]  cannot  find  symbol  CONSTRUCTOR	37	None	replace
141	[BUG]  [BUGGY]  String  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  String  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	String  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	  char    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	167	None	replace
142	[BUG]  [BUGGY]  char  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  char  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	char  p  =  NodeUtil.precedence(type);	  char    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	167	None	replace
143	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	18	None	replace
144	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	18	None	replace
145	[BUG]  [BUGGY]  n.addOp( "?   ",  true);  n.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  n.addOp( "?   ",  true);  n.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	n.addOp( "?   ",  true);  n.addOp( "?   ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
146	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected:  <  var  foo=[]x?  {  a:1  }  ;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  junit.framework.ComparisonFailure:  expected:  <  var  foo=[]x?  {  a:1  }  ;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	junit.framework.ComparisonFailure:  expected:  <  var  foo=[]x?  {  a:1  }  ;	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  not  a  statement	18	None	replace
147	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }  [CE]  cannot  find  symbol  rhsContext  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	18	None	replace
148	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(p,  context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(p,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(p,  context);	  Context    rhsContext    =    getCurrentContext(p);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
149	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(p  +  1);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(p  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(p  +  1);	  Context    rhsContext    =    getCurrentContext(p);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
150	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(context,  p);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(context,  p);	  Context    rhsContext    =    getCurrentContext(p);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
151	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	142	None	replace
152	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	142	None	replace
153	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
154	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	16	None	replace
155	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]                    IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
156	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]                      IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
157	[BUG]  [BUGGY]  Context  rhsContext  =  getRhsContext();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getRhsContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getRhsContext();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
158	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoDeclaration();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoDeclaration();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoDeclaration();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
159	[BUG]  [BUGGY]  Context  rhsContext  =  getContext(p);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContext(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContext(p);	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
160	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(first);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(first);	  Context    rhsContext    =    getContextForNoChild(n);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
161	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(last);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(last);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(last);	  Context    rhsContext    =    getContextForNoChild(n);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
162	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(p);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(p);	  Context    rhsContext    =    getContextForNoChild(n);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  first  =  node.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  first  =  node.getFirstChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Node  first  =  node.getFirstChild();	  Node    first    =    node.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	93	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context.checkState(p  ==  1);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context.checkState(p  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context.checkState(p  ==  1);	          Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
166	[BUG]  [BUGGY]  Context.checkState(p  ==  1);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(p  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(p  ==  1);	          Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
167	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getRootContext());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getRootContext());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getRootContext());	  Context    rhsContext    =    new    Context(context.getRootContext());    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
168	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  STATEMENT.getRootContext());  [CE]  cannot  find  symbol  STATEMENT  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  STATEMENT.getRootContext());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  STATEMENT.getRootContext());	  Context    rhsContext    =    new    Context(context.getRootContext());    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	180	None	replace
169	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getRootContext(),  context);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getRootContext(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getRootContext(),  context);	  Context    rhsContext    =    new    Context(context.getRootContext());    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
170	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  getRootContext());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  getRootContext());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  getRootContext());	  Context    rhsContext    =    new    Context(context.getRootContext());    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
171	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getRootContext());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getRootContext());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getRootContext());	  Context    rhsContext    =    new    Context(context.getRootContext());    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
172	[BUG]  [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp('?',  true);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp('?',  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  false);  cc.addOp('?',  true);	          cc.addOp(       "?       ",    true);    cc.addOp('?',    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	22	None	replace
173	[BUG]  [BUGGY]  cc.addOp( ",  true);  [CE]  unclosed  string  literal  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp('?',    true);    	non-compiled	[CE]  unclosed  string  literal	22	None	replace
174	[BUG]  [BUGGY]  cc.addOp( "?   ",  true);  cc.addOp('?',  false);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  true);  cc.addOp('?',  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  true);  cc.addOp('?',  false);	          cc.addOp(       "?       ",    true);    cc.addOp('?',    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	22	None	replace
175	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  not  a  statement	94	None	add
176	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);	  	non-compiled	[CE]  not  a  statement	94	None	add
177	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :	  	non-compiled	[CE]  not  a  statement	94	None	add
178	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  ==  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  ==  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  ==  cc.addOp(NodeUtil.opToStrNoFail(type),  false);	  	non-compiled	[CE]  not  a  statement	94	None	add
179	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  not  a  statement	94	None	add
180	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;	  	non-compiled	[CE]  not  a  statement	94	None	add
181	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.IN_FOR_INIT_CLAUSE;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.IN_FOR_INIT_CLAUSE;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  |  Context.IN_FOR_INIT_CLAUSE;	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	26	None	replace
182	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
183	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  IllegalStateException  	145	5	replace
184	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;  [FE]  IllegalStateException  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  IllegalStateException  	145	5	replace
185	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  IllegalStateException  	145	5	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount    ==    1);    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  IllegalStateException  	145	5	replace
187	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.END_OF_ELSE;  [CE]  cannot  find  symbol  END_OF_ELSE  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.END_OF_ELSE;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.END_OF_ELSE;	  Context    rhsContext    =    Context.OTHER    |    Context.END_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  END_OF_ELSE	108	None	replace
188	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.BLOCK;  [CE]  cannot  find  symbol  BLOCK  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.BLOCK;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.BLOCK;	  Context    rhsContext    =    Context.OTHER    |    Context.END_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  BLOCK	108	None	replace
189	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  +  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  +  1);	  Integer    p    =    NodeUtil.precedence(childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	105	None	replace
190	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(last);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(last);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(last);	  Integer    p    =    NodeUtil.precedence(childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	105	None	replace
191	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  -  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  -  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  -  1);	  Integer    p    =    NodeUtil.precedence(childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	105	None	replace
192	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  childCount  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);	  int    childCount    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	122	None	replace
193	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  childCount  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);	  int    childCount    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	122	None	replace
194	[BUG]  [BUGGY]  Integer  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	  int    childCount    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	122	None	replace
195	[BUG]  [BUGGY]  Context  rhsContext  =  n.createContext(context);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  n.createContext(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  n.createContext(context);	  Context    rhsContext    =    context.createContext(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
196	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT.createContext(n);  [CE]  cannot  find  symbol  STATEMENT  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  STATEMENT.createContext(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT.createContext(n);	  Context    rhsContext    =    context.createContext(n);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	137	None	replace
197	[BUG]  [BUGGY]  Context  rhsContext  =  context.createContext(n,  p);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.createContext(n,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.createContext(n,  p);	  Context    rhsContext    =    context.createContext(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
198	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT.createContext(context);  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  STATEMENT.createContext(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT.createContext(context);	  Context    rhsContext    =    context.createContext(n);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	137	None	replace
199	[BUG]  [BUGGY]  Context  rhsContext  =  context.createContext(p);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.createContext(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.createContext(p);	  Context    rhsContext    =    context.createContext(n);    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
200	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(n);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(n);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(n);	  Context    cc    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
201	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  p);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context,  p);	  Context    cc    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
202	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  first);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  first);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context,  first);	  Context    cc    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
203	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  false);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context,  false);	  Context    cc    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
204	[BUG]  [BUGGY]  Context.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);	  Preconditions.checkState(childCount    ==    0);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
205	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last,  type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(last,  type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last,  type);	  int    p    =    NodeUtil.precedence(last);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	151	None	replace
206	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(last,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last,  context);	  int    p    =    NodeUtil.precedence(last);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	151	None	replace
207	[BUG]  [BUGGY]  Context.checkState(p  ==  3);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(p  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(p  ==  3);	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
208	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  STATEMENT);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	163	None	replace
209	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  p);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  p);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
210	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(first,  context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(first,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(first,  context);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
211	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(context,  first);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(context,  first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(context,  first);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
212	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context,  first);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context,  first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context,  first);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
213	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p),  false);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p),  false);	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	3	None	replace
214	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p),  context);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p),  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p),  context);	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	3	None	replace
215	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p),  true);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p),  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p),  true);	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	3	None	replace
216	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p,  context));  [CE]  no  suitable  method  found  for  equals(int,Context)  [FE]                  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p,  context));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p,  context));	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  no  suitable  method  found  for  equals(int,Context)	3	None	replace
217	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p  +  1));  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p  +  1));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p  +  1));	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	3	None	replace
218	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp('?       ",    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	132	None	replace
219	[BUG]  [BUGGY]  n.addOp( "?   ",  true);  n.addOp('?',  true);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  n.addOp( "?   ",  true);  n.addOp('?',  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	n.addOp( "?   ",  true);  n.addOp('?',  true);	          cc.addOp(       "?       ",    true);    cc.addOp('?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
220	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	14	None	replace
222	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(context,  p);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(context,  p);	  Context    rhsContext    =    createContext(context);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
223	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(context,  n);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(context,  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(context,  n);	  Context    rhsContext    =    createContext(context);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
224	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  ComparisonFailure  	56	1	replace
225	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  ComparisonFailure  	56	1	replace
226	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(n);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(n);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
227	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(childCount);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(childCount);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(childCount);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
228	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type,  p);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(type,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type,  p);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
229	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type),  Context.OTHER);  [CE]  ';'  expected  [FE]                              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type),  Context.OTHER);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  ';'  expected	104	None	replace
230	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(last);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(last);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(last);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context.checkState(p  ==  2);  [CE]  cannot  find  symbol  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context.checkState(p  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context.checkState(p  ==  2);	          Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
234	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  STATEMENT  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	72	None	replace
235	[BUG]  [BUGGY]  Context  rhsContext  =(CONTEXT  ==  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();  [CE]  cannot  find  symbol  CONTEXT  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(CONTEXT  ==  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(CONTEXT  ==  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  CONTEXT	72	None	replace
236	[BUG]  [BUGGY]  Context  rhsContext  =(STATEMENT  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  STATEMENT  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(STATEMENT  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(STATEMENT  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	72	None	replace
237	[BUG]  [BUGGY]  Context  context  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  context  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  context  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	72	None	replace
238	[BUG]  [BUGGY]  Node  first  =  context.getFirstChild().cloneTree();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  context.getFirstChild().cloneTree();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  context.getFirstChild().cloneTree();	  Node    first    =    n.getFirstChild().cloneTree();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	134	None	replace
239	[BUG]  [BUGGY]  Node  first  =  n.getLastChild().cloneTree();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getLastChild().cloneTree();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getLastChild().cloneTree();	  Node    first    =    n.getFirstChild().cloneTree();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	134	None	replace
240	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().cloneTree(context);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getFirstChild().cloneTree(context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().cloneTree(context);	  Node    first    =    n.getFirstChild().cloneTree();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	134	None	replace
241	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().cloneTree(p);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getFirstChild().cloneTree(p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().cloneTree(p);	  Node    first    =    n.getFirstChild().cloneTree();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	134	None	replace
242	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount,  type);	  int    p    =    NodeUtil.precedence(type,    childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	113	None	replace
243	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  postProp);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  postProp);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  postProp);	  int    p    =    NodeUtil.precedence(type,    childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	113	None	replace
244	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  prev);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  prev);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  prev);	  int    p    =    NodeUtil.precedence(type,    childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	113	None	replace
245	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  childCount  +  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  childCount  +  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  childCount  +  1);	  int    p    =    NodeUtil.precedence(type,    childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	113	None	replace
246	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  STATEMENT);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	62	None	replace
247	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(first,  n);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(first,  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(first,  n);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
248	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  p);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  p);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
249	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(last,  n);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(last,  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(last,  n);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
250	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(first,  context);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(first,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(first,  context);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
251	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(n);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(n);	  Context    cc    =    getCurrentContext(context);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
252	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(p);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(p);	  Context    cc    =    getCurrentContext(context);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
253	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(context,  p);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(context,  p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(context,  p);	  Context    cc    =    getCurrentContext(context);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
254	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(n,  context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(n,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(n,  context);	  Context    cc    =    getCurrentContext(context);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
255	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(p);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNode(p);	  Context    rhsContext    =    getCurrentContextForNode();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
256	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(n);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNode(n);	  Context    rhsContext    =    getCurrentContextForNode();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
257	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(context);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNode(context);	  Context    rhsContext    =    getCurrentContextForNode();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
258	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	20	None	replace
259	[BUG]  [BUGGY]  n.addOp( "?   ",  true);  n.addOp( ".?   ",  true);  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  n.addOp( "?   ",  true);  n.addOp( ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	n.addOp( "?   ",  true);  n.addOp( ".?   ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
260	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  rhsContext  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	20	None	replace
261	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }  [CE]  cannot  find  symbol  rhsContext  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	20	None	replace
262	[BUG]  [BUGGY]  addExpr(last,  NodeUtil.precedence(type),  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(last,  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(last,  NodeUtil.precedence(type),  Context.OTHER);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	135	None	replace
263	[BUG]  [BUGGY]  addExpr(first,  NodeUtil.precedence(p),  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  NodeUtil.precedence(p),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  NodeUtil.precedence(p),  Context.OTHER);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	135	None	replace
264	[BUG]  [BUGGY]  addExpr(p,  NodeUtil.precedence(type),  Context.OTHER);  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(p,  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(p,  NodeUtil.precedence(type),  Context.OTHER);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	135	None	replace
265	[BUG]  [BUGGY]  addExpr(n,  NodeUtil.precedence(type),  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(n,  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(n,  NodeUtil.precedence(type),  Context.OTHER);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	135	None	replace
266	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  true);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  true);	  int    p    =    NodeUtil.precedence(type,    false);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	116	None	replace
267	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  false);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount,  false);	  int    p    =    NodeUtil.precedence(type,    false);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	116	None	replace
268	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(context,  false);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(context,  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(context,  false);	  int    p    =    NodeUtil.precedence(type,    false);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	116	None	replace
269	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  false,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  false,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  false,  context);	  int    p    =    NodeUtil.precedence(type,    false);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	116	None	replace
270	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(n,  false);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(n,  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(n,  false);	  int    p    =    NodeUtil.precedence(type,    false);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	116	None	replace
271	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(n,  context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(n,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(n,  context);	  Context    rhsContext    =    getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
272	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(last);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(last);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(last);	  Context    rhsContext    =    getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
273	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(first);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(first);	  Context    rhsContext    =    getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
274	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p  +  1);  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  p  +  1);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    p);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	34	None	replace
275	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild(),  p);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getFirstChild(),  p);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    p);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
276	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p,  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  p,  context);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    p);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	34	None	replace
277	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getLastChild(),  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getLastChild(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getLastChild(),  p);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    p);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	34	None	replace
278	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
279	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
280	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
281	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	10	None	add
282	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	10	None	add
283	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  context);	  Preconditions.checkState(childCount    ==    2);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
284	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  Context.OTHER);	  Preconditions.checkState(childCount    ==    2);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	162	None	replace
285	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    4);    Context    rhsContext    =    context;    	compilable	  [FE]  IllegalStateException  	8	5	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;  [FE]  IllegalStateException  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    4);    Context    rhsContext    =    context;    	compilable	  [FE]  IllegalStateException  	8	5	replace
287	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild(),  context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getFirstChild(),  context);	  Context    rhsContext    =    new    Context(context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
288	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	75	5	add
289	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	75	5	add
290	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	  	non-compiled	[CE]  cannot  find  symbol	75	None	add
291	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	75	None	add
292	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	75	None	add
293	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	81	None	replace
294	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  STATEMENT.getJSDocInfo());  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  STATEMENT.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  STATEMENT.getJSDocInfo());	  Context    rhsContext    =    new    Context(context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	42	None	replace
295	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  getJSDocInfo());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  getJSDocInfo());	  Context    rhsContext    =    new    Context(context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
296	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo(),  context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getJSDocInfo(),  context);	  Context    rhsContext    =    new    Context(context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
297	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(childCount);  [CE]  cannot  find  symbol  rhsContext  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(childCount);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(childCount);	  int    firstCount    =    NodeUtil.precedence(p);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	128	None	replace
298	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(parent);  [CE]  cannot  find  symbol  parent  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(parent);	  int    firstCount    =    NodeUtil.precedence(p);    	non-compiled	[CE]  cannot  find  symbol  parent	128	None	replace
299	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(context);  [CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(context);	  int    firstCount    =    NodeUtil.precedence(p);    	non-compiled	[CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;	128	None	replace
300	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(last);  [CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(last);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(last);	  int    firstCount    =    NodeUtil.precedence(p);    	non-compiled	[CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;	128	None	replace
301	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  not  a  statement	98	None	add
302	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :	  	non-compiled	[CE]  not  a  statement	98	None	add
303	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);	  	non-compiled	[CE]  not  a  statement	98	None	add
304	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  not  a  statement	98	None	add
305	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;	  	non-compiled	[CE]  not  a  statement	98	None	add
306	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type));  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type));	  	non-compiled	[CE]  not  a  statement	98	None	add
307	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  CONTEXT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  CONTEXT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  CONTEXT;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	106	None	replace
308	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  CONSTRUCTOR;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  CONSTRUCTOR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  CONSTRUCTOR;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	106	None	replace
309	[BUG]  [BUGGY]  Context  rhsContext  =  context.START_OF_EXPR  |  Context.OTHER;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.START_OF_EXPR  |  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.START_OF_EXPR  |  Context.OTHER;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	106	None	replace
310	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  &  Context.OTHER;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  &  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  &  Context.OTHER;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	106	None	replace
311	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  STATEMENT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  STATEMENT;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	106	None	replace
312	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT  :  context.STATEMENT;  [CE]  cannot  find  symbol  STATEMENT  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT  :  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  STATEMENT  :  context.STATEMENT;	  Context    rhsContext    =    context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	51	None	replace
313	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.STATEMENT  :  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =(context  ==  null)?  context.STATEMENT  :  context.STATEMENT;	  Context    rhsContext    =    context.STATEMENT;    	compilable	  [FE]  ComparisonFailure  	51	1	replace
314	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.STATEMENT  :  context.STATEMENT;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.STATEMENT  :  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.STATEMENT  :  context.STATEMENT;	  Context    rhsContext    =    context.STATEMENT;    	compilable	  [FE]  ComparisonFailure  	51	1	replace
315	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(context,  type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(context,  type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(context,  type);	  int    p    =    NodeUtil.precedence(type,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	150	None	replace
316	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(n,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(n,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(n,  context);	  int    p    =    NodeUtil.precedence(type,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	150	None	replace
317	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount,  context);	  int    p    =    NodeUtil.precedence(type,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	150	None	replace
318	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	183	5	replace
319	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	183	5	replace
320	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  false);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	183	5	replace
321	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  false);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  false);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	183	5	replace
322	[BUG]  [BUGGY]  Context  cc  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  context.OTHER;  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
323	[BUG]  [BUGGY]  Context  rhsContext  =  getContext();  this.cc.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContext();  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContext();  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
324	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
326	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  false);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  false);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
327	[BUG]  [BUGGY]  Context  rhsContext  =  getContext();  this.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContext();  this.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContext();  this.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
328	[BUG]  [BUGGY]  Context  rhsContext  =  this.getContext();  this.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  this.getContext();  this.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  this.getContext();  this.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
329	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	12	None	replace
330	[BUG]  [BUGGY]  Integer  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  childCount  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	12	None	replace
331	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type,  context);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	12	None	replace
332	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type,  Context.OTHER);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	12	None	replace
333	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  [CE]  cannot  find  symbol  [FE]                  IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
334	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    3);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
335	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type,  context);	          Preconditions.checkState(childCount    ==    3);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	86	None	replace
336	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                cc.addOp(       "?       ",        true);        cc.addOp(       "?       ",    true);    cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	17	5	add
337	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(       "?       ",    true);    cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	17	5	add
338	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( "?   ",  false);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                cc.addOp(       "?       ",        true);        cc.addOp(       "?       ",    true);    cc.addOp( "?   ",  false);  cc.addOp( "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	17	5	add
339	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( "?   ",  false);  cc.addOp( "?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( "?   ",  false);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(       "?       ",    true);    cc.addOp( "?   ",  false);  cc.addOp( "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	17	5	add
340	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( ",  true);  cc.addOp( "?   ",  true);  [CE]  unclosed  string  literal  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp( ",  true);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(       "?       ",    true);    cc.addOp( ",  true);  cc.addOp( "?   ",  true);	  	non-compiled	[CE]  unclosed  string  literal	17	None	add
341	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	139	None	add
342	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	139	None	add
343	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  context  =(context  ==  null)?  context.OTHER  :  context;  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  context  =(context  ==  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    Context  context  =(context  ==  null)?  context.OTHER  :  context;	  	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	139	None	add
344	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context  >=  null)?  context.OTHER  :  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context  >=  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    Context  rhsContext  =(context  >=  null)?  context.OTHER  :  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	139	None	add
345	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context);	  	non-compiled	[CE]  ';'  expected	139	None	add
346	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getLastChild());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getLastChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getLastChild());	  Context    rhsContext    =    new    Context(n.getLastChild());    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
347	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(last,  n.getLastChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(last,  n.getLastChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(last,  n.getLastChild());	  Context    rhsContext    =    new    Context(n.getLastChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	33	None	replace
348	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  1);	  Context    rhsContext    =    getContextForNoChild(context,    STATEMENT);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
349	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  EXPR_RESULT);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  EXPR_RESULT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  EXPR_RESULT);	  Context    rhsContext    =    getContextForNoChild(context,    STATEMENT);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	172	None	replace
350	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  2);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
351	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount,  1);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
352	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  3);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  3);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
353	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(context,  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(context,  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(context,  1);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
354	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.STATEMENT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER  |  Context.STATEMENT;	  Context    rhsContext    =    Context.OTHER    |    Context.STATEMENT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	173	None	replace
355	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.STATEMENT  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.STATEMENT  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.STATEMENT  +  1;	  Context    rhsContext    =    Context.OTHER    |    Context.STATEMENT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	173	None	replace
356	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.ONE;  [CE]  cannot  find  symbol  ONE  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.ONE;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  |  Context.ONE;	  Context    rhsContext    =    Context.OTHER    |    Context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  ONE	173	None	replace
357	[BUG]  [BUGGY]  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	176	None	replace
358	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	junit.framework.ComparisonFailure:  expected	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  not  a  statement	176	None	replace
359	[BUG]  [BUGGY]  cc.addOp( "?   ",  true);  addExpr(last,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  true);  addExpr(last,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  true);  addExpr(last,  p  +  1,  context);	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	176	None	replace
360	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                cc.addOp(       "?       ",        true);        cc.addOp(   ",?       ",    true);    cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	130	5	add
361	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(   ",?       ",    true);    cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	130	5	add
362	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( ",  true);  cc.addOp( ",?   ",  true);  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( ",  true);  cc.addOp( ",?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(   ",?       ",    true);    cc.addOp( ",  true);  cc.addOp( ",?   ",  true);	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
363	[BUG]  [BUGGY]  cc.addOp( ",  false);  [CE]  unclosed  string  literal  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ",  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ",  false);	  cc.addOp(   "?       ",    false);    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
364	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type,  context);	          Preconditions.checkState(childCount    ==    2);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	77	None	replace
365	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type,  Context.OTHER);	          Preconditions.checkState(childCount    ==    2);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	77	None	replace
366	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentStructure();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.getCurrentStructure();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getCurrentStructure();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentStructure();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
367	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.getCurrentStructure();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.getCurrentStructure();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.getCurrentStructure();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentStructure();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
368	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStructure();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStructure();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStructure();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentStructure();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
369	[BUG]  [BUGGY]  Context  context  =  context.getCurrentStructure();  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  context  =  context.getCurrentStructure();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  context  =  context.getCurrentStructure();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentStructure();    	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	9	None	replace
370	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    2);    Context    rhsContext    =    context;    	compilable	  [FE]  IllegalStateException  	6	5	replace
371	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;  [FE]  IllegalStateException  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    2);    Context    rhsContext    =    context;    	compilable	  [FE]  IllegalStateException  	6	5	replace
372	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_CONTEXT;  [CE]  cannot  find  symbol  START_OF_CONTEXT  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_CONTEXT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_CONTEXT;	  Context    rhsContext    =    Context.START_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  START_OF_CONTEXT	111	None	replace
373	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context.START_OF_EXPR;	  Context    rhsContext    =    Context.START_OF_EXPR;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  	111	3	replace
374	[BUG]  [BUGGY]  Context  rhsContext  =  context.START_OF_EXPR;  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.START_OF_EXPR;	  Context    rhsContext    =    Context.START_OF_EXPR;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  	111	3	replace
375	[BUG]  [BUGGY]  Context  rhsContext  =  CONtext.START_OF_EXPR;  [CE]  cannot  find  symbol  CONtext  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  CONtext.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  CONtext.START_OF_EXPR;	  Context    rhsContext    =    Context.START_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  CONtext	111	None	replace
376	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	57	5	replace
377	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	57	5	replace
378	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	57	5	replace
379	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	57	5	replace
380	[BUG]  [BUGGY]  Context  rhsContext  =  getContext();  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContext();  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContext();  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
381	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration(p);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoDeclaration(p);	  Context    rhsContext    =    getCurrentContextForNoDeclaration();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
382	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration(n);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoDeclaration(n);	  Context    rhsContext    =    getCurrentContextForNoDeclaration();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
383	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration(context);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoDeclaration(context);	  Context    rhsContext    =    getCurrentContextForNoDeclaration();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
384	[BUG]  [BUGGY]  boolean  p  =  NodeUtil.precedence(type));  addExpr(first,  p  +  1,  context);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  boolean  p  =  NodeUtil.precedence(type));  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  p  =  NodeUtil.precedence(type));  addExpr(first,  p  +  1,  context);	  boolean    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  ';'  expected	168	None	replace
385	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  STATEMENT.getJSDocInfo());  [CE]  cannot  find  symbol  STATEMENT  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  STATEMENT.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  STATEMENT.getJSDocInfo());	  Context    rhsContext    =    new    Context(n,    context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	44	None	replace
386	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  getJSDocInfo());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  getJSDocInfo());	  Context    rhsContext    =    new    Context(n,    context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
387	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getJSDocInfo(),  STATEMENT);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getJSDocInfo(),  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getJSDocInfo(),  STATEMENT);	  Context    rhsContext    =    new    Context(n,    context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
388	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getJSDocInfo(),  parent);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getJSDocInfo(),  parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getJSDocInfo(),  parent);	  Context    rhsContext    =    new    Context(n,    context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
389	[BUG]  [BUGGY]  addExpr(first,  p  +  1,  n);  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  p  +  1,  n);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  p  +  1,  n);	  addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	73	None	replace
390	[BUG]  [BUGGY]  conn.addOp( "?   ",  true);  Context  rhsContext  =  Context.OTHER;  [CE]  cannot  find  symbol  conn  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  conn.addOp( "?   ",  true);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	conn.addOp( "?   ",  true);  Context  rhsContext  =  Context.OTHER;	          cc.addOp(       "?       ",    true);    Context    rhsContext    =    Context.OTHER;    	non-compiled	[CE]  cannot  find  symbol  conn	21	None	replace
391	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  false);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	cc.addOp( "?   ",  false);  Context  rhsContext  =  Context.OTHER;	          cc.addOp(       "?       ",    true);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	21	5	replace
392	[BUG]  [BUGGY]  cc.addOp( "?   ",  false);  Context  rhsContext  =  Context.OTHER;  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  false);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  false);  Context  rhsContext  =  Context.OTHER;	          cc.addOp(       "?       ",    true);    Context    rhsContext    =    Context.OTHER;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	21	5	replace
393	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.END_OF_EXPR  +  1;  [CE]  cannot  find  symbol  END_OF_EXPR  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.END_OF_EXPR  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.END_OF_EXPR  +  1;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR    +    1;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPR	109	None	replace
394	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR,  p  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR,  p  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR,  p  +  1;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR    +    1;    	non-compiled	[CE]  ';'  expected	109	None	replace
395	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  Preconditions.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount,  Preconditions.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount,  Preconditions.OTHER);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
396	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.HOOK);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.HOOK);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Preconditions.HOOK);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
397	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Context.OTHER);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
398	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER,  childCount);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER,  childCount);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER,  childCount);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
399	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last,  type,  Preconditions.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(last,  type,  Preconditions.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last,  type,  Preconditions.OTHER);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
400	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance(context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextInstance(context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance(context);	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
401	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance(p);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextInstance(p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance(p);	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
402	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance(n);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextInstance(n);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance(n);	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
403	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance(p,  context);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextInstance(p,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance(p,  context);	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
404	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(n);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(n);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
405	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  first);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context,  first);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
406	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context,  STATEMENT);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	165	None	replace
407	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  p);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context,  p);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
408	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context);  [CE]  enum  types  may  not  be  instantiated  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context);	  Context    rhsContext    =    new    Context();    	non-compiled	[CE]  enum  types  may  not  be  instantiated	148	None	replace
409	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n);  [CE]  enum  types  may  not  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n);	  Context    rhsContext    =    new    Context();    	non-compiled	[CE]  enum  types  may  not  be  instantiated	148	None	replace
410	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context);  [CE]  enum  types  may  not  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context);	  Context    rhsContext    =    new    Context();    	non-compiled	[CE]  enum  types  may  not  be  instantiated	148	None	replace
411	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.START_OF_EXPR;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Context  rhsContext  =  Context.START_OF_EXPR;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
412	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.START_OF_EXPR;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.START_OF_EXPR;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
413	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.END_OF_EXPR;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.END_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Context  rhsContext  =  Context.END_OF_EXPR;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
414	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Integer  rhsContext  =  Context.START_OF_EXPR;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Integer  rhsContext  =  Context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Integer  rhsContext  =  Context.START_OF_EXPR;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
415	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.START_OF_EXPR;  addExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.START_OF_EXPR;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Context  rhsContext  =  Context.START_OF_EXPR;  addExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
416	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.START_OF_EXPR;  addExpr(first,  0,  rhsContext);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.START_OF_EXPR;  addExpr(first,  0,  rhsContext);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Context  rhsContext  =  Context.START_OF_EXPR;  addExpr(first,  0,  rhsContext);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
417	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)+    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	119	None	replace
418	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)/  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type)/  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)/  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)+    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	119	None	replace
419	[BUG]  [BUGGY]  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)+    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	119	None	replace
420	[BUG]  [BUGGY]  Integer  rhsContext  =  context.OTHER;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Integer    rhsContext    =    context.OTHER;    	non-compiled	[CE]  incompatible  types	58	None	replace
421	[BUG]  [BUGGY]  int  rhsContext  =  context.OTHER;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Integer    rhsContext    =    context.OTHER;    	non-compiled	[CE]  incompatible  types	58	None	replace
422	[BUG]  [BUGGY]  Integer  rhsContext  =  Context.OTHER;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  rhsContext  =  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  rhsContext  =  Context.OTHER;	  Context    rhsContext    =    context.OTHER;    Integer    rhsContext    =    context.OTHER;    	non-compiled	[CE]  incompatible  types	58	None	replace
423	[BUG]  [BUGGY]  Node  rhsContext  =  context.OTHER;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Integer    rhsContext    =    context.OTHER;    	non-compiled	[CE]  incompatible  types	58	None	replace
424	[BUG]  [BUGGY]  Context  rhsContext  =  currentContext.getCurrentContext();  [CE]  cannot  find  symbol  currentContext  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  currentContext.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  currentContext.getCurrentContext();	  Context    rhsContext    =    n.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  currentContext	69	None	replace
425	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextIn(),  context);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextIn(),  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextIn(),  context);	  Context    cc    =    getCurrentContextIn();    	non-compiled	[CE]  ';'  expected	125	None	replace
426	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextIn()  +  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextIn()  +  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextIn()  +  1;	  Context    cc    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
427	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextIn().cloneTree();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextIn().cloneTree();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextIn().cloneTree();	  Context    cc    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
428	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextIn(),  context;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextIn(),  context;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextIn(),  context;	  Context    cc    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
429	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]        IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	141	None	replace
430	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	141	None	replace
431	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  >>  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount  >>  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount  >>  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	141	None	replace
432	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(),  context.getCurrentContext();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(),  context.getCurrentContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(),  context.getCurrentContext();	  Context    cc    =    getCurrentContext().getCurrentContext();    	non-compiled	[CE]  ';'  expected	65	None	replace
433	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext(context);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext(context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext().getCurrentContext(context);	  Context    cc    =    getCurrentContext().getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
434	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context.checkState(p  ==  3);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context.checkState(p  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context.checkState(p  ==  3);	          Preconditions.checkState(childCount    ==    3);    Context.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
435	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    Context.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
436	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentState();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.getCurrentState();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getCurrentState();	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    3)    {    Context    rhsContext    =    context;    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
437	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentStatement();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.getCurrentStatement();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getCurrentStatement();	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    3)    {    Context    rhsContext    =    context;    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
438	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	181	5	add
439	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	181	5	add
440	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]      IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);	  	non-compiled	[CE]  cannot  find  symbol	181	None	add
441	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	181	None	add
442	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	181	5	add
443	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]          IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	181	5	add
444	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	181	None	add
445	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]              IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	181	None	add
446	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(n);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(n);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
447	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(n,  context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(n,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(n,  context);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
448	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(first);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(first);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
449	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(p);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(p);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
450	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextIn()  +  1;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextIn()  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextIn()  +  1;	  Context    rhsContext    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
451	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextIn(),  context);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextIn(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextIn(),  context);	  Context    rhsContext    =    getCurrentContextIn();    	non-compiled	[CE]  ';'  expected	166	None	replace
452	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextIn().cloneTree();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextIn().cloneTree();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextIn().cloneTree();	  Context    rhsContext    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
453	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getLastChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getLastChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getLastChild());	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	184	None	replace
454	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  p);	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	184	None	replace
455	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  childCount);  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  childCount);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  childCount);	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	184	None	replace
456	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  context);	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	184	None	replace
457	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
458	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	79	None	replace
459	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(p);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(p);	  Context    rhsContext    =    createContext();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
460	[BUG]  [BUGGY]  Context.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
461	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  Context.OTHER);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	121	None	replace
462	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(first);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(first);	  Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	103	None	replace
463	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type,  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type,  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type,  1);	  Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	103	None	replace
464	[BUG]  [BUGGY]  Context.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
465	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  rhsContext  [FE]      IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	76	None	replace
466	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  int  childCount  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    3);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	85	None	replace
467	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type,  context);	          Preconditions.checkState(childCount    ==    3);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	85	None	replace
468	[BUG]  [BUGGY]  Integer  rhsContext  =  context.STATEMENT;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  rhsContext  =  context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Integer    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	30	None	replace
469	[BUG]  [BUGGY]  Context.STATEMENT  =  Integer.valueOf(p);  [CE]  cannot  assign  a  value  to  final  variable  STATEMENT  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.STATEMENT  =  Integer.valueOf(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.STATEMENT  =  Integer.valueOf(p);	  Context    rhsContext    =    Context.STATEMENT;    Integer    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  STATEMENT	30	None	replace
470	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild(),  n);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild(),  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getFirstChild(),  n);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    context);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
471	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getLastChild(),  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getLastChild(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getLastChild(),  context);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	35	None	replace
472	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",  true);  }  [CE]  unclosed  string  literal  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",    true);    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
473	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ":  true);  }  [CE]  unclosed  string  literal  [FE]                  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ":  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ":  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",    true);    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
474	[BUG]  [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp( ":  true);  [CE]  unclosed  string  literal  [FE]                    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp( ":  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  false);  cc.addOp( ":  true);	          cc.addOp(       "?       ",    true);    cc.addOp(   ",    true);    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
475	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n,  context.getJSDocInfo());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n,  context.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n,  context.getJSDocInfo());	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
476	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  parent);  [CE]  cannot  find  symbol  parent  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  parent);	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  parent	45	None	replace
477	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n,  first.getJSDocInfo());  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n,  first.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n,  first.getJSDocInfo());	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	45	None	replace
478	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n,  parent.getJSDocInfo());  [CE]  cannot  find  symbol  parent  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n,  parent.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n,  parent.getJSDocInfo());	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  parent	45	None	replace
479	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  not  a  statement	101	None	add
480	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type),  false);	  	non-compiled	[CE]  not  a  statement	101	None	add
481	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :	  	non-compiled	[CE]  not  a  statement	101	None	add
482	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  not  a  statement	101	None	add
483	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  return;	  	non-compiled	[CE]  not  a  statement	101	None	add
484	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type));  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  <  var  foo=x[]?  {  a:1  }  :  1  >=  cc.addOp(NodeUtil.opToStrNoFail(type));	  	non-compiled	[CE]  not  a  statement	101	None	add
485	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)-    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	117	None	replace
486	[BUG]  [BUGGY]  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)-    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	117	None	replace
487	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
488	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
489	[BUG]  [BUGGY]  n.addOp( "?   ",  true);  n.addOp( ",?   ",  true);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  n.addOp( "?   ",  true);  n.addOp( ",?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	n.addOp( "?   ",  true);  n.addOp( ",?   ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
490	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }  [CE]  cannot  find  symbol  rhsContext  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(last,  1,  Context.OTHER);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
491	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  1,  Context.OTHER);  }  [CE]  cannot  find  symbol  rhsContext  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  1,  Context.OTHER);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  1,  Context.OTHER);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
492	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  first.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  first.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  first.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
493	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount  +  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount  +  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount  +  1);	  int    p    =    NodeUtil.precedence(childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	112	None	replace
494	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount  -  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(childCount  -  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount  -  1);	  int    p    =    NodeUtil.precedence(childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	112	None	replace
495	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext().getCurrentStatementContext();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentStatementContext().getCurrentStatementContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext().getCurrentStatementContext();	  Context    cc    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
496	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext(p);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentStatementContext(p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext(p);	  Context    cc    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
497	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext(n);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentStatementContext(n);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext(n);	  Context    cc    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
498	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    setExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
499	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    setExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
500	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext();  setExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext();  setExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext();  setExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    setExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
501	[BUG]  [BUGGY]  Context  rhsContext  =  getContext();  setExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContext();  setExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContext();  setExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    setExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
502	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    Integer    p    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	154	None	replace
503	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  p  +  1);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  p  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  p  +  1);	  Context    rhsContext    =    getContextForNoChild(context,    p);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
504	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(p,  context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(p,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(p,  context);	  Context    rhsContext    =    getContextForNoChild(context,    p);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
505	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  context,  p);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  context,  p);	  Context    rhsContext    =    getContextForNoChild(context,    p);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
506	[BUG]  [BUGGY]  Node  first  =  context.getFirstChild().getNext();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  context.getFirstChild().getNext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  context.getFirstChild().getNext();	  Node    first    =    n.getFirstChild().getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	133	None	replace
507	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().getNext()  +  1;  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getFirstChild().getNext()  +  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().getNext()  +  1;	  Node    first    =    n.getFirstChild().getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	133	None	replace
508	[BUG]  [BUGGY]  Node  first  =  n.getLastChild().getNext();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getLastChild().getNext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getLastChild().getNext();	  Node    first    =    n.getFirstChild().getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	133	None	replace
509	[BUG]  [BUGGY]  Node  first  =  node.getFirstChild().getNext();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  node.getFirstChild().getNext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  node.getFirstChild().getNext();	  Node    first    =    n.getFirstChild().getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	133	None	replace
510	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(type),  Context.OTHER);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(type),  Context.OTHER);	  int    firstCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  ';'  expected	127	None	replace
511	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(type,  false);  [CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(type,  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(type,  false);	  int    firstCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;	127	None	replace
512	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.first;  [CE]  cannot  find  symbol  first  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.first;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.first;	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol  first	138	None	replace
513	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.next;  [CE]  cannot  find  symbol  next  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.next;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.next;	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol  next	138	None	replace
514	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.null;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.null;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.null;	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  <identifier>  expected	138	None	replace
515	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.n;  [CE]  cannot  find  symbol  n  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.n;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.n;	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol  n	138	None	replace
516	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Context  rhsContext  =  context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Context  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Context  rhsContext  =  context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
517	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
518	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
519	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
520	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Context  rhsContext  =  context.STATEMENT;  addExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Context  rhsContext  =  context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Context  rhsContext  =  context.STATEMENT;  addExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
521	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Integer  rhsContext  =  context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Integer  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Integer  rhsContext  =  context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
522	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ".?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                cc.addOp(       "?       ",        true);        cc.addOp(   ".?       ",    true);    cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	19	5	add
523	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ".?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ".?     ",  true);  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(   ".?       ",    true);    cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	19	5	add
524	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(last);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(last);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(last);	  Context    rhsContext    =    createContext(n);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
525	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(first);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(first);	  Context    rhsContext    =    createContext(n);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
526	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.STATEMENT  +  1;	  Context    rhsContext    =    Context.STATEMENT    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	49	None	replace
527	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT  +  1;  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  STATEMENT  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT  +  1;	  Context    rhsContext    =    Context.STATEMENT    +    1;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	49	None	replace
528	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(last.getFirstChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(last.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(last.getFirstChild());	  Context    rhsContext    =    new    Context(first.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	36	None	replace
529	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  childCount,  n.getFirstChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  childCount,  n.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  childCount,  n.getFirstChild());	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	184	None	replace
530	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  node.getFirstChild());  [CE]  cannot  find  symbol  node  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  node.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  node.getFirstChild());	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  node	184	None	replace
531	[BUG]  [BUGGY]  cc.addOp('?',  true);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp('?',  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp('?',  true);	          cc.addOp(       "?       ",    true);    cc.addOp('?',    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	22	None	replace
532	[BUG]  [BUGGY]  cc.addOp(first,  true);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp(first,  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp(first,  true);	          cc.addOp(       "?       ",    true);    cc.addOp('?',    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	22	None	replace
533	[BUG]  [BUGGY]  int  rhsContext  =  Context.OTHER;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  Context.OTHER;	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	74	None	replace
534	[BUG]  [BUGGY]  boolean  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  boolean  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	74	None	replace
535	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstanceUTC();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextInstanceUTC();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstanceUTC();	  Context    rhsContext    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
536	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
537	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  ComparisonFailure  	82	1	add
538	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  IllegalStateException  	143	5	replace
539	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  context.OTHER;  [FE]  IllegalStateException  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  context.OTHER;	  Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  IllegalStateException  	143	5	replace
540	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  setExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  setExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator(context);  setExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    setExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
541	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(type,  Context.OTHER);	  int    firstCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;	127	None	replace
542	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(n  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(n  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(n  +  1);	  Context    rhsContext    =    getCurrentContext(n);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	159	None	replace
543	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(context,  n);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(context,  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(context,  n);	  Context    rhsContext    =    getCurrentContext(n);    	non-compiled	[CE]  cannot  find  symbol	159	None	replace
544	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(first);  [CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(first);	  int    firstCount    =    NodeUtil.precedence(p);    	non-compiled	[CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;	128	None	replace
545	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	181	5	add
546	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	181	5	add
547	[BUG]  [BUGGY]  int  firstContext  =  Context.STATEMENT;  Integer  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstContext  =  Context.STATEMENT;  Integer  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstContext  =  Context.STATEMENT;  Integer  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Integer    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	30	None	replace
548	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Integer  rhsContext  =  Context.STATEMENT;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Integer  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Integer  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Integer    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	30	None	replace
549	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Node  rhsContext  =  context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.STATEMENT;  Node  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.STATEMENT;    Node  rhsContext  =  context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	50	None	add
550	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last,  false);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(last,  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last,  false);	  int    p    =    NodeUtil.precedence(type,    false);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	116	None	replace
551	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  IN_FOR_INIT_CLAUSE;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  IN_FOR_INIT_CLAUSE;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  IN_FOR_INIT_CLAUSE;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	106	None	replace
552	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  1;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER  |  1;	  Context    rhsContext    =    Context.START_OF_EXPR    |    Context.OTHER;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	106	None	replace
553	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForOperator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForOperator();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForOperator();	  Context    rhsContext    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
554	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  lhsContext  =(context  ==  null)?  context.OTHER  :  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  Context  lhsContext  =(context  ==  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    Context  lhsContext  =(context  ==  null)?  context.OTHER  :  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	139	None	add
555	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNonEmptyContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNonEmptyContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNonEmptyContext();	  Context    cc    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
556	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForOperator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForOperator();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForOperator();	  Context    cc    =    getCurrentContextForNoInOperator();    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
557	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]        IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Integer    p    =    NodeUtil.precedence(childCount    ==    2);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	141	None	replace
558	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  IllegalStateException  	27	5	replace
559	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.STATEMENT;  [FE]  IllegalStateException  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  Context  rhsContext  =  Context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount    ==    3);    Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  IllegalStateException  	27	5	replace
560	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_CONCLUSION;  [CE]  cannot  find  symbol  START_OF_CONCLUSION  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_CONCLUSION;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_CONCLUSION;	  Context    rhsContext    =    Context.START_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  START_OF_CONCLUSION	111	None	replace
561	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext().getRootContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentStatementContext().getRootContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext().getRootContext();	  Context    cc    =    getCurrentContext().getRootContext();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
562	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;	  Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    	compilable	  [FE]  ComparisonFailure  	140	1	replace
563	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  context.OTHER  :  context;	  Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    	compilable	  [FE]  ComparisonFailure  	140	1	replace
564	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  node;  [CE]  cannot  find  symbol  node  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  node;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.OTHER  :  node;	  Context    rhsContext    =(context    ==    null)?    context.OTHER    :    context;    	non-compiled	[CE]  cannot  find  symbol  node	140	None	replace
565	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)+  1;  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type)+  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)+  1;	  int    p    =    NodeUtil.precedence(type)+    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	119	None	replace
566	[BUG]  [BUGGY]  addExpr(first,  NodeUtil.precedence(type)+  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  NodeUtil.precedence(type)+  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  NodeUtil.precedence(type)+  1,  context);	  int    p    =    NodeUtil.precedence(type)+    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	119	None	replace
567	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
568	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
569	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
570	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]      IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
571	[BUG]  [BUGGY]  Context  rhsContext  =  createCurrentContextIn();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createCurrentContextIn();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createCurrentContextIn();	  Context    rhsContext    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
572	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type,  false);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(type,  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type,  false);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
573	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type,  context);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(type,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type,  context);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
574	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  cc.addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  cc.addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  cc.addExpr(first,  p  +  1,  context);	  Preconditions.checkState(childCount    ==    2);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
575	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  0);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  0);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  0);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
576	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last,  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(last,  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last,  1);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
577	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  childCount,  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  childCount,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  childCount,  context);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	35	None	replace
578	[BUG]  [BUGGY]  Context  cc  =  context.getCurrentScope();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  context.getCurrentScope();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  context.getCurrentScope();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
579	[BUG]  [BUGGY]  Node  first  =  last.getLastChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  last.getLastChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  last.getLastChild();	  Node    first    =    n.getLastChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	90	None	replace
580	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  +  1L;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  +  1L;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  +  1L;	  Context    rhsContext    =    Context.STATEMENT    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	49	None	replace
581	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentNodeForNoDeclaration();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentNodeForNoDeclaration();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentNodeForNoDeclaration();	  Context    rhsContext    =    getCurrentContextForNoDeclaration();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
582	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNodeDeclaration();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNodeDeclaration();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNodeDeclaration();	  Context    rhsContext    =    getCurrentContextForNoDeclaration();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
583	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForReference();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForReference();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForReference();	  Context    rhsContext    =    getCurrentContextForNoDeclaration();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
584	[BUG]  [BUGGY]  addExpr(first,  p  +  1,  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  p  +  1,  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  p  +  1,  Context.OTHER);	  addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	73	None	replace
585	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.getFirstChild();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.getFirstChild();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.getFirstChild();	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
586	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  1  :  context.OTHER;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  1  :  context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  1  :  context.OTHER;	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  incompatible  types	138	None	replace
587	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  +  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]        IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  +  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  +  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	153	None	replace
588	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  {  1);  [CE]  ')'  expected  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  {  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  {  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(childCount    ==    1);    	non-compiled	[CE]  ')'  expected	153	None	replace
589	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER  |  1);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER  |  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER  |  1);	  int    p    =    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  ';'  expected	169	None	replace
590	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  cc.addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context.checkState(childCount  ==  3);  cc.addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  3);  cc.addExpr(first,  p  +  1,  context);	  Context.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
591	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForElement();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForElement();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForElement();	  Context    rhsContext    =    getCurrentContextForNode();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
592	[BUG]  [BUGGY]  addExpr(first,  NodeUtil.precedence(type)-  1);  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  NodeUtil.precedence(type)-  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  NodeUtil.precedence(type)-  1);	  int    p    =    NodeUtil.precedence(type)-    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	117	None	replace
593	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( ",  true);  cc.addOp( "?   ",  true);  [CE]  unclosed  string  literal  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ",?     ",  true);  cc.addOp( ",  true);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(   ",?       ",    true);    cc.addOp( ",  true);  cc.addOp( "?   ",  true);	  	non-compiled	[CE]  unclosed  string  literal	130	None	add
594	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last,  Preconditions.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(last,  Preconditions.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last,  Preconditions.OTHER);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
595	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(first,  Preconditions.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(first,  Preconditions.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(first,  Preconditions.OTHER);	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
596	[BUG]  [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp( ",?   ",  true);  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp( ",?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  false);  cc.addOp( ",?   ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
597	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
598	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(last,  1);  }  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(last,  1);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(last,  1);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	131	None	replace
599	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentNode();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.getCurrentNode();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getCurrentNode();	  Context    rhsContext    =    context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
600	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p  +  1,  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  p  +  1,  context);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    p);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	34	None	replace
601	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext().getCurrentContext();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentStatementContext().getCurrentContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext().getCurrentContext();	  Context    cc    =    getCurrentContext().getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
602	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	98	None	add
603	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	98	None	add
604	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:	  	non-compiled	[CE]  not  a  statement	98	None	add
605	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	98	5	add
606	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	98	5	add
607	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expected:  {  a:1  }	  	non-compiled	[CE]  not  a  statement	98	None	add
608	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	75	5	add
609	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	75	5	add
610	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext(context);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentStatementContext(context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext(context);	  Context    cc    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
611	[BUG]  [BUGGY]  Context  cc  =  createCurrentStatementContext();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  createCurrentStatementContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  createCurrentStatementContext();	  Context    cc    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
612	[BUG]  [BUGGY]  Node  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	  Integer    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	118	None	replace
613	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  parent);  [CE]  cannot  find  symbol  parent  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  parent);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol  parent	62	None	replace
614	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  first);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  first);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  first);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
615	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  IllegalStateException  	29	5	replace
616	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [FE]  IllegalStateException  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    Context.STATEMENT;    Context    rhsContext    =    Context.STATEMENT;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  IllegalStateException  	29	5	replace
617	[BUG]  [BUGGY]  Context  rhsContext  =(CONtext  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  CONtext  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(CONtext  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(CONtext  ==  null)?  STATEMENT.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  CONtext	72	None	replace
618	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  EXPR_STATEMENT  :  context;  [CE]  cannot  find  symbol  EXPR_STATEMENT  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  EXPR_STATEMENT  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  EXPR_STATEMENT  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  EXPR_STATEMENT	88	None	replace
619	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  JSError.STATEMENT  :  context;  [CE]  cannot  find  symbol  STATEMENT  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  JSError.STATEMENT  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  JSError.STATEMENT  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	88	None	replace
620	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  |  NodeUtil.opToStrNoFail(p);  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  |  NodeUtil.opToStrNoFail(p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR  |  NodeUtil.opToStrNoFail(p);	  Context    rhsContext    =    context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	107	None	replace
621	[BUG]  [BUGGY]  Context  rhsContext  =  Context.REGEXP  |  Context.OTHER;  [CE]  cannot  find  symbol  REGEXP  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.REGEXP  |  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.REGEXP  |  Context.OTHER;	  Context    rhsContext    =    Context.REGEXP;    	non-compiled	[CE]  cannot  find  symbol  REGEXP	48	None	replace
622	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	183	5	replace
623	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	183	5	replace
624	[BUG]  [BUGGY]  Context  rhsContext  =  this.cc.getContext();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  this.cc.getContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  this.cc.getContext();	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
625	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContextForNode();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContextForNode();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContextForNode();	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
626	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR  +  1  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR  +  1  +  1;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR  +  1  +  1;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	109	None	replace
627	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  parent);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  parent);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  parent);	  int    p    =    NodeUtil.precedence(type,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	150	None	replace
628	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER  |  1;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER  |  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER  |  1;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER;    	non-compiled	[CE]  ';'  expected	170	None	replace
629	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context,  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [CE]  :  expected  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context,  STATEMENT.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context,  STATEMENT.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  :  expected	70	None	replace
630	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  getCurrentContext();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
631	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  Integer  p  =  NodeUtil.precedence(type);	          Preconditions.checkState(childCount    ==    3);    Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	86	None	replace
632	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	155	None	replace
633	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  n);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(context,  n);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
634	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  p);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(context,  p);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
635	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  1);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(context,  1);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
636	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  childCount);  [CE]  enum  types  may  not  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  childCount);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  childCount);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	43	None	replace
637	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Node  rhsContext  =  Context.START_OF_EXPR;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Node  rhsContext  =  Context.START_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Node  rhsContext  =  Context.START_OF_EXPR;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
638	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.EXPR_RESULT;  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.EXPR_RESULT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.EXPR_RESULT;	  Context    rhsContext    =    Context.OTHER    |    Context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	173	None	replace
639	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  getFirstChild());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  getFirstChild());	  Context    rhsContext    =    new    Context(context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
640	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  STATEMENT.getFirstChild());  [CE]  cannot  find  symbol  STATEMENT  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  STATEMENT.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  STATEMENT.getFirstChild());	  Context    rhsContext    =    new    Context(context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	32	None	replace
641	[BUG]  [BUGGY]  cc.addOp( ": ".equals(first.getString()));  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ": ".equals(first.getString()));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ": ".equals(first.getString()));	  cc.addOp(   ":   ");    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	177	None	replace
642	[BUG]  [BUGGY]  cc.addOp( ":   ",  context);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ",  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ",  context);	  cc.addOp(   ":   ");    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	177	None	replace
643	[BUG]  [BUGGY]  cc.addOp( ":   ",  childCount);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ",  childCount);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ",  childCount);	  cc.addOp(   ":   ");    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	177	None	replace
644	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  false);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context,  false);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
645	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  null);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  null);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context,  null);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
646	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  parent);  [CE]  cannot  find  symbol  parent  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  parent);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol  parent	163	None	replace
647	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context,  false);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context,  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context,  false);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
648	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context,  parent);  [CE]  cannot  find  symbol  parent  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context,  parent);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context,  parent);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol  parent	163	None	replace
649	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context,  1);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context,  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context,  1);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
650	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  getFirstChild());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  getFirstChild());	  Context    rhsContext    =    new    Context(n,    context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
651	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getLastChild());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getLastChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getLastChild());	  Context    rhsContext    =    new    Context(n,    context.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	129	None	replace
652	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance(parent);  [CE]  cannot  find  symbol  parent  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextInstance(parent);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance(parent);	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol  parent	68	None	replace
653	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  junit.framework.ComparisonFailure:  expected;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	junit.framework.ComparisonFailure:  expected;	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    	non-compiled	[CE]  not  a  statement	102	None	replace
654	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p)&&  NodeUtil.opToStrNoFail(type));  [CE]  bad  operand  types  for  binary  operator  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p)&&  NodeUtil.opToStrNoFail(type));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p)&&  NodeUtil.opToStrNoFail(type));	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	3	None	replace
655	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p)&&  NodeUtil.opToStrNoFail(type),  false);  [CE]  bad  operand  types  for  binary  operator  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p)&&  NodeUtil.opToStrNoFail(type),  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p)&&  NodeUtil.opToStrNoFail(type),  false);	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  	3	None	replace
656	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  n  +  1);	  Context    rhsContext    =    getContextForNoChild(context,    n);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	136	None	replace
657	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n,  context);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  n,  context);	  Context    rhsContext    =    getContextForNoChild(context,    n);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
658	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().getLastChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getFirstChild().getLastChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().getLastChild();	  Node    first    =    n.getFirstChild().getNext();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	133	None	replace
659	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  Context  rhsContext  =  context;  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0)  {  Context  rhsContext  =  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0)  {  Context  rhsContext  =  context;	  Context    rhsContext    =    context;    Preconditions.checkState(childCount    ==    3)    {    Context    rhsContext    =    context;    	non-compiled	[CE]  ';'  expected	156	None	replace
660	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  context);	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	45	None	replace
661	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  node.getJSDocInfo());  [CE]  cannot  find  symbol  node  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  node.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  node.getJSDocInfo());	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  node	45	None	replace
662	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  parent.getJSDocInfo());  [CE]  cannot  find  symbol  parent  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  parent.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  parent.getJSDocInfo());	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  parent	45	None	replace
663	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    Context.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
664	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  first);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  first);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  first);	  int    p    =    NodeUtil.precedence(first);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	152	None	replace
665	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  this.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  this.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator(context);  this.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
666	[BUG]  [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp( ".?   ",  true);  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( "?   ",  false);  cc.addOp( ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  false);  cc.addOp( ".?   ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	20	None	replace
667	[BUG]  [BUGGY]  n.addOp( "?   ",  false);  n.addOp( ".?   ",  true);  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  n.addOp( "?   ",  false);  n.addOp( ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	n.addOp( "?   ",  false);  n.addOp( ".?   ",  true);	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
668	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	101	None	add
669	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	101	None	add
670	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:	  	non-compiled	[CE]  not  a  statement	101	None	add
671	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  {  a:1  }	  	non-compiled	[CE]  not  a  statement	101	None	add
672	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    Context  rhsContext  =  Context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	101	None	add
673	[BUG]  [BUGGY]  Context  first  =  context.getCurrentStructure();  Context  rhsContext  =  context.getCurrentStructure();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  first  =  context.getCurrentStructure();  Context  rhsContext  =  context.getCurrentStructure();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  first  =  context.getCurrentStructure();  Context  rhsContext  =  context.getCurrentStructure();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentStructure();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	9	None	replace
674	[BUG]  [BUGGY]  Preconditions.checkState(childCount!=  0);  [CE]  cannot  find  symbol  rhsContext  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount!=  0);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount!=  0);	          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	83	None	replace
675	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  cc.addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  cc.addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  cc.addExpr(first,  p  +  1,  context);	  Preconditions.checkState(childCount    ==    1);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
676	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator();  [CE]  method  getContextForNoInOperator  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator();	  Context    rhsContext    =    getContext();    	non-compiled	[CE]  method  getContextForNoInOperator  in  class  CodeGenerator  cannot  be  applied  to  given  types;	89	None	replace
677	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  getCurrentContext();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  getCurrentContext();	  Context    rhsContext    =(context!=    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
678	[BUG]  [BUGGY]  Context  context  =(context!=  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [CE]  variable  context  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  context  =(context!=  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  context  =(context!=  null)?  context.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =(context!=    null)?    context.getCurrentContext()    :    context.getCurrentContext();    	non-compiled	[CE]  variable  context  is  already  defined  in  method  add(Node,Context)	157	None	replace
679	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  null);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  null);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context,  null);	  Context    cc    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
680	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  0);  Context.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  Context.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
681	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]              IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
682	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(context,  childCount);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext(context,  childCount);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(context,  childCount);	  Context    cc    =    getCurrentContext(context);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
683	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(first,  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(first,  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(first,  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	18	None	replace
684	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(last,  1);  }  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(last,  1);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(last,  1);  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	18	None	replace
685	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoDeclaration(context);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoDeclaration(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoDeclaration(context);	  Context    rhsContext    =    STATEMENT;    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
686	[BUG]  [BUGGY]  add(first,  NodeUtil.precedence(type),  Context.OTHER);  [CE]  no  suitable  method  found  for  add(Node,int,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  add(first,  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	add(first,  NodeUtil.precedence(type),  Context.OTHER);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  no  suitable  method  found  for  add(Node,int,Context)	135	None	replace
687	[BUG]  [BUGGY]  addExpr(childCount,  NodeUtil.precedence(type),  Context.OTHER);  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(childCount,  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(childCount,  NodeUtil.precedence(type),  Context.OTHER);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	135	None	replace
688	[BUG]  [BUGGY]  boolean  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  boolean  p  =  NodeUtil.precedence(type);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  p  =  NodeUtil.precedence(type);	  boolean    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	168	None	replace
689	[BUG]  [BUGGY]  boolean  p  =  NodeUtil.precedence(type));  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  boolean  p  =  NodeUtil.precedence(type));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  p  =  NodeUtil.precedence(type));	  boolean    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  ';'  expected	168	None	replace
690	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(context,  context);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(context,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(context,  context);	  Context    rhsContext    =    createContext(context);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
691	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(first,  1,  context);  }  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(first,  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(first,  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp('?       ",    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	132	None	replace
692	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	94	None	add
693	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	94	None	add
694	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:	  	non-compiled	[CE]  not  a  statement	94	None	add
695	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  {  a:1  }	  	non-compiled	[CE]  not  a  statement	94	None	add
696	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context  rhsContext  =  Context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	94	None	add
697	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	175	None	add
698	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:	  	non-compiled	[CE]  not  a  statement	175	None	add
699	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	175	None	add
700	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  {  a:1  }	  	non-compiled	[CE]  not  a  statement	175	None	add
701	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  :  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expected:  {  a:1  }  :  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expected:  {  a:1  }  :	  	non-compiled	[CE]  not  a  statement	175	None	add
702	[BUG]  [BUGGY]  int  pCount  =  NodeUtil.precedence(type);  [CE]  cannot  find  symbol  rhsContext  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  pCount  =  NodeUtil.precedence(type);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  pCount  =  NodeUtil.precedence(type);	  int    firstCount    =    NodeUtil.precedence(p);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	128	None	replace
703	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  NodeUtil.opToStrNoFail(p));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context,  NodeUtil.opToStrNoFail(p));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context,  NodeUtil.opToStrNoFail(p));	  Context    cc    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
704	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  getJSDocInfo());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  getJSDocInfo());	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    parent);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
705	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getJSDocInfo(),  p);	  Context    rhsContext    =    new    Context(context,    n.getJSDocInfo());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	45	None	replace
706	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  this.context.getJSDocInfo());  [CE]  cannot  find  symbol  context  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n,  this.context.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  this.context.getJSDocInfo());	  Context    rhsContext    =    new    Context(n,    context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  context	44	None	replace
707	[BUG]  [BUGGY]  boolean  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  boolean  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	  int    childCount    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	122	None	replace
708	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n.getFirstChild());	  Context    rhsContext    =    createContext(n);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
709	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.STATEMENT);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.STATEMENT);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Preconditions.STATEMENT);	  int    p    =    NodeUtil.precedence(type,    childCount);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	113	None	replace
710	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =(context  ==  null)?  context  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	compilable	  [FE]  ComparisonFailure  	88	1	replace
711	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context  :  context;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  context  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	compilable	  [FE]  ComparisonFailure  	88	1	replace
712	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  IN_FOR_INIT_CLAUSE  :  context;  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  IN_FOR_INIT_CLAUSE  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  IN_FOR_INIT_CLAUSE  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	88	None	replace
713	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  JSError.IN_FOR_INIT_CLAUSE  :  context;  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  JSError.IN_FOR_INIT_CLAUSE  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  JSError.IN_FOR_INIT_CLAUSE  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	88	None	replace
714	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  CONSTRUCTOR  :  context;  [CE]  cannot  find  symbol  CONSTRUCTOR  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  CONSTRUCTOR  :  context;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  CONSTRUCTOR  :  context;	  Context    rhsContext    =(context    ==    null)?    STATEMENT    :    context;    	non-compiled	[CE]  cannot  find  symbol  CONSTRUCTOR	88	None	replace
715	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Integer    p    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	16	None	replace
716	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  IN_FOR_INIT_CLAUSE.getRootContext());  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  IN_FOR_INIT_CLAUSE.getRootContext());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  IN_FOR_INIT_CLAUSE.getRootContext());	  Context    rhsContext    =    new    Context(context.getRootContext());    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	180	None	replace
717	[BUG]  [BUGGY]  Context  rhsContext  =  this.context.getCurrentContext();  [CE]  cannot  find  symbol  context  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  this.context.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  this.context.getCurrentContext();	  Context    rhsContext    =    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  context	71	None	replace
718	[BUG]  [BUGGY]  this.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  this.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	this.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
719	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type),  Context.OTHER);  [CE]  ';'  expected  [FE]          IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type),  Context.OTHER);	          Preconditions.checkState(childCount    ==    2);    int    childCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  ';'  expected	77	None	replace
720	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().parent().cloneTree();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Node  first  =  n.getFirstChild().parent().cloneTree();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().parent().cloneTree();	  Node    first    =    n.getFirstChild().cloneTree();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	134	None	replace
721	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	98	5	add
722	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	98	5	add
723	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expecting  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  junit.framework.ComparisonFailure:  expecting  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    junit.framework.ComparisonFailure:  expecting	  	non-compiled	[CE]  not  a  statement	98	None	add
724	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	98	5	add
725	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	98	5	add
726	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  getContextForNoInOperator(context.OTHER);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  ComparisonFailure  	56	1	replace
727	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context.OTHER);  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator(context.OTHER);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  ComparisonFailure  	56	1	replace
728	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expecting  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expecting  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expecting	  	non-compiled	[CE]  not  a  statement	101	None	add
729	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	101	5	add
730	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	101	5	add
731	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expect  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  junit.framework.ComparisonFailure:  expect  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    junit.framework.ComparisonFailure:  expect	  	non-compiled	[CE]  not  a  statement	101	None	add
732	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Context  cc  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  Context  cc  =  getCurrentContext();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(last,    p    +    1,    context);    Context  cc  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	101	None	add
733	[BUG]  [BUGGY]  char  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  char  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	char  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	74	None	replace
734	[BUG]  [BUGGY]  int  rhsContext  =  first.getFirstChild();  addExpr(first,  p  +  1,  context);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  first.getFirstChild();  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  first.getFirstChild();  addExpr(first,  p  +  1,  context);	  int    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	74	None	replace
735	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  context,  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  context,  p);	  Context    rhsContext    =    new    Context(n.getJSDocInfo(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	43	None	replace
736	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  IllegalStateException  	57	5	replace
737	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [FE]  IllegalStateException  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  IllegalStateException  	57	5	replace
738	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  getContextForNoInOperator(context);  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	57	5	replace
739	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context);  addExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator(context);  addExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    addExpr(first,    p    +    1,    context);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	57	5	replace
740	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context,  IN_FOR_INIT_CLAUSE);  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context,  IN_FOR_INIT_CLAUSE);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context,  IN_FOR_INIT_CLAUSE);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	163	None	replace
741	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context,  STATEMENT);	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	163	None	replace
742	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context.getJSDocInfo());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(n,  context.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context.getJSDocInfo());	  Context    rhsContext    =    createContext(n,    context);    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
743	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextInstance(context,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstance(context,  STATEMENT);	  Context    rhsContext    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	54	None	replace
744	[BUG]  [BUGGY]  Context  rhsContext  =  Context.BEGIN_OF_EXPR;  [CE]  cannot  find  symbol  BEGIN_OF_EXPR  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.BEGIN_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.BEGIN_OF_EXPR;	  Context    rhsContext    =    Context.REGEXP;    	non-compiled	[CE]  cannot  find  symbol  BEGIN_OF_EXPR	48	None	replace
745	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	75	5	add
746	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        2);        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	75	5	add
747	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  IllegalStateException  	82	5	add
748	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);  [FE]  IllegalStateException  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  IllegalStateException  	82	5	add
749	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextIn().getContextForNoChild(context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextIn().getContextForNoChild(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextIn().getContextForNoChild(context);	  Context    rhsContext    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
750	[BUG]  [BUGGY]  Context  rhsContext  =  findCurrentContextIn();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  findCurrentContextIn();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  findCurrentContextIn();	  Context    rhsContext    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
751	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNonChild(context,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(context,  STATEMENT);	  Context    rhsContext    =    getContextForNonChild(context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	63	None	replace
752	[BUG]  [BUGGY]  if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	20	None	replace
753	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	20	None	replace
754	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  junit.framework.ComparisonFailure:  expected	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  not  a  statement	20	None	replace
755	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(last,  1);  }  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(last,  1);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ".?   ",  true);  }  else  {  addExpr(last,  1);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ".?       ",    true);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	20	None	replace
756	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER)+  1;  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER)+  1;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER)+  1;	  int    p    =    NodeUtil.precedence(type,    Preconditions.OTHER);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	171	None	replace
757	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext();  this.cc.addOp( "?   ",  true);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext();  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext();  this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
758	[BUG]  [BUGGY]  this.cc.addOp( "?   ",  true);  [CE]  cannot  find  symbol  rhsContext  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  this.cc.addOp( "?   ",  true);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	this.cc.addOp( "?   ",  true);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	183	None	replace
759	[BUG]  [BUGGY]  Context  rhsContext  =  this.cc.getCurrentNode();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  this.cc.getCurrentNode();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  this.cc.getCurrentNode();	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    this.cc.addOp(   "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
760	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContext(context,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(context,  STATEMENT);	  Context    rhsContext    =    getCurrentContext(context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	52	None	replace
761	[BUG]  [BUGGY]  Preconditions.checkState(p  ==  3);  Context.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(p  ==  3);  Context.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(p  ==  3);  Context.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    Context.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
762	[BUG]  [BUGGY]  Context  rhsContext  =  createContextWithDefault(context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContextWithDefault(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContextWithDefault(context);	  Context    rhsContext    =    createContext();    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
763	[BUG]  [BUGGY]  int  p  =  NodeUtil.opToStrNoFail(type),  Context.OTHER;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.opToStrNoFail(type),  Context.OTHER;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.opToStrNoFail(type),  Context.OTHER;	  int    p    =    NodeUtil.precedence(type),    Context.OTHER;    	non-compiled	[CE]  ';'  expected	170	None	replace
764	[BUG]  [BUGGY]  Preconditions.checkState(p  ==  4);  [CE]  cannot  find  symbol  rhsContext  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(p  ==  4);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(p  ==  4);	  Preconditions.checkState(childCount    ==    4);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	25	None	replace
765	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  createContext(context,  STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(context,  STATEMENT);	  Context    rhsContext    =    createContext(context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	149	None	replace
766	[BUG]  [BUGGY]  Context  rhsContext  =  context.createChildObjectContext();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.createChildObjectContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.createChildObjectContext();	  Context    rhsContext    =    context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
767	[BUG]  [BUGGY]  Context  rhsContext  =  context.createChildObjectContext(n);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  context.createChildObjectContext(n);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.createChildObjectContext(n);	  Context    rhsContext    =    context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
768	[BUG]  [BUGGY]  Context  rhsContext  =  currentScope.getCurrentScope();  [CE]  cannot  find  symbol  currentScope  [FE]        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  currentScope.getCurrentScope();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  currentScope.getCurrentScope();	  Context    rhsContext    =    context;    Context    rhsContext    =    context.getCurrentScope();    	non-compiled	[CE]  cannot  find  symbol  currentScope	178	None	replace
769	[BUG]  [BUGGY]  if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
770	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	131	None	replace
771	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context,  STATEMENT.getCurrentContext();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context,  STATEMENT.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  STATEMENT.getCurrentContext()  :  context,  STATEMENT.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  ';'  expected	72	None	replace
772	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();	  Context    rhsContext    =(context    ==    null)?    context.getCurrentContext()    :    STATEMENT.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
773	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  IN_FOR_INIT_CLAUSE);  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  IN_FOR_INIT_CLAUSE);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  IN_FOR_INIT_CLAUSE);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	62	None	replace
774	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  EXPR_RESULT);  [CE]  cannot  find  symbol  EXPR_RESULT  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  EXPR_RESULT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  EXPR_RESULT);	  Context    rhsContext    =    getContextForNoChild(n,    context);    	non-compiled	[CE]  cannot  find  symbol  EXPR_RESULT	62	None	replace
775	[BUG]  [BUGGY]  Preconditions.checkState(p  ==  1);  Context.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(p  ==  1);  Context.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(p  ==  1);  Context.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount    ==    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
776	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n.getFirstChild());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(n.getFirstChild());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n.getFirstChild());	  Context    rhsContext    =    getContextForNoChild(n);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
777	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(first,  p  +  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp('?       ",    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	132	None	replace
778	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(last,  1);  }  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(last,  1);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp('?',  true);  }  else  {  addExpr(last,  1);  }	          cc.addOp(       "?       ",    true);    cc.addOp('?       ",    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	132	None	replace
779	[BUG]  [BUGGY]  Context  cc  =  createCurrentContextIn();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  createCurrentContextIn();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  createCurrentContextIn();	  Context    cc    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
780	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextIn()  ||  context!=  null;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextIn()  ||  context!=  null;  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextIn()  ||  context!=  null;	  Context    cc    =    getCurrentContextIn();    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
781	[BUG]  [BUGGY]  Preconditions.checkState(p  ==  2);  Context.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]            IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(p  ==  2);  Context.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(p  ==  2);  Context.checkState(childCount  ==  2);	          Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount    ==    2);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
782	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ".?     ",  true);  cc.addOp( ".?   ",  true);  cc.addOp(   ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                cc.addOp(       "?       ",        true);        cc.addOp(   ".?       ",    true);    cc.addOp( ".?   ",  true);  cc.addOp(   ".?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	19	5	add
783	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ".?     ",  true);  cc.addOp( ".?   ",  true);  cc.addOp(   ".?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(   ".?     ",  true);  cc.addOp( ".?   ",  true);  cc.addOp(   ".?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(   ".?       ",    true);    cc.addOp( ".?   ",  true);  cc.addOp(   ".?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	19	5	add
784	[BUG]  [BUGGY]  Integer  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);	          Preconditions.checkState(childCount    ==    3);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	155	None	replace
785	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.getRootContext();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.getRootContext();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.getRootContext();	  Context    rhsContext    =(context    ==    null)?    1    :    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
786	[BUG]  [BUGGY]  cc.addOp( ":. ",  true);  [CE]  cannot  find  symbol  rhsContext  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":. ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":. ",  true);	  cc.addOp(   ":   ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	2	None	replace
787	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  IN_FOR_INIT_CLAUSE.getJSDocInfo());  [CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  IN_FOR_INIT_CLAUSE.getJSDocInfo());  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  IN_FOR_INIT_CLAUSE.getJSDocInfo());	  Context    rhsContext    =    new    Context(context.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  IN_FOR_INIT_CLAUSE	42	None	replace
788	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Context.STATEMENT);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  Context.STATEMENT);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Context.STATEMENT);	  int    p    =    NodeUtil.precedence(type,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	150	None	replace
789	[BUG]  [BUGGY]  int  rhsContext  =  context.STATEMENT;  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  rhsContext  =  context.STATEMENT;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    int    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  incompatible  types	31	None	replace
790	[BUG]  [BUGGY]  int  p  =  NodeUtil.opToStrNoFail(type),  Context.OTHER);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.opToStrNoFail(type),  Context.OTHER);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.opToStrNoFail(type),  Context.OTHER);	  int    p    =    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  ';'  expected	169	None	replace
791	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER,  1);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER,  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER,  1);	  int    p    =    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  ';'  expected	169	None	replace
792	[BUG]  [BUGGY]  cc.addOp( ".s.IFJDCS ".charAt(p));  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ".s.IFJDCS ".charAt(p));  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ".s.IFJDCS ".charAt(p));	          cc.addOp(       "?       ",    true);    cc.addOp('?',    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	22	None	replace
793	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  false);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getFirstChild(),  false);	  Context    rhsContext    =    new    Context(context,    n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	184	None	replace
794	[BUG]  [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp('?',  true);  cc.addOp(   "?   ",  true);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          cc.addOp(     "?     ",    true);    cc.addOp(     "?     ",  true);  cc.addOp('?',  true);  cc.addOp(   "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                cc.addOp(       "?       ",        true);        cc.addOp(       "?       ",    true);    cc.addOp('?',  true);  cc.addOp(   "?   ",  true);	  	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	17	None	add
795	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expecting  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expecting  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expecting	  	non-compiled	[CE]  not  a  statement	94	None	add
796	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	94	5	add
797	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	94	5	add
798	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expect  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expect  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expect	  	non-compiled	[CE]  not  a  statement	94	None	add
799	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	94	5	add
800	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  2);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	94	5	add
801	[BUG]  [BUGGY]  if(p  ==  0)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  ==  0)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  ==  0)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  }	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	176	None	replace
802	[BUG]  [BUGGY]  if(p  ==  1)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  ==  1)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  ==  1)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  }	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	176	None	replace
803	[BUG]  [BUGGY]  if(p  ==  0)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  Context.OTHER);  }  [CE]  cannot  find  symbol  rhsContext  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  ==  0)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  Context.OTHER);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  ==  0)  {  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  Context.OTHER);  }	          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	176	None	replace
804	[BUG]  [BUGGY]  if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  ==  1)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	18	None	replace
805	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	18	None	replace
806	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  junit.framework.ComparisonFailure:  expected  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( "?   ",  true);  }  else  {  junit.framework.ComparisonFailure:  expected	          cc.addOp(       "?       ",    true);    cc.addOp(       "?       ",    true);    	non-compiled	[CE]  not  a  statement	18	None	replace
807	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type,  Context.OTHER);	  Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	103	None	replace
808	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type),  Context.OTHER);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type),  Context.OTHER);	  Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  ';'  expected	103	None	replace
809	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type  +  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Integer  p  =  NodeUtil.precedence(type  +  1);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type  +  1);	  Integer    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	103	None	replace
810	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(type,  Context.STATEMENT);  [CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  firstCount  =  NodeUtil.precedence(type,  Context.STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(type,  Context.STATEMENT);	  int    firstCount    =    NodeUtil.precedence(type);    	non-compiled	[CE]  method  precedence  in  class  NodeUtil  cannot  be  applied  to  given  types;	127	None	replace
811	[BUG]  [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [CE]  unclosed  string  literal  [FE]                junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	if(p  >  0)  {  cc.addOp( "?   ",  true);  cc.addOp( ",  true);  }  else  {  addExpr(first,  p  +  1,  context);  }	          cc.addOp(       "?       ",    true);    cc.addOp(   ",    true);    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
812	[BUG]  [BUGGY]  cc.addOp( ":   ".equals(p),  p);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  cc.addOp( ":   ".equals(p),  p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ":   ".equals(p),  p);	  cc.addOp(   ":   ".equals(p));    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	3	None	replace
813	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context,  false);  [CE]  method  getContextForNoInOperator  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(context,  false);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator(context,  false);	  Context    rhsContext    =    Context.START_OF_EXPR;    	non-compiled	[CE]  method  getContextForNoInOperator  in  class  CodeGenerator  cannot  be  applied  to  given  types;	111	None	replace
814	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContextForNoInOperator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContextForNoInOperator();  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContextForNoInOperator();	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
815	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContextForNoInOperator(context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentStatementContextForNoInOperator(context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContextForNoInOperator(context);	  Context    rhsContext    =    getCurrentStatementContext();    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
816	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  Node  first  =  node.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  Node  first  =  node.getFirstChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  Node  first  =  node.getFirstChild();	  Node    first    =    node.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	93	None	replace
817	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  first  =  n.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  1);  Node  first  =  n.getFirstChild();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  Node  first  =  n.getFirstChild();	  Node    first    =    node.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	93	None	replace
818	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(n);  setExpr(first,  p  +  1,  context);  [CE]  method  getContextForNoInOperator  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoInOperator(n);  setExpr(first,  p  +  1,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoInOperator(n);  setExpr(first,  p  +  1,  context);	  Context    rhsContext    =    context.OTHER;    Context    rhsContext    =    context.OTHER;    setExpr(first,    p    +    1,    context);    	non-compiled	[CE]  method  getContextForNoInOperator  in  class  CodeGenerator  cannot  be  applied  to  given  types;	59	None	replace
819	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  context,  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  context,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  context,  p);	  Context    rhsContext    =    new    Context(n.getFirstChild(),    context);    	non-compiled	[CE]  enum  types  may  not  be  instantiated	35	None	replace
820	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)+  2;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type)+  2;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)+  2;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)+    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	119	None	replace
821	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getRootContext(context);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContext().getRootContext(context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext().getRootContext(context);	  Context    cc    =    getCurrentContext().getRootContext();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
822	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT  |  Context.OTHER;  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  STATEMENT  |  Context.OTHER;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT  |  Context.OTHER;	  Context    rhsContext    =    Context.OTHER    |    Context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	173	None	replace
823	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  4);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  p  =  NodeUtil.precedence(type,  4);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  4);	  int    p    =    NodeUtil.precedence(type,    1);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	114	None	replace
824	[BUG]  [BUGGY]  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER,  context);  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  NodeUtil.precedence(type),  Context.OTHER,  context);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	135	None	replace
825	[BUG]  [BUGGY]  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER,  p);  [CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER,  p);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  NodeUtil.precedence(type),  Context.OTHER,  p);	  addExpr(first,    NodeUtil.precedence(type),    Context.OTHER);    	non-compiled	[CE]  method  addExpr  in  class  CodeGenerator  cannot  be  applied  to  given  types;	135	None	replace
826	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  +  2;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.STATEMENT  +  2;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  +  2;	  Context    rhsContext    =    Context.STATEMENT    +    1;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	49	None	replace
827	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(n,  context);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNode(n,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNode(n,  context);	  Context    rhsContext    =    getCurrentContextForNode();    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
828	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  context);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context,  context);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context,  context);	  Context    rhsContext    =    getCurrentContextForNoInOperator(context);    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
829	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    cc.addOp( "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  	175	5	add
830	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    cc.addOp( "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  	175	5	add
831	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expecting  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expecting  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expecting	  	non-compiled	[CE]  not  a  statement	175	None	add
832	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  cc.addOp( ": ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    cc.addOp( ": ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  	175	5	add
833	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  cc.addOp( ": ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  cc.addOp( ": ",  true);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    cc.addOp( ": ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  	175	5	add
834	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expect  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp(   "?     ",  true);  addExpr(first,  p  +  1,  context);  junit.framework.ComparisonFailure:  expect  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        3);        addExpr(first,        p        +        1,        context);        cc.addOp(   "?       ",    true);    addExpr(first,    p    +    1,    context);    junit.framework.ComparisonFailure:  expect	  	non-compiled	[CE]  not  a  statement	175	None	add
835	[BUG]  [BUGGY]  char  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  char  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	char  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)-    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	117	None	replace
836	[BUG]  [BUGGY]  boolean  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  boolean  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);	  int    p    =    NodeUtil.precedence(type)-    1;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	117	None	replace
837	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
838	[BUG]  [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]          Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	                Preconditions.checkState(childCount        ==        1);        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	10	5	add
839	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.Start_OF_EXPR;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3    [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  Context  rhsContext  =  Context.Start_OF_EXPR;  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.START_OF_EXPR;    Context  rhsContext  =  Context.Start_OF_EXPR;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	110	None	add
840	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type,  Context.OTHER);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                        ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(type,  Context.OTHER);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type,  Context.OTHER);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
841	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type,  Context.STATEMENT);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                          ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  int  first  =  NodeUtil.precedence(type,  Context.STATEMENT);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type,  Context.STATEMENT);	  int    first    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	104	None	replace
842	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n,  p);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n,  p);  [BUGGY]      addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  n,  p);	  Context    rhsContext    =    getContextForNoChild(context,    n);    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
843	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]                IllegalStateException      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	          Preconditions.checkState(childCount    ==    1);    int    childCount    =    NodeUtil.precedence(type);    Preconditions.checkState(childCount    ==    1);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	15	None	replace
844	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance(context,  false);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  getCurrentContextInstance(context,  false);  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance(context,  false);	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
845	[BUG]  [BUGGY]  Context  cc  =  createCurrentContextInstance();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);      [BUGGY]  Context  cc  =  createCurrentContextInstance();  [BUGGY]      Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(     "?     ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(     ":     ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  createCurrentContextInstance();	  Context    cc    =    getCurrentContextInstance();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
